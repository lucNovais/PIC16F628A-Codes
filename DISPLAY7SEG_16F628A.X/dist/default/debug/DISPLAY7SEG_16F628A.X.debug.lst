

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat May 28 16:06:38 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.36
    13                           ; Generated 28/01/2022 GMT
    14                           ; 
    15                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F628A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0015                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001F                     	;# 
    71  0081                     	;# 
    72  0085                     	;# 
    73  0086                     	;# 
    74  008C                     	;# 
    75  008E                     	;# 
    76  0092                     	;# 
    77  0098                     	;# 
    78  0099                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009F                     	;# 
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  008C                     	;# 
   112  008E                     	;# 
   113  0092                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009F                     	;# 
   121  0006                     _PORTB	set	6
   122  0086                     _TRISB	set	134
   123                           
   124                           	psect	cinit
   125  07FE                     start_initialization:	
   126                           ; #config settings
   127                           
   128  07FE                     __initialization:
   129  07FE                     end_of_initialization:	
   130                           ;End of C runtime variable initialization code
   131                           
   132  07FE                     __end_of__initialization:
   133  07FE  0183               	clrf	3
   134  07FF  2F50               	ljmp	_main	;jump to C main() function
   135                           
   136                           	psect	cstackCOMMON
   137  0070                     __pcstackCOMMON:
   138  0070                     ?_display7s:
   139  0070                     ??_display7s:	
   140                           ; 1 bytes @ 0x0
   141                           
   142  0070                     ?_main:	
   143                           ; 1 bytes @ 0x0
   144                           
   145                           
   146                           ; 1 bytes @ 0x0
   147  0070                     	ds	2
   148  0072                     display7s@v:
   149                           
   150                           ; 1 bytes @ 0x2
   151  0072                     	ds	1
   152  0073                     ??_main:
   153                           
   154                           ; 1 bytes @ 0x3
   155  0073                     	ds	2
   156  0075                     main@count:
   157                           
   158                           ; 2 bytes @ 0x5
   159  0075                     	ds	2
   160  0077                     main@tmp:
   161                           
   162                           ; 1 bytes @ 0x7
   163  0077                     	ds	1
   164  0078                     main@msb:
   165                           
   166                           ; 1 bytes @ 0x8
   167  0078                     	ds	1
   168                           
   169                           	psect	maintext
   170  0750                     __pmaintext:	
   171 ;;
   172 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   173 ;;
   174 ;; *************** function _main *****************
   175 ;; Defined at:
   176 ;;		line 29 in file "Contador_Display.c"
   177 ;; Parameters:    Size  Location     Type
   178 ;;		None
   179 ;; Auto vars:     Size  Location     Type
   180 ;;  count           2    5[COMMON] unsigned short 
   181 ;;  msb             1    8[COMMON] unsigned char 
   182 ;;  tmp             1    7[COMMON] unsigned char 
   183 ;; Return value:  Size  Location     Type
   184 ;;                  1    wreg      void 
   185 ;; Registers used:
   186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   187 ;; Tracked objects:
   188 ;;		On entry : B00/0
   189 ;;		On exit  : 0/0
   190 ;;		Unchanged: 0/0
   191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   192 ;;      Params:         0       0       0       0
   193 ;;      Locals:         4       0       0       0
   194 ;;      Temps:          2       0       0       0
   195 ;;      Totals:         6       0       0       0
   196 ;;Total ram usage:        6 bytes
   197 ;; Hardware stack levels required when called: 1
   198 ;; This function calls:
   199 ;;		_display7s
   200 ;; This function is called by:
   201 ;;		Startup code after reset
   202 ;; This function uses a non-reentrant model
   203 ;;
   204                           
   205  0750                     _main:	
   206                           ;psect for function _main
   207                           
   208  0750                     l715:	
   209                           ;incstack = 0
   210                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   211                           
   212                           
   213                           ;Contador_Display.c: 30:     unsigned char tmp;;Contador_Display.c: 31:     unsigned cha
      +                          r msb;;Contador_Display.c: 32:     unsigned short int count = 0;
   214  0750  01F5               	clrf	main@count
   215  0751  01F6               	clrf	main@count+1
   216                           
   217                           ;Contador_Display.c: 33:     TRISB = 0x00;
   218  0752  1683               	bsf	3,5	;RP0=1, select bank1
   219  0753  1303               	bcf	3,6	;RP1=0, select bank1
   220  0754  0186               	clrf	6	;volatile
   221  0755                     l717:
   222                           
   223                           ;Contador_Display.c: 36:         if (tmp < 0x0A) {
   224  0755  300A               	movlw	10
   225  0756  0277               	subwf	main@tmp,w
   226  0757  1803               	skipnc
   227  0758  2F5A               	goto	u11
   228  0759  2F5B               	goto	u10
   229  075A                     u11:
   230  075A  2F90               	goto	l731
   231  075B                     u10:
   232  075B  2F80               	goto	l37
   233  075C                     l721:
   234                           
   235                           ;Contador_Display.c: 38:                 PORTB = display7s(tmp & 0x0F) | 0x10;
   236  075C  0877               	movf	main@tmp,w
   237  075D  390F               	andlw	15
   238  075E  279F               	fcall	_display7s
   239  075F  3810               	iorlw	16
   240  0760  1283               	bcf	3,5	;RP0=0, select bank0
   241  0761  1303               	bcf	3,6	;RP1=0, select bank0
   242  0762  0086               	movwf	6	;volatile
   243  0763                     l723:
   244                           
   245                           ;Contador_Display.c: 41:                 _delay((unsigned long)((7)*(4000000/4000.0)));
   246  0763  300A               	movlw	10
   247  0764  00F4               	movwf	??_main+1
   248  0765  3015               	movlw	21
   249  0766  00F3               	movwf	??_main
   250  0767                     u47:
   251  0767  0BF3               	decfsz	??_main,f
   252  0768  2F67               	goto	u47
   253  0769  0BF4               	decfsz	??_main+1,f
   254  076A  2F67               	goto	u47
   255  076B  2F6C               	nop2
   256  076C                     l725:
   257                           
   258                           ;Contador_Display.c: 42:                 PORTB = display7s(msb);
   259  076C  0878               	movf	main@msb,w
   260  076D  279F               	fcall	_display7s
   261  076E  1283               	bcf	3,5	;RP0=0, select bank0
   262  076F  1303               	bcf	3,6	;RP1=0, select bank0
   263  0770  0086               	movwf	6	;volatile
   264                           
   265                           ;Contador_Display.c: 44:                 _delay((unsigned long)((8)*(4000000/4000.0)));
   266  0771  300B               	movlw	11
   267  0772  00F4               	movwf	??_main+1
   268  0773  3062               	movlw	98
   269  0774  00F3               	movwf	??_main
   270  0775                     u57:
   271  0775  0BF3               	decfsz	??_main,f
   272  0776  2F75               	goto	u57
   273  0777  0BF4               	decfsz	??_main+1,f
   274  0778  2F75               	goto	u57
   275  0779  0000               	nop
   276                           
   277                           ;Contador_Display.c: 45:                 count++;
   278  077A  3001               	movlw	1
   279  077B  07F5               	addwf	main@count,f
   280  077C  1803               	skipnc
   281  077D  0AF6               	incf	main@count+1,f
   282  077E  3000               	movlw	0
   283  077F  07F6               	addwf	main@count+1,f
   284  0780                     l37:	
   285                           ;Contador_Display.c: 46:             }
   286                           
   287                           
   288                           ;Contador_Display.c: 37:             while (count < 60) {
   289  0780  3000               	movlw	0
   290  0781  0276               	subwf	main@count+1,w
   291  0782  303C               	movlw	60
   292  0783  1903               	skipnz
   293  0784  0275               	subwf	main@count,w
   294  0785  1C03               	skipc
   295  0786  2F88               	goto	u21
   296  0787  2F89               	goto	u20
   297  0788                     u21:
   298  0788  2F5C               	goto	l721
   299  0789                     u20:
   300  0789                     l727:
   301                           
   302                           ;Contador_Display.c: 47:             count = 0;
   303  0789  01F5               	clrf	main@count
   304  078A  01F6               	clrf	main@count+1
   305  078B                     l729:
   306                           
   307                           ;Contador_Display.c: 48:             tmp++;
   308  078B  3001               	movlw	1
   309  078C  00F3               	movwf	??_main
   310  078D  0873               	movf	??_main,w
   311  078E  07F7               	addwf	main@tmp,f
   312                           
   313                           ;Contador_Display.c: 49:         } else {
   314  078F  2F55               	goto	l717
   315  0790                     l731:
   316                           
   317                           ;Contador_Display.c: 50:             if (msb < 0x05)
   318  0790  3005               	movlw	5
   319  0791  0278               	subwf	main@msb,w
   320  0792  1803               	skipnc
   321  0793  2F95               	goto	u31
   322  0794  2F96               	goto	u30
   323  0795                     u31:
   324  0795  2F9B               	goto	l735
   325  0796                     u30:
   326  0796                     l733:
   327                           
   328                           ;Contador_Display.c: 51:                 msb++;
   329  0796  3001               	movlw	1
   330  0797  00F3               	movwf	??_main
   331  0798  0873               	movf	??_main,w
   332  0799  07F8               	addwf	main@msb,f
   333  079A  2F9C               	goto	l42
   334  079B                     l735:
   335                           
   336                           ;Contador_Display.c: 53:                 msb = 0;
   337  079B  01F8               	clrf	main@msb
   338  079C                     l42:
   339                           
   340                           ;Contador_Display.c: 54:             tmp = 0;
   341  079C  01F7               	clrf	main@tmp
   342  079D  2F55               	goto	l717
   343  079E  2800               	ljmp	start
   344  079F                     __end_of_main:
   345                           
   346                           	psect	text1
   347  079F                     __ptext1:	
   348 ;; *************** function _display7s *****************
   349 ;; Defined at:
   350 ;;		line 19 in file "display7s.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;  v               1    wreg     unsigned char 
   353 ;; Auto vars:     Size  Location     Type
   354 ;;  v               1    2[COMMON] unsigned char 
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      unsigned char 
   357 ;; Registers used:
   358 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   364 ;;      Params:         0       0       0       0
   365 ;;      Locals:         1       0       0       0
   366 ;;      Temps:          2       0       0       0
   367 ;;      Totals:         3       0       0       0
   368 ;;Total ram usage:        3 bytes
   369 ;; Hardware stack levels used: 1
   370 ;; This function calls:
   371 ;;		Nothing
   372 ;; This function is called by:
   373 ;;		_main
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377  079F                     _display7s:	
   378                           ;psect for function _display7s
   379                           
   380                           
   381                           ;incstack = 0
   382                           ; Regs used in _display7s: [wreg-fsr0h+status,2+status,0]
   383                           ;display7s@v stored from wreg
   384  079F  00F2               	movwf	display7s@v
   385  07A0                     l637:
   386                           
   387                           ;display7s.c: 19: unsigned char display7s(unsigned char v);display7s.c: 20: {;display7s.
      +                          c: 21:   switch(v)
   388  07A0  2FC3               	goto	l709
   389  07A1                     l639:
   390                           
   391                           ;display7s.c: 24:       return 0xEE;
   392  07A1  30EE               	movlw	238
   393  07A2  2FFD               	goto	l5
   394  07A3                     l643:
   395                           
   396                           ;display7s.c: 26:       return 0x28;
   397  07A3  3028               	movlw	40
   398  07A4  2FFD               	goto	l5
   399  07A5                     l647:
   400                           
   401                           ;display7s.c: 28:       return 0xCD;
   402  07A5  30CD               	movlw	205
   403  07A6  2FFD               	goto	l5
   404  07A7                     l651:
   405                           
   406                           ;display7s.c: 30:       return 0x6D;
   407  07A7  306D               	movlw	109
   408  07A8  2FFD               	goto	l5
   409  07A9                     l655:
   410                           
   411                           ;display7s.c: 32:       return 0x2B;
   412  07A9  302B               	movlw	43
   413  07AA  2FFD               	goto	l5
   414  07AB                     l659:
   415                           
   416                           ;display7s.c: 34:       return 0x67;
   417  07AB  3067               	movlw	103
   418  07AC  2FFD               	goto	l5
   419  07AD                     l663:
   420                           
   421                           ;display7s.c: 36:       return 0xE7;
   422  07AD  30E7               	movlw	231
   423  07AE  2FFD               	goto	l5
   424  07AF                     l667:
   425                           
   426                           ;display7s.c: 38:       return 0x2C;
   427  07AF  302C               	movlw	44
   428  07B0  2FFD               	goto	l5
   429  07B1                     l671:
   430                           
   431                           ;display7s.c: 40:       return 0xEF;
   432  07B1  30EF               	movlw	239
   433  07B2  2FFD               	goto	l5
   434  07B3                     l675:
   435                           
   436                           ;display7s.c: 42:       return 0x6F;
   437  07B3  306F               	movlw	111
   438  07B4  2FFD               	goto	l5
   439  07B5                     l679:
   440                           
   441                           ;display7s.c: 44:       return 0xAF;
   442  07B5  30AF               	movlw	175
   443  07B6  2FFD               	goto	l5
   444  07B7                     l683:
   445                           
   446                           ;display7s.c: 46:       return 0xE3;
   447  07B7  30E3               	movlw	227
   448  07B8  2FFD               	goto	l5
   449  07B9                     l687:
   450                           
   451                           ;display7s.c: 48:       return 0xC6;
   452  07B9  30C6               	movlw	198
   453  07BA  2FFD               	goto	l5
   454  07BB                     l691:
   455                           
   456                           ;display7s.c: 50:       return 0xE9;
   457  07BB  30E9               	movlw	233
   458  07BC  2FFD               	goto	l5
   459  07BD                     l695:
   460                           
   461                           ;display7s.c: 52:       return 0xC7;
   462  07BD  30C7               	movlw	199
   463  07BE  2FFD               	goto	l5
   464  07BF                     l699:
   465                           
   466                           ;display7s.c: 54:       return 0x87;
   467  07BF  3087               	movlw	135
   468  07C0  2FFD               	goto	l5
   469  07C1                     l703:
   470                           
   471                           ;display7s.c: 56:       return 0;
   472  07C1  3000               	movlw	0
   473  07C2  2FFD               	goto	l5
   474  07C3                     l709:
   475  07C3  0872               	movf	display7s@v,w
   476  07C4  00F0               	movwf	??_display7s
   477  07C5  01F1               	clrf	??_display7s+1
   478                           
   479                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   480                           ; Switch size 1, requested type "simple"
   481                           ; Number of cases is 1, Range of values is 0 to 0
   482                           ; switch strategies available:
   483                           ; Name         Instructions Cycles
   484                           ; simple_byte            4     3 (average)
   485                           ; direct_byte            7     6 (fixed)
   486                           ; jumptable            260     6 (fixed)
   487                           ;	Chosen strategy is simple_byte
   488  07C6  0871               	movf	??_display7s+1,w
   489  07C7  3A00               	xorlw	0	; case 0
   490  07C8  1903               	skipnz
   491  07C9  2FCB               	goto	l757
   492  07CA  2FC1               	goto	l703
   493  07CB                     l757:
   494                           
   495                           ; Switch size 1, requested type "simple"
   496                           ; Number of cases is 16, Range of values is 0 to 15
   497                           ; switch strategies available:
   498                           ; Name         Instructions Cycles
   499                           ; direct_byte           22     6 (fixed)
   500                           ; simple_byte           49    25 (average)
   501                           ; jumptable            260     6 (fixed)
   502                           ;	Chosen strategy is simple_byte
   503  07CB  0870               	movf	??_display7s,w
   504  07CC  3A00               	xorlw	0	; case 0
   505  07CD  1903               	skipnz
   506  07CE  2FA1               	goto	l639
   507  07CF  3A01               	xorlw	1	; case 1
   508  07D0  1903               	skipnz
   509  07D1  2FA3               	goto	l643
   510  07D2  3A03               	xorlw	3	; case 2
   511  07D3  1903               	skipnz
   512  07D4  2FA5               	goto	l647
   513  07D5  3A01               	xorlw	1	; case 3
   514  07D6  1903               	skipnz
   515  07D7  2FA7               	goto	l651
   516  07D8  3A07               	xorlw	7	; case 4
   517  07D9  1903               	skipnz
   518  07DA  2FA9               	goto	l655
   519  07DB  3A01               	xorlw	1	; case 5
   520  07DC  1903               	skipnz
   521  07DD  2FAB               	goto	l659
   522  07DE  3A03               	xorlw	3	; case 6
   523  07DF  1903               	skipnz
   524  07E0  2FAD               	goto	l663
   525  07E1  3A01               	xorlw	1	; case 7
   526  07E2  1903               	skipnz
   527  07E3  2FAF               	goto	l667
   528  07E4  3A0F               	xorlw	15	; case 8
   529  07E5  1903               	skipnz
   530  07E6  2FB1               	goto	l671
   531  07E7  3A01               	xorlw	1	; case 9
   532  07E8  1903               	skipnz
   533  07E9  2FB3               	goto	l675
   534  07EA  3A03               	xorlw	3	; case 10
   535  07EB  1903               	skipnz
   536  07EC  2FB5               	goto	l679
   537  07ED  3A01               	xorlw	1	; case 11
   538  07EE  1903               	skipnz
   539  07EF  2FB7               	goto	l683
   540  07F0  3A07               	xorlw	7	; case 12
   541  07F1  1903               	skipnz
   542  07F2  2FB9               	goto	l687
   543  07F3  3A01               	xorlw	1	; case 13
   544  07F4  1903               	skipnz
   545  07F5  2FBB               	goto	l691
   546  07F6  3A03               	xorlw	3	; case 14
   547  07F7  1903               	skipnz
   548  07F8  2FBD               	goto	l695
   549  07F9  3A01               	xorlw	1	; case 15
   550  07FA  1903               	skipnz
   551  07FB  2FBF               	goto	l699
   552  07FC  2FC1               	goto	l703
   553  07FD                     l5:
   554  07FD  0008               	return
   555  07FE                     __end_of_display7s:
   556  007E                     btemp	set	126	;btemp
   557  007E                     wtemp0	set	126
   558                           
   559                           	psect	idloc
   560                           
   561                           ;Config register IDLOC0 @ 0x2000
   562                           ;	unspecified, using default values
   563  2000                     	org	8192
   564  2000  3FFF               	dw	16383
   565                           
   566                           ;Config register IDLOC1 @ 0x2001
   567                           ;	unspecified, using default values
   568  2001                     	org	8193
   569  2001  3FFF               	dw	16383
   570                           
   571                           ;Config register IDLOC2 @ 0x2002
   572                           ;	unspecified, using default values
   573  2002                     	org	8194
   574  2002  3FFF               	dw	16383
   575                           
   576                           ;Config register IDLOC3 @ 0x2003
   577                           ;	unspecified, using default values
   578  2003                     	org	8195
   579  2003  3FFF               	dw	16383
   580                           
   581                           	psect	config
   582                           
   583                           ;Config register CONFIG @ 0x2007
   584                           ;	Oscillator Selection bits
   585                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   586                           ;	Watchdog Timer Enable bit
   587                           ;	WDTE = OFF, WDT disabled
   588                           ;	Power-up Timer Enable bit
   589                           ;	PWRTE = OFF, PWRT disabled
   590                           ;	RA5/MCLR/VPP Pin Function Select bit
   591                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   592                           ;	Brown-out Detect Enable bit
   593                           ;	BOREN = OFF, BOD disabled
   594                           ;	Low-Voltage Programming Enable bit
   595                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   596                           ;	Data EE Memory Code Protection bit
   597                           ;	CPD = OFF, Data memory code protection off
   598                           ;	Flash Program Memory Code Protection bit
   599                           ;	CP = OFF, Code protection off
   600  2007                     	org	8199
   601  2007  3F29               	dw	16169

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display7s

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0      90
                                              3 COMMON     6     6      0
                          _display7s
 ---------------------------------------------------------------------------------
 (1) _display7s                                            3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display7s

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat May 28 16:06:38 2022

                      l5 07FD                       l42 079C                       l37 0780  
                     u10 075B                       u11 075A                       u20 0789  
                     u21 0788                       u30 0796                       u31 0795  
                     u47 0767                       u57 0775                      l703 07C1  
                    l721 075C                      l651 07A7                      l643 07A3  
                    l723 0763                      l731 0790                      l715 0750  
                    l709 07C3                      l637 07A0                      l733 0796  
                    l725 076C                      l717 0755                      l671 07B1  
                    l663 07AD                      l655 07A9                      l647 07A5  
                    l639 07A1                      l735 079B                      l727 0789  
                    l729 078B                      l691 07BB                      l683 07B7  
                    l675 07B3                      l667 07AF                      l659 07AB  
                    l757 07CB                      l695 07BD                      l687 07B9  
                    l679 07B5                      l699 07BF                     _main 0750  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006                    _TRISB 0086                    status 0003  
                  wtemp0 007E          __initialization 07FE             __end_of_main 079F  
                 ??_main 0073  __end_of__initialization 07FE           __pcstackCOMMON 0070  
             __pmaintext 0750        __end_of_display7s 07FE                  __ptext1 079F  
                main@msb 0078                  main@tmp 0077     end_of_initialization 07FE  
             display7s@v 0072      start_initialization 07FE                ___latbits 0000  
              _display7s 079F               ?_display7s 0070                main@count 0075  
            ??_display7s 0070  
