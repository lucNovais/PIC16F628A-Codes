

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jun 14 17:36:35 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.40
    50                           ; Generated 17/11/2021 GMT
    51                           ; 
    52                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F877A Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  009F                     	;# 
   258  010C                     	;# 
   259  010D                     	;# 
   260  010E                     	;# 
   261  010F                     	;# 
   262  018C                     	;# 
   263  018D                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0008                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000D                     	;# 
   278  000E                     	;# 
   279  000E                     	;# 
   280  000F                     	;# 
   281  0010                     	;# 
   282  0011                     	;# 
   283  0012                     	;# 
   284  0013                     	;# 
   285  0014                     	;# 
   286  0015                     	;# 
   287  0015                     	;# 
   288  0016                     	;# 
   289  0017                     	;# 
   290  0018                     	;# 
   291  0019                     	;# 
   292  001A                     	;# 
   293  001B                     	;# 
   294  001B                     	;# 
   295  001C                     	;# 
   296  001D                     	;# 
   297  001E                     	;# 
   298  001F                     	;# 
   299  0081                     	;# 
   300  0085                     	;# 
   301  0086                     	;# 
   302  0087                     	;# 
   303  0088                     	;# 
   304  0089                     	;# 
   305  008C                     	;# 
   306  008D                     	;# 
   307  008E                     	;# 
   308  0091                     	;# 
   309  0092                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0098                     	;# 
   313  0099                     	;# 
   314  009C                     	;# 
   315  009D                     	;# 
   316  009E                     	;# 
   317  009F                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  010F                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  010C                     	;# 
   379  010D                     	;# 
   380  010E                     	;# 
   381  010F                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444                           
   445                           	psect	idataBANK1
   446  07FE                     __pidataBANK1:
   447                           
   448                           ;initializer for _capacidade
   449  07FE  34B8               	retlw	184
   450  07FF  340B               	retlw	11
   451  000B                     _INTCONbits	set	11
   452  0003                     _STATUSbits	set	3
   453  0009                     _PORTEbits	set	9
   454  0008                     _PORTD	set	8
   455  001A                     _RCREG	set	26
   456  000C                     _PIR1bits	set	12
   457  0019                     _TXREG	set	25
   458  0018                     _RCSTAbits	set	24
   459  0006                     _PORTBbits	set	6
   460  0033                     _RB3	set	51
   461  005C                     _INTE	set	92
   462  005F                     _GIE	set	95
   463  0059                     _INTF	set	89
   464  0098                     _TXSTAbits	set	152
   465  0099                     _SPBRG	set	153
   466  0086                     _TRISB	set	134
   467  0089                     _TRISEbits	set	137
   468  0088                     _TRISD	set	136
   469  0087                     _TRISCbits	set	135
   470  040E                     _INTEDG	set	1038
   471  010C                     _EEDATA	set	268
   472  010D                     _EEADR	set	269
   473  018D                     _EECON2	set	397
   474  018C                     _EECON1	set	396
   475  018C                     _EECON1bits	set	396
   476                           
   477                           	psect	strings
   478  0800                     __pstrings:
   479  0800                     stringtab:
   480  0800                     __stringtab:
   481                           
   482                           ;	String table - string pointers are 1 byte each
   483  0800  1BFF               	btfsc	btemp+1,7
   484  0801  280A               	ljmp	stringcode
   485  0802  1383               	bcf	3,7
   486  0803  187F               	btfsc	btemp+1,0
   487  0804  1783               	bsf	3,7
   488  0805  0800               	movf	0,w
   489  0806  0A84               	incf	4,f
   490  0807  1903               	skipnz
   491  0808  0AFF               	incf	btemp+1,f
   492  0809  0008               	return
   493  080A                     stringcode:
   494  080A                     stringdir:
   495  080A  3008               	movlw	high stringdir
   496  080B  008A               	movwf	10
   497  080C  0804               	movf	4,w
   498  080D  0A84               	incf	4,f
   499  080E  0782               	addwf	2,f
   500  080F                     __stringbase:
   501  080F  3400               	retlw	0
   502  0810                     __end_of__stringtab:
   503  0810                     STR_5:
   504  0810  3450               	retlw	80	;'P'
   505  0811  3472               	retlw	114	;'r'
   506  0812  3465               	retlw	101	;'e'
   507  0813  3473               	retlw	115	;'s'
   508  0814  3420               	retlw	32	;' '
   509  0815  3452               	retlw	82	;'R'
   510  0816  3430               	retlw	48	;'0'
   511  0817  342C               	retlw	44	;','
   512  0818  3452               	retlw	82	;'R'
   513  0819  3431               	retlw	49	;'1'
   514  081A  3420               	retlw	32	;' '
   515  081B  346F               	retlw	111	;'o'
   516  081C  3475               	retlw	117	;'u'
   517  081D  3420               	retlw	32	;' '
   518  081E  3452               	retlw	82	;'R'
   519  081F  3432               	retlw	50	;'2'
   520  0820  3400               	retlw	0
   521  0821                     STR_17:
   522  0821  3428               	retlw	40	;'('
   523  0822  3452               	retlw	82	;'R'
   524  0823  3430               	retlw	48	;'0'
   525  0824  3429               	retlw	41	;')'
   526  0825  3453               	retlw	83	;'S'
   527  0826  3449               	retlw	73	;'I'
   528  0827  344D               	retlw	77	;'M'
   529  0828  342C               	retlw	44	;','
   530  0829  3420               	retlw	32	;' '
   531  082A  3428               	retlw	40	;'('
   532  082B  3452               	retlw	82	;'R'
   533  082C  3431               	retlw	49	;'1'
   534  082D  3429               	retlw	41	;')'
   535  082E  344E               	retlw	78	;'N'
   536  082F  3441               	retlw	65	;'A'
   537  0830  344F               	retlw	79	;'O'
   538  0831  3400               	retlw	0
   539  0832                     STR_22:
   540  0832  3450               	retlw	80	;'P'
   541  0833  3472               	retlw	114	;'r'
   542  0834  3465               	retlw	101	;'e'
   543  0835  3473               	retlw	115	;'s'
   544  0836  3420               	retlw	32	;' '
   545  0837  3452               	retlw	82	;'R'
   546  0838  3430               	retlw	48	;'0'
   547  0839  3420               	retlw	32	;' '
   548  083A  3470               	retlw	112	;'p'
   549  083B  342E               	retlw	46	;'.'
   550  083C  3420               	retlw	32	;' '
   551  083D  3473               	retlw	115	;'s'
   552  083E  3461               	retlw	97	;'a'
   553  083F  3469               	retlw	105	;'i'
   554  0840  3472               	retlw	114	;'r'
   555  0841  3400               	retlw	0
   556  0842                     STR_8:
   557  0842  3452               	retlw	82	;'R'
   558  0843  3430               	retlw	48	;'0'
   559  0844  342B               	retlw	43	;'+'
   560  0845  342C               	retlw	44	;','
   561  0846  3452               	retlw	82	;'R'
   562  0847  3431               	retlw	49	;'1'
   563  0848  342D               	retlw	45	;'-'
   564  0849  342C               	retlw	44	;','
   565  084A  3452               	retlw	82	;'R'
   566  084B  3432               	retlw	50	;'2'
   567  084C  343E               	retlw	62	;'>'
   568  084D  342C               	retlw	44	;','
   569  084E  3452               	retlw	82	;'R'
   570  084F  3433               	retlw	51	;'3'
   571  0850  3478               	retlw	120	;'x'
   572  0851  3400               	retlw	0
   573  0852                     STR_12:
   574  0852  3441               	retlw	65	;'A'
   575  0853  3467               	retlw	103	;'g'
   576  0854  3469               	retlw	105	;'i'
   577  0855  3474               	retlw	116	;'t'
   578  0856  3461               	retlw	97	;'a'
   579  0857  3464               	retlw	100	;'d'
   580  0858  346F               	retlw	111	;'o'
   581  0859  3472               	retlw	114	;'r'
   582  085A  343A               	retlw	58	;':'
   583  085B  3420               	retlw	32	;' '
   584  085C  3400               	retlw	0
   585  085D                     STR_16:
   586  085D  3449               	retlw	73	;'I'
   587  085E  346E               	retlw	110	;'n'
   588  085F  3469               	retlw	105	;'i'
   589  0860  3463               	retlw	99	;'c'
   590  0861  3469               	retlw	105	;'i'
   591  0862  3461               	retlw	97	;'a'
   592  0863  3472               	retlw	114	;'r'
   593  0864  343F               	retlw	63	;'?'
   594  0865  3400               	retlw	0
   595  0866                     STR_3:
   596  0866  3420               	retlw	32	;' '
   597  0867  3454               	retlw	84	;'T'
   598  0868  3465               	retlw	101	;'e'
   599  0869  346D               	retlw	109	;'m'
   600  086A  3470               	retlw	112	;'p'
   601  086B  3420               	retlw	32	;' '
   602  086C  3400               	retlw	0
   603  086D                     STR_1:
   604  086D  344E               	retlw	78	;'N'
   605  086E  3469               	retlw	105	;'i'
   606  086F  3476               	retlw	118	;'v'
   607  0870  3420               	retlw	32	;' '
   608  0871  3400               	retlw	0
   609  0872                     STR_13:
   610  0872  344F               	retlw	79	;'O'
   611  0873  344E               	retlw	78	;'N'
   612  0874  3420               	retlw	32	;' '
   613  0875  3400               	retlw	0
   614  0876                     STR_14:
   615  0876  344F               	retlw	79	;'O'
   616  0877  3446               	retlw	70	;'F'
   617  0878  3446               	retlw	70	;'F'
   618  0879  3400               	retlw	0
   619  087A                     STR_2:
   620  087A  3425               	retlw	37	;'%'
   621  087B  3400               	retlw	0
   622  087C                     STR_4:
   623  087C  3443               	retlw	67	;'C'
   624  087D  3400               	retlw	0
   625  0867                     
   626                           	psect	cinit
   627  000F                     start_initialization:	
   628                           ; #config settings
   629                           
   630  000F                     __initialization:
   631                           
   632                           ; Initialize objects allocated to BANK1
   633  000F  1683               	bsf	3,5	;RP0=1, select bank1
   634  0010  1303               	bcf	3,6	;RP1=0, select bank1
   635  0011  120A  118A  27FE  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   636  0016  00D2               	movwf	__pdataBANK1& (0+127)
   637  0017  120A  118A  27FF  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   638  001C  00D3               	movwf	(__pdataBANK1+1)& (0+127)
   639                           
   640                           ; Clear objects allocated to BANK1
   641  001D  1383               	bcf	3,7	;select IRP bank0
   642  001E  30BB               	movlw	low __pbssBANK1
   643  001F  0084               	movwf	4
   644  0020  30D2               	movlw	low (__pbssBANK1+23)
   645  0021  160A  118A  24C1  120A  118A  	fcall	clear_ram0
   646                           
   647                           ; Clear objects allocated to COMMON
   648  0026  01FA               	clrf	__pbssCOMMON& (0+127)
   649  0027  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   650  0028                     end_of_initialization:	
   651                           ;End of C runtime variable initialization code
   652                           
   653  0028                     __end_of__initialization:
   654  0028  0183               	clrf	3
   655  0029  160A  118A  2F82   	ljmp	_main	;jump to C main() function
   656                           
   657                           	psect	bssCOMMON
   658  007A                     __pbssCOMMON:
   659  007A                     _valori:
   660  007A                     	ds	2
   661                           
   662                           	psect	bssBANK1
   663  00BB                     __pbssBANK1:
   664  00BB                     _setAgit:
   665  00BB                     	ds	2
   666  00BD                     _setTemp:
   667  00BD                     	ds	2
   668  00BF                     _setVolm:
   669  00BF                     	ds	2
   670  00C1                     _setEnable:
   671  00C1                     	ds	2
   672  00C3                     _ret:
   673  00C3                     	ds	1
   674  00C4                     _mostrandoTexto:
   675  00C4                     	ds	1
   676  00C5                     _enableRB3:
   677  00C5                     	ds	1
   678  00C6                     _enableRB2:
   679  00C6                     	ds	1
   680  00C7                     _enableRB1:
   681  00C7                     	ds	1
   682  00C8                     _enableRB0:
   683  00C8                     	ds	1
   684  00C9                     _valor:
   685  00C9                     	ds	1
   686  00CA                     _valorl:
   687  00CA                     	ds	1
   688  00CB                     _valorh:
   689  00CB                     	ds	1
   690  00CC                     _buff:
   691  00CC                     	ds	6
   692                           
   693                           	psect	dataBANK1
   694  00D2                     __pdataBANK1:
   695  00D2                     _capacidade:
   696  00D2                     	ds	2
   697                           
   698                           	psect	clrtext
   699  14C1                     clear_ram0:	
   700                           ;	Called with FSR containing the base address, and
   701                           ;	W with the last address+1
   702                           
   703  14C1  0064               	clrwdt	;clear the watchdog before getting into this loop
   704  14C2                     clrloop0:
   705  14C2  0180               	clrf	0	;clear RAM location pointed to by FSR
   706  14C3  0A84               	incf	4,f	;increment pointer
   707  14C4  0604               	xorwf	4,w	;XOR with final address
   708  14C5  1903               	btfsc	3,2	;have we reached the end yet?
   709  14C6  3400               	retlw	0	;all done for this memory range, return
   710  14C7  0604               	xorwf	4,w	;XOR again to restore value
   711  14C8  2CC2               	goto	clrloop0	;do the next byte
   712                           
   713                           	psect	cstackBANK1
   714  00A0                     __pcstackBANK1:
   715  00A0                     ??___fltol:
   716                           
   717                           ; 1 bytes @ 0x0
   718  00A0                     	ds	5
   719  00A5                     ?_criasetpoint:
   720  00A5                     criasetpoint@opcao:	
   721                           ; 1 bytes @ 0x5
   722                           
   723                           
   724                           ; 2 bytes @ 0x5
   725  00A5                     	ds	2
   726  00A7                     ??_criasetpoint:
   727                           
   728                           ; 1 bytes @ 0x7
   729  00A7                     	ds	3
   730  00AA                     criasetpoint@wait:
   731                           
   732                           ; 2 bytes @ 0xA
   733  00AA                     	ds	2
   734  00AC                     criasetpoint@auxAgit:
   735                           
   736                           ; 2 bytes @ 0xC
   737  00AC                     	ds	2
   738  00AE                     criasetpoint@auxVolm2:
   739                           
   740                           ; 2 bytes @ 0xE
   741  00AE                     	ds	2
   742  00B0                     criasetpoint@progressao:
   743                           
   744                           ; 2 bytes @ 0x10
   745  00B0                     	ds	2
   746  00B2                     criasetpoint@auxTemp:
   747                           
   748                           ; 2 bytes @ 0x12
   749  00B2                     	ds	2
   750  00B4                     criasetpoint@attTexto:
   751                           
   752                           ; 2 bytes @ 0x14
   753  00B4                     	ds	2
   754  00B6                     criasetpoint@auxVolm:
   755                           
   756                           ; 2 bytes @ 0x16
   757  00B6                     	ds	2
   758  00B8                     ??_telaUm:
   759                           
   760                           ; 1 bytes @ 0x18
   761  00B8                     	ds	2
   762  00BA                     ??_main:
   763                           
   764                           ; 1 bytes @ 0x1A
   765  00BA                     	ds	1
   766                           
   767                           	psect	cstackCOMMON
   768  0070                     __pcstackCOMMON:
   769  0070                     ?_serial_init:
   770  0070                     ?_serial_tx:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_lcd_init:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?_telaUm:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ?_lcd_cmd:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?_automatico:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ?_manual:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     ?_configura:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     ?_eeprom_read:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0070                     ?_EtapaCinco:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0070                     ?_RB0_RET:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0070                     ??_RB0_RET:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     ?_main:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ?_telaUmTexto:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ?_lcd_wr:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?_lcd_dat:	
   813                           ; 1 bytes @ 0x0
   814                           
   815                           
   816                           ; 1 bytes @ 0x0
   817  0070                     	ds	2
   818  0072                     ??_serial_init:
   819  0072                     ??_serial_tx:	
   820                           ; 1 bytes @ 0x2
   821                           
   822  0072                     ?_eeprom_write:	
   823                           ; 1 bytes @ 0x2
   824                           
   825  0072                     ??_eeprom_read:	
   826                           ; 1 bytes @ 0x2
   827                           
   828  0072                     ?_serial_rx:	
   829                           ; 1 bytes @ 0x2
   830                           
   831  0072                     ??_lcd_wr:	
   832                           ; 1 bytes @ 0x2
   833                           
   834  0072                     ?__Umul8_16:	
   835                           ; 1 bytes @ 0x2
   836                           
   837  0072                     ?___lwmod:	
   838                           ; 2 bytes @ 0x2
   839                           
   840  0072                     serial_tx@val:	
   841                           ; 2 bytes @ 0x2
   842                           
   843  0072                     lcd_wr@val:	
   844                           ; 1 bytes @ 0x2
   845                           
   846  0072                     eeprom_write@value:	
   847                           ; 1 bytes @ 0x2
   848                           
   849  0072                     __Umul8_16@multiplicand:	
   850                           ; 1 bytes @ 0x2
   851                           
   852  0072                     serial_rx@timeout:	
   853                           ; 1 bytes @ 0x2
   854                           
   855  0072                     ___lwmod@divisor:	
   856                           ; 2 bytes @ 0x2
   857                           
   858                           
   859                           ; 2 bytes @ 0x2
   860  0072                     	ds	1
   861  0073                     ??_eeprom_write:
   862  0073                     ??_lcd_cmd:	
   863                           ; 1 bytes @ 0x3
   864                           
   865  0073                     ??_lcd_dat:	
   866                           ; 1 bytes @ 0x3
   867                           
   868  0073                     eeprom_read@addr:	
   869                           ; 1 bytes @ 0x3
   870                           
   871                           
   872                           ; 1 bytes @ 0x3
   873  0073                     	ds	1
   874  0074                     ??_serial_rx:
   875  0074                     ??__Umul8_16:	
   876                           ; 1 bytes @ 0x4
   877                           
   878  0074                     eeprom_write@addr:	
   879                           ; 1 bytes @ 0x4
   880                           
   881  0074                     ___lwmod@dividend:	
   882                           ; 1 bytes @ 0x4
   883                           
   884                           
   885                           ; 2 bytes @ 0x4
   886  0074                     	ds	1
   887  0075                     lcd_cmd@val:
   888  0075                     lcd_dat@val:	
   889                           ; 1 bytes @ 0x5
   890                           
   891                           
   892                           ; 1 bytes @ 0x5
   893  0075                     	ds	1
   894  0076                     ??_lcd_init:
   895  0076                     ?_lcd_str:	
   896                           ; 1 bytes @ 0x6
   897                           
   898  0076                     ??___lwmod:	
   899                           ; 1 bytes @ 0x6
   900                           
   901  0076                     serial_rx@to:	
   902                           ; 1 bytes @ 0x6
   903                           
   904  0076                     lcd_str@str:	
   905                           ; 2 bytes @ 0x6
   906                           
   907                           
   908                           ; 2 bytes @ 0x6
   909  0076                     	ds	1
   910  0077                     ___lwmod@counter:
   911                           
   912                           ; 1 bytes @ 0x7
   913  0077                     	ds	1
   914  0078                     ??_lcd_str:
   915  0078                     ??___lwdiv:	
   916                           ; 1 bytes @ 0x8
   917                           
   918  0078                     ?_get_volume:	
   919                           ; 1 bytes @ 0x8
   920                           
   921  0078                     ?_get_temperatura:	
   922                           ; 2 bytes @ 0x8
   923                           
   924                           
   925                           ; 2 bytes @ 0x8
   926  0078                     	ds	1
   927  0079                     ??_itoa:
   928  0079                     lcd_str@i:	
   929                           ; 1 bytes @ 0x9
   930                           
   931                           
   932                           ; 1 bytes @ 0x9
   933  0079                     	ds	1
   934  007A                     ??_manual:
   935  007A                     ??_configura:	
   936                           ; 1 bytes @ 0xA
   937                           
   938                           
   939                           	psect	cstackBANK0
   940  0020                     __pcstackBANK0:	
   941                           ; 1 bytes @ 0xA
   942                           
   943  0020                     ??_get_volume:
   944  0020                     ??_get_temperatura:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0020                     ?___lwdiv:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0020                     ___lwdiv@divisor:	
   951                           ; 2 bytes @ 0x0
   952                           
   953  0020                     __Umul8_16@product:	
   954                           ; 2 bytes @ 0x0
   955                           
   956                           
   957                           ; 2 bytes @ 0x0
   958  0020                     	ds	2
   959  0022                     get_volume@auxh:
   960  0022                     get_temperatura@auxh:	
   961                           ; 2 bytes @ 0x2
   962                           
   963  0022                     ___lwdiv@dividend:	
   964                           ; 2 bytes @ 0x2
   965                           
   966  0022                     __Umul8_16@word_mpld:	
   967                           ; 2 bytes @ 0x2
   968                           
   969                           
   970                           ; 2 bytes @ 0x2
   971  0022                     	ds	2
   972  0024                     ___lwdiv@counter:
   973  0024                     __Umul8_16@multiplier:	
   974                           ; 1 bytes @ 0x4
   975                           
   976  0024                     get_volume@auxl:	
   977                           ; 1 bytes @ 0x4
   978                           
   979  0024                     get_temperatura@auxl:	
   980                           ; 2 bytes @ 0x4
   981                           
   982                           
   983                           ; 2 bytes @ 0x4
   984  0024                     	ds	1
   985  0025                     ___lwdiv@quotient:
   986                           
   987                           ; 2 bytes @ 0x5
   988  0025                     	ds	1
   989  0026                     get_volume@aux:
   990  0026                     get_temperatura@aux:	
   991                           ; 2 bytes @ 0x6
   992                           
   993                           
   994                           ; 2 bytes @ 0x6
   995  0026                     	ds	1
   996  0027                     ?_itoa:
   997  0027                     itoa@val:	
   998                           ; 1 bytes @ 0x7
   999                           
  1000                           
  1001                           ; 2 bytes @ 0x7
  1002  0027                     	ds	1
  1003  0028                     ?___xxtofl:
  1004  0028                     ___xxtofl@val:	
  1005                           ; 4 bytes @ 0x8
  1006                           
  1007                           
  1008                           ; 4 bytes @ 0x8
  1009  0028                     	ds	1
  1010  0029                     itoa@str:
  1011                           
  1012                           ; 1 bytes @ 0x9
  1013  0029                     	ds	1
  1014  002A                     ??_telaUmTexto:
  1015                           
  1016                           ; 1 bytes @ 0xA
  1017  002A                     	ds	2
  1018  002C                     ??___xxtofl:
  1019                           
  1020                           ; 1 bytes @ 0xC
  1021  002C                     	ds	4
  1022  0030                     ___xxtofl@sign:
  1023                           
  1024                           ; 1 bytes @ 0x10
  1025  0030                     	ds	1
  1026  0031                     ___xxtofl@exp:
  1027                           
  1028                           ; 1 bytes @ 0x11
  1029  0031                     	ds	1
  1030  0032                     ___xxtofl@arg:
  1031                           
  1032                           ; 4 bytes @ 0x12
  1033  0032                     	ds	4
  1034  0036                     ?___fldiv:
  1035  0036                     ___fldiv@a:	
  1036                           ; 4 bytes @ 0x16
  1037                           
  1038                           
  1039                           ; 4 bytes @ 0x16
  1040  0036                     	ds	4
  1041  003A                     ___fldiv@b:
  1042                           
  1043                           ; 4 bytes @ 0x1A
  1044  003A                     	ds	4
  1045  003E                     ??___fldiv:
  1046                           
  1047                           ; 1 bytes @ 0x1E
  1048  003E                     	ds	5
  1049  0043                     ___fldiv@rem:
  1050                           
  1051                           ; 4 bytes @ 0x23
  1052  0043                     	ds	4
  1053  0047                     ___fldiv@sign:
  1054                           
  1055                           ; 1 bytes @ 0x27
  1056  0047                     	ds	1
  1057  0048                     ___fldiv@new_exp:
  1058                           
  1059                           ; 2 bytes @ 0x28
  1060  0048                     	ds	2
  1061  004A                     ___fldiv@grs:
  1062                           
  1063                           ; 4 bytes @ 0x2A
  1064  004A                     	ds	4
  1065  004E                     ___fldiv@bexp:
  1066                           
  1067                           ; 1 bytes @ 0x2E
  1068  004E                     	ds	1
  1069  004F                     ___fldiv@aexp:
  1070                           
  1071                           ; 1 bytes @ 0x2F
  1072  004F                     	ds	1
  1073  0050                     ?___flge:
  1074  0050                     ?___flmul:	
  1075                           ; 1 bit 
  1076                           
  1077  0050                     ___flge@ff1:	
  1078                           ; 4 bytes @ 0x30
  1079                           
  1080  0050                     ___flmul@b:	
  1081                           ; 4 bytes @ 0x30
  1082                           
  1083                           
  1084                           ; 4 bytes @ 0x30
  1085  0050                     	ds	4
  1086  0054                     ___flge@ff2:
  1087  0054                     ___flmul@a:	
  1088                           ; 4 bytes @ 0x34
  1089                           
  1090                           
  1091                           ; 4 bytes @ 0x34
  1092  0054                     	ds	4
  1093  0058                     ??___flge:
  1094  0058                     ??___flmul:	
  1095                           ; 1 bytes @ 0x38
  1096                           
  1097                           
  1098                           ; 1 bytes @ 0x38
  1099  0058                     	ds	4
  1100  005C                     ??_EtapaCinco:
  1101                           
  1102                           ; 1 bytes @ 0x3C
  1103  005C                     	ds	1
  1104  005D                     ___flmul@sign:
  1105                           
  1106                           ; 1 bytes @ 0x3D
  1107  005D                     	ds	1
  1108  005E                     ___flmul@aexp:
  1109                           
  1110                           ; 1 bytes @ 0x3E
  1111  005E                     	ds	1
  1112  005F                     ___flmul@grs:
  1113                           
  1114                           ; 4 bytes @ 0x3F
  1115  005F                     	ds	1
  1116  0060                     EtapaCinco@waiting:
  1117                           
  1118                           ; 1 bytes @ 0x40
  1119  0060                     	ds	1
  1120  0061                     ??_automatico:
  1121                           
  1122                           ; 1 bytes @ 0x41
  1123  0061                     	ds	2
  1124  0063                     ___flmul@bexp:
  1125                           
  1126                           ; 1 bytes @ 0x43
  1127  0063                     	ds	1
  1128  0064                     ___flmul@prod:
  1129                           
  1130                           ; 4 bytes @ 0x44
  1131  0064                     	ds	4
  1132  0068                     ___flmul@temp:
  1133                           
  1134                           ; 2 bytes @ 0x48
  1135  0068                     	ds	2
  1136  006A                     ?___fltol:
  1137  006A                     ___fltol@f1:	
  1138                           ; 4 bytes @ 0x4A
  1139                           
  1140                           
  1141                           ; 4 bytes @ 0x4A
  1142  006A                     	ds	4
  1143  006E                     ___fltol@sign1:
  1144                           
  1145                           ; 1 bytes @ 0x4E
  1146  006E                     	ds	1
  1147  006F                     ___fltol@exp1:
  1148                           
  1149                           ; 1 bytes @ 0x4F
  1150  006F                     	ds	1
  1151                           
  1152                           	psect	maintext
  1153  1782                     __pmaintext:	
  1154 ;;
  1155 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1156 ;;
  1157 ;; *************** function _main *****************
  1158 ;; Defined at:
  1159 ;;		line 109 in file "Serial_Tank.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : B00/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0
  1175 ;;      Temps:          0       0       1       0       0
  1176 ;;      Totals:         0       0       1       0       0
  1177 ;;Total ram usage:        1 bytes
  1178 ;; Hardware stack levels required when called: 8
  1179 ;; This function calls:
  1180 ;;		_eeprom_write
  1181 ;;		_lcd_init
  1182 ;;		_serial_init
  1183 ;;		_serial_tx
  1184 ;;		_telaUm
  1185 ;; This function is called by:
  1186 ;;		Startup code after reset
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190  1782                     _main:	
  1191                           ;psect for function _main
  1192                           
  1193  1782                     l3473:	
  1194                           ;incstack = 0
  1195                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1196                           
  1197                           
  1198                           ;Serial_Tank.c: 110:     TRISCbits.TRISC7 = 1;
  1199  1782  1683               	bsf	3,5	;RP0=1, select bank1
  1200  1783  1303               	bcf	3,6	;RP1=0, select bank1
  1201  1784  1787               	bsf	7,7	;volatile
  1202                           
  1203                           ;Serial_Tank.c: 111:     TRISCbits.TRISC6 = 0;
  1204  1785  1307               	bcf	7,6	;volatile
  1205  1786                     l3475:
  1206                           
  1207                           ;Serial_Tank.c: 112:     serial_init();
  1208  1786  160A  118A  24D5  160A  118A  	fcall	_serial_init
  1209  178B                     l3477:
  1210                           
  1211                           ;Serial_Tank.c: 114:     enableRB0 = 0;
  1212  178B  1683               	bsf	3,5	;RP0=1, select bank1
  1213  178C  1303               	bcf	3,6	;RP1=0, select bank1
  1214  178D  01C8               	clrf	_enableRB0^(0+128)
  1215  178E                     l3479:
  1216                           
  1217                           ;Serial_Tank.c: 115:     ret = 0;
  1218  178E  01C3               	clrf	_ret^(0+128)
  1219  178F                     l3481:
  1220                           
  1221                           ;Serial_Tank.c: 116:     mostrandoTexto = 0;
  1222  178F  01C4               	clrf	_mostrandoTexto^(0+128)
  1223  1790                     l3483:
  1224                           
  1225                           ;Serial_Tank.c: 118:     INTEDG = 1;
  1226  1790  1701               	bsf	1,6	;volatile
  1227  1791                     l3485:
  1228                           
  1229                           ;Serial_Tank.c: 119:     GIE = 1;
  1230  1791  178B               	bsf	11,7	;volatile
  1231  1792                     l3487:
  1232                           
  1233                           ;Serial_Tank.c: 121:     serial_tx(0x01);
  1234  1792  3001               	movlw	1
  1235  1793  160A  118A  24C9  160A  118A  	fcall	_serial_tx
  1236  1798                     l3489:
  1237                           
  1238                           ;Serial_Tank.c: 122:     serial_tx(0x01);
  1239  1798  3001               	movlw	1
  1240  1799  160A  118A  24C9  160A  118A  	fcall	_serial_tx
  1241  179E                     l3491:
  1242                           
  1243                           ;Serial_Tank.c: 124:     eeprom_write(0, 0x1E);
  1244  179E  301E               	movlw	30
  1245  179F  1683               	bsf	3,5	;RP0=1, select bank1
  1246  17A0  1303               	bcf	3,6	;RP1=0, select bank1
  1247  17A1  00BA               	movwf	??_main^(0+128)
  1248  17A2  083A               	movf	??_main^(0+128),w
  1249  17A3  00F2               	movwf	eeprom_write@value
  1250  17A4  3000               	movlw	0
  1251  17A5  160A  118A  25CF  160A  118A  	fcall	_eeprom_write
  1252  17AA                     l3493:
  1253                           
  1254                           ;Serial_Tank.c: 125:     eeprom_write(1, 0x05);
  1255  17AA  3005               	movlw	5
  1256  17AB  1683               	bsf	3,5	;RP0=1, select bank1
  1257  17AC  1303               	bcf	3,6	;RP1=0, select bank1
  1258  17AD  00BA               	movwf	??_main^(0+128)
  1259  17AE  083A               	movf	??_main^(0+128),w
  1260  17AF  00F2               	movwf	eeprom_write@value
  1261  17B0  3001               	movlw	1
  1262  17B1  160A  118A  25CF  160A  118A  	fcall	_eeprom_write
  1263  17B6                     l3495:
  1264                           
  1265                           ;Serial_Tank.c: 126:     eeprom_write(2, 0xDC);
  1266  17B6  30DC               	movlw	220
  1267  17B7  1683               	bsf	3,5	;RP0=1, select bank1
  1268  17B8  1303               	bcf	3,6	;RP1=0, select bank1
  1269  17B9  00BA               	movwf	??_main^(0+128)
  1270  17BA  083A               	movf	??_main^(0+128),w
  1271  17BB  00F2               	movwf	eeprom_write@value
  1272  17BC  3002               	movlw	2
  1273  17BD  160A  118A  25CF  160A  118A  	fcall	_eeprom_write
  1274  17C2                     l3497:
  1275                           
  1276                           ;Serial_Tank.c: 127:     eeprom_write(3, 0x01);
  1277  17C2  01F2               	clrf	eeprom_write@value
  1278  17C3  0AF2               	incf	eeprom_write@value,f
  1279  17C4  3003               	movlw	3
  1280  17C5  160A  118A  25CF  160A  118A  	fcall	_eeprom_write
  1281  17CA                     l3499:
  1282                           
  1283                           ;Serial_Tank.c: 131:     TRISD = 0x00;
  1284  17CA  1683               	bsf	3,5	;RP0=1, select bank1
  1285  17CB  1303               	bcf	3,6	;RP1=0, select bank1
  1286  17CC  0188               	clrf	8	;volatile
  1287  17CD                     l3501:
  1288                           
  1289                           ;Serial_Tank.c: 132:     TRISEbits.TRISE0 = 0;
  1290  17CD  1009               	bcf	9,0	;volatile
  1291  17CE                     l3503:
  1292                           
  1293                           ;Serial_Tank.c: 133:     TRISEbits.TRISE1 = 0;
  1294  17CE  1089               	bcf	9,1	;volatile
  1295                           
  1296                           ;Serial_Tank.c: 134:     lcd_init();
  1297  17CF  160A  118A  2732  160A  118A  	fcall	_lcd_init
  1298                           
  1299                           ;Serial_Tank.c: 137:     serial_tx(0x21);
  1300  17D4  3021               	movlw	33
  1301  17D5  160A  118A  24C9  160A  118A  	fcall	_serial_tx
  1302                           
  1303                           ;Serial_Tank.c: 138:     serial_tx((0x3C & 0xFF00) >> 8);
  1304  17DA  3000               	movlw	0
  1305  17DB  160A  118A  24C9  160A  118A  	fcall	_serial_tx
  1306                           
  1307                           ;Serial_Tank.c: 139:     serial_tx(0x3C & 0x00FF);
  1308  17E0  303C               	movlw	60
  1309  17E1  160A  118A  24C9  160A  118A  	fcall	_serial_tx
  1310                           
  1311                           ;Serial_Tank.c: 141:     serial_tx(0x20);
  1312  17E6  3020               	movlw	32
  1313  17E7  160A  118A  24C9  160A  118A  	fcall	_serial_tx
  1314                           
  1315                           ;Serial_Tank.c: 142:     serial_tx((0x05 & 0xFF00) >> 8);
  1316  17EC  3000               	movlw	0
  1317  17ED  160A  118A  24C9  160A  118A  	fcall	_serial_tx
  1318                           
  1319                           ;Serial_Tank.c: 143:     serial_tx(0x05 & 0x00FF);
  1320  17F2  3005               	movlw	5
  1321  17F3  160A  118A  24C9  160A  118A  	fcall	_serial_tx
  1322  17F8                     l3505:
  1323                           
  1324                           ;Serial_Tank.c: 145:     telaUm();
  1325  17F8  120A  158A  21D6  160A  118A  	fcall	_telaUm
  1326  17FD                     l97:
  1327  17FD  120A  118A  280C   	ljmp	start
  1328  1800                     __end_of_main:
  1329                           
  1330                           	psect	text1
  1331  09D6                     __ptext1:	
  1332 ;; *************** function _telaUm *****************
  1333 ;; Defined at:
  1334 ;;		line 168 in file "Serial_Tank.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1348 ;;      Params:         0       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0
  1350 ;;      Temps:          0       0       2       0       0
  1351 ;;      Totals:         0       0       2       0       0
  1352 ;;Total ram usage:        2 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; Hardware stack levels required when called: 7
  1355 ;; This function calls:
  1356 ;;		_automatico
  1357 ;;		_configura
  1358 ;;		_manual
  1359 ;;		_telaUmTexto
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365  09D6                     _telaUm:	
  1366                           ;psect for function _telaUm
  1367                           
  1368  09D6                     l3429:	
  1369                           ;incstack = 0
  1370                           ; Regs used in _telaUm: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1371                           
  1372                           
  1373                           ;Serial_Tank.c: 169:     TRISB = 0x07;
  1374  09D6  3007               	movlw	7
  1375  09D7  1683               	bsf	3,5	;RP0=1, select bank1
  1376  09D8  1303               	bcf	3,6	;RP1=0, select bank1
  1377  09D9  0086               	movwf	6	;volatile
  1378                           
  1379                           ;Serial_Tank.c: 170:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1380  09DA  3082               	movlw	130
  1381  09DB  1683               	bsf	3,5	;RP0=1, select bank1
  1382  09DC  1303               	bcf	3,6	;RP1=0, select bank1
  1383  09DD  00B9               	movwf	(??_telaUm^(0+128)+1)
  1384  09DE  30DD               	movlw	221
  1385  09DF  00B8               	movwf	??_telaUm^(0+128)
  1386  09E0                     u4637:
  1387  09E0  0BB8               	decfsz	??_telaUm^(0+128),f
  1388  09E1  29E0               	goto	u4637
  1389  09E2  0BB9               	decfsz	(??_telaUm^(0+128)+1),f
  1390  09E3  29E0               	goto	u4637
  1391  09E4                     l3431:
  1392                           
  1393                           ;Serial_Tank.c: 171:     enableRB0 = 1;
  1394  09E4  1683               	bsf	3,5	;RP0=1, select bank1
  1395  09E5  1303               	bcf	3,6	;RP1=0, select bank1
  1396  09E6  01C8               	clrf	_enableRB0^(0+128)
  1397  09E7  0AC8               	incf	_enableRB0^(0+128),f
  1398  09E8                     l3433:
  1399                           
  1400                           ;Serial_Tank.c: 172:     enableRB1 = 1;
  1401  09E8  01C7               	clrf	_enableRB1^(0+128)
  1402  09E9  0AC7               	incf	_enableRB1^(0+128),f
  1403  09EA                     l3435:
  1404                           
  1405                           ;Serial_Tank.c: 173:     enableRB2 = 1;
  1406  09EA  01C6               	clrf	_enableRB2^(0+128)
  1407  09EB  0AC6               	incf	_enableRB2^(0+128),f
  1408  09EC                     l3437:
  1409                           
  1410                           ;Serial_Tank.c: 174:     telaUmTexto();
  1411  09EC  120A  158A  2141  120A  158A  	fcall	_telaUmTexto
  1412  09F1                     l3439:
  1413                           
  1414                           ;Serial_Tank.c: 176:         if (!mostrandoTexto) {
  1415  09F1  1683               	bsf	3,5	;RP0=1, select bank1
  1416  09F2  1303               	bcf	3,6	;RP1=0, select bank1
  1417  09F3  0844               	movf	_mostrandoTexto^(0+128),w
  1418  09F4  1D03               	btfss	3,2
  1419  09F5  29F7               	goto	u4531
  1420  09F6  29F8               	goto	u4530
  1421  09F7                     u4531:
  1422  09F7  29FF               	goto	l3445
  1423  09F8                     u4530:
  1424  09F8                     l3441:
  1425                           
  1426                           ;Serial_Tank.c: 177:             mostrandoTexto = 1;
  1427  09F8  01C4               	clrf	_mostrandoTexto^(0+128)
  1428  09F9  0AC4               	incf	_mostrandoTexto^(0+128),f
  1429  09FA                     l3443:
  1430                           
  1431                           ;Serial_Tank.c: 178:             telaUmTexto();
  1432  09FA  120A  158A  2141  120A  158A  	fcall	_telaUmTexto
  1433  09FF                     l3445:
  1434                           
  1435                           ;Serial_Tank.c: 180:         if (!PORTBbits.RB0 && enableRB0) {
  1436  09FF  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0A00  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0A01  1806               	btfsc	6,0	;volatile
  1439  0A02  2A04               	goto	u4541
  1440  0A03  2A05               	goto	u4540
  1441  0A04                     u4541:
  1442  0A04  2A15               	goto	l105
  1443  0A05                     u4540:
  1444  0A05                     l3447:
  1445  0A05  1683               	bsf	3,5	;RP0=1, select bank1
  1446  0A06  1303               	bcf	3,6	;RP1=0, select bank1
  1447  0A07  0848               	movf	_enableRB0^(0+128),w
  1448  0A08  1903               	btfsc	3,2
  1449  0A09  2A0B               	goto	u4551
  1450  0A0A  2A0C               	goto	u4550
  1451  0A0B                     u4551:
  1452  0A0B  2A15               	goto	l105
  1453  0A0C                     u4550:
  1454  0A0C                     l3449:
  1455                           
  1456                           ;Serial_Tank.c: 181:             enableRB0 = 0;
  1457  0A0C  01C8               	clrf	_enableRB0^(0+128)
  1458                           
  1459                           ;Serial_Tank.c: 182:             enableRB1 = 0;
  1460  0A0D  01C7               	clrf	_enableRB1^(0+128)
  1461                           
  1462                           ;Serial_Tank.c: 183:             enableRB2 = 0;
  1463  0A0E  01C6               	clrf	_enableRB2^(0+128)
  1464  0A0F                     l3451:
  1465                           
  1466                           ;Serial_Tank.c: 184:             automatico();
  1467  0A0F  120A  158A  20B3  120A  158A  	fcall	_automatico
  1468                           
  1469                           ;Serial_Tank.c: 186:         } else if (PORTBbits.RB0) {
  1470  0A14  2A22               	goto	l106
  1471  0A15                     l105:
  1472  0A15  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0A16  1C06               	btfss	6,0	;volatile
  1474  0A17  2A19               	goto	u4561
  1475  0A18  2A1A               	goto	u4560
  1476  0A19                     u4561:
  1477  0A19  2A22               	goto	l106
  1478  0A1A                     u4560:
  1479  0A1A                     l3453:
  1480                           
  1481                           ;Serial_Tank.c: 187:             enableRB0 = 1;
  1482  0A1A  1683               	bsf	3,5	;RP0=1, select bank1
  1483  0A1B  1303               	bcf	3,6	;RP1=0, select bank1
  1484  0A1C  01C8               	clrf	_enableRB0^(0+128)
  1485  0A1D  0AC8               	incf	_enableRB0^(0+128),f
  1486                           
  1487                           ;Serial_Tank.c: 188:             enableRB1 = 1;
  1488  0A1E  01C7               	clrf	_enableRB1^(0+128)
  1489  0A1F  0AC7               	incf	_enableRB1^(0+128),f
  1490                           
  1491                           ;Serial_Tank.c: 189:             enableRB2 = 1;
  1492  0A20  01C6               	clrf	_enableRB2^(0+128)
  1493  0A21  0AC6               	incf	_enableRB2^(0+128),f
  1494  0A22                     l106:
  1495                           
  1496                           ;Serial_Tank.c: 191:         if (!PORTBbits.RB1 && enableRB1) {
  1497  0A22  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0A23  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0A24  1886               	btfsc	6,1	;volatile
  1500  0A25  2A27               	goto	u4571
  1501  0A26  2A28               	goto	u4570
  1502  0A27                     u4571:
  1503  0A27  2A38               	goto	l108
  1504  0A28                     u4570:
  1505  0A28                     l3455:
  1506  0A28  1683               	bsf	3,5	;RP0=1, select bank1
  1507  0A29  1303               	bcf	3,6	;RP1=0, select bank1
  1508  0A2A  0847               	movf	_enableRB1^(0+128),w
  1509  0A2B  1903               	btfsc	3,2
  1510  0A2C  2A2E               	goto	u4581
  1511  0A2D  2A2F               	goto	u4580
  1512  0A2E                     u4581:
  1513  0A2E  2A38               	goto	l108
  1514  0A2F                     u4580:
  1515  0A2F                     l3457:
  1516                           
  1517                           ;Serial_Tank.c: 192:             enableRB0 = 0;
  1518  0A2F  01C8               	clrf	_enableRB0^(0+128)
  1519                           
  1520                           ;Serial_Tank.c: 193:             enableRB1 = 0;
  1521  0A30  01C7               	clrf	_enableRB1^(0+128)
  1522                           
  1523                           ;Serial_Tank.c: 194:             enableRB2 = 0;
  1524  0A31  01C6               	clrf	_enableRB2^(0+128)
  1525  0A32                     l3459:
  1526                           
  1527                           ;Serial_Tank.c: 195:             manual();
  1528  0A32  160A  118A  24F1  120A  158A  	fcall	_manual
  1529                           
  1530                           ;Serial_Tank.c: 196:         } else if (PORTBbits.RB1) {
  1531  0A37  2A45               	goto	l109
  1532  0A38                     l108:
  1533  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0A39  1C86               	btfss	6,1	;volatile
  1535  0A3A  2A3C               	goto	u4591
  1536  0A3B  2A3D               	goto	u4590
  1537  0A3C                     u4591:
  1538  0A3C  2A45               	goto	l109
  1539  0A3D                     u4590:
  1540  0A3D                     l3461:
  1541                           
  1542                           ;Serial_Tank.c: 197:             enableRB0 = 1;
  1543  0A3D  1683               	bsf	3,5	;RP0=1, select bank1
  1544  0A3E  1303               	bcf	3,6	;RP1=0, select bank1
  1545  0A3F  01C8               	clrf	_enableRB0^(0+128)
  1546  0A40  0AC8               	incf	_enableRB0^(0+128),f
  1547                           
  1548                           ;Serial_Tank.c: 198:             enableRB1 = 1;
  1549  0A41  01C7               	clrf	_enableRB1^(0+128)
  1550  0A42  0AC7               	incf	_enableRB1^(0+128),f
  1551                           
  1552                           ;Serial_Tank.c: 199:             enableRB2 = 1;
  1553  0A43  01C6               	clrf	_enableRB2^(0+128)
  1554  0A44  0AC6               	incf	_enableRB2^(0+128),f
  1555  0A45                     l109:
  1556                           
  1557                           ;Serial_Tank.c: 201:         if (!PORTBbits.RB2 && enableRB2) {
  1558  0A45  1283               	bcf	3,5	;RP0=0, select bank0
  1559  0A46  1303               	bcf	3,6	;RP1=0, select bank0
  1560  0A47  1906               	btfsc	6,2	;volatile
  1561  0A48  2A4A               	goto	u4601
  1562  0A49  2A4B               	goto	u4600
  1563  0A4A                     u4601:
  1564  0A4A  2A5E               	goto	l111
  1565  0A4B                     u4600:
  1566  0A4B                     l3463:
  1567  0A4B  1683               	bsf	3,5	;RP0=1, select bank1
  1568  0A4C  1303               	bcf	3,6	;RP1=0, select bank1
  1569  0A4D  0846               	movf	_enableRB2^(0+128),w
  1570  0A4E  1903               	btfsc	3,2
  1571  0A4F  2A51               	goto	u4611
  1572  0A50  2A52               	goto	u4610
  1573  0A51                     u4611:
  1574  0A51  2A5E               	goto	l111
  1575  0A52                     u4610:
  1576  0A52                     l3465:
  1577                           
  1578                           ;Serial_Tank.c: 202:             enableRB0 = 0;
  1579  0A52  01C8               	clrf	_enableRB0^(0+128)
  1580                           
  1581                           ;Serial_Tank.c: 203:             enableRB1 = 0;
  1582  0A53  01C7               	clrf	_enableRB1^(0+128)
  1583                           
  1584                           ;Serial_Tank.c: 204:             enableRB2 = 0;
  1585  0A54  01C6               	clrf	_enableRB2^(0+128)
  1586  0A55                     l3467:
  1587                           
  1588                           ;Serial_Tank.c: 205:             configura();
  1589  0A55  160A  118A  24E3  120A  158A  	fcall	_configura
  1590  0A5A                     l3469:
  1591                           
  1592                           ;Serial_Tank.c: 206:             mostrandoTexto = 0;
  1593  0A5A  1683               	bsf	3,5	;RP0=1, select bank1
  1594  0A5B  1303               	bcf	3,6	;RP1=0, select bank1
  1595  0A5C  01C4               	clrf	_mostrandoTexto^(0+128)
  1596                           
  1597                           ;Serial_Tank.c: 207:         } else if (PORTBbits.RB2)
  1598  0A5D  2A67               	goto	l112
  1599  0A5E                     l111:
  1600  0A5E  1283               	bcf	3,5	;RP0=0, select bank0
  1601  0A5F  1D06               	btfss	6,2	;volatile
  1602  0A60  2A62               	goto	u4621
  1603  0A61  2A63               	goto	u4620
  1604  0A62                     u4621:
  1605  0A62  2A67               	goto	l112
  1606  0A63                     u4620:
  1607  0A63                     l3471:
  1608                           
  1609                           ;Serial_Tank.c: 208:             enableRB1 = 1;
  1610  0A63  1683               	bsf	3,5	;RP0=1, select bank1
  1611  0A64  1303               	bcf	3,6	;RP1=0, select bank1
  1612  0A65  01C7               	clrf	_enableRB1^(0+128)
  1613  0A66  0AC7               	incf	_enableRB1^(0+128),f
  1614  0A67                     l112:
  1615                           
  1616                           ;Serial_Tank.c: 209:         enableRB2 = 1;
  1617  0A67  1683               	bsf	3,5	;RP0=1, select bank1
  1618  0A68  1303               	bcf	3,6	;RP1=0, select bank1
  1619  0A69  01C6               	clrf	_enableRB2^(0+128)
  1620  0A6A  0AC6               	incf	_enableRB2^(0+128),f
  1621                           
  1622                           ;Serial_Tank.c: 210:         enableRB3 = 1;
  1623  0A6B  01C5               	clrf	_enableRB3^(0+128)
  1624  0A6C  0AC5               	incf	_enableRB3^(0+128),f
  1625  0A6D  29F1               	goto	l3439
  1626  0A6E  0008               	return
  1627  0A6F                     __end_of_telaUm:
  1628                           
  1629                           	psect	text2
  1630  0941                     __ptext2:	
  1631 ;; *************** function _telaUmTexto *****************
  1632 ;; Defined at:
  1633 ;;		line 148 in file "Serial_Tank.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         0       0       0       0       0
  1648 ;;      Locals:         0       0       0       0       0
  1649 ;;      Temps:          0       1       0       0       0
  1650 ;;      Totals:         0       1       0       0       0
  1651 ;;Total ram usage:        1 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; Hardware stack levels required when called: 4
  1654 ;; This function calls:
  1655 ;;		___lwdiv
  1656 ;;		_get_temperatura
  1657 ;;		_get_volume
  1658 ;;		_itoa
  1659 ;;		_lcd_cmd
  1660 ;;		_lcd_str
  1661 ;; This function is called by:
  1662 ;;		_telaUm
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666  0941                     _telaUmTexto:	
  1667                           ;psect for function _telaUmTexto
  1668                           
  1669  0941                     l3393:	
  1670                           ;incstack = 0
  1671                           ; Regs used in _telaUmTexto: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1672                           
  1673                           
  1674                           ;Serial_Tank.c: 149:     lcd_cmd(0x01);
  1675  0941  3001               	movlw	1
  1676  0942  160A  118A  252F  120A  158A  	fcall	_lcd_cmd
  1677                           
  1678                           ;Serial_Tank.c: 150:     lcd_cmd(0x80);
  1679  0947  3080               	movlw	128
  1680  0948  160A  118A  252F  120A  158A  	fcall	_lcd_cmd
  1681  094D                     l3395:
  1682                           
  1683                           ;Serial_Tank.c: 151:     lcd_str("Niv ");
  1684  094D  305E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1685  094E  00F6               	movwf	lcd_str@str
  1686  094F  3080               	movlw	128
  1687  0950  00F7               	movwf	lcd_str@str+1
  1688  0951  160A  118A  25A4  120A  158A  	fcall	_lcd_str
  1689  0956                     l3397:
  1690                           
  1691                           ;Serial_Tank.c: 152:     valori = get_volume();
  1692  0956  120A  158A  207F  120A  158A  	fcall	_get_volume
  1693  095B  0879               	movf	?_get_volume+1,w
  1694  095C  00FB               	movwf	_valori+1
  1695  095D  0878               	movf	?_get_volume,w
  1696  095E  00FA               	movwf	_valori
  1697  095F                     l3399:
  1698                           
  1699                           ;Serial_Tank.c: 153:     valori /= (capacidade / 100);
  1700  095F  301E               	movlw	30
  1701  0960  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0961  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0962  00A0               	movwf	___lwdiv@divisor
  1704  0963  3000               	movlw	0
  1705  0964  00A1               	movwf	___lwdiv@divisor+1
  1706  0965  087B               	movf	_valori+1,w
  1707  0966  00A3               	movwf	___lwdiv@dividend+1
  1708  0967  087A               	movf	_valori,w
  1709  0968  00A2               	movwf	___lwdiv@dividend
  1710  0969  160A  118A  26EC  120A  158A  	fcall	___lwdiv
  1711  096E  1283               	bcf	3,5	;RP0=0, select bank0
  1712  096F  1303               	bcf	3,6	;RP1=0, select bank0
  1713  0970  0821               	movf	?___lwdiv+1,w
  1714  0971  00FB               	movwf	_valori+1
  1715  0972  0820               	movf	?___lwdiv,w
  1716  0973  00FA               	movwf	_valori
  1717  0974                     l3401:
  1718                           
  1719                           ;Serial_Tank.c: 154:     itoa(valori, buff);
  1720  0974  087B               	movf	_valori+1,w
  1721  0975  00A8               	movwf	itoa@val+1
  1722  0976  087A               	movf	_valori,w
  1723  0977  00A7               	movwf	itoa@val
  1724  0978  30CC               	movlw	(low (_buff| 0))& (0+255)
  1725  0979  00AA               	movwf	??_telaUmTexto
  1726  097A  082A               	movf	??_telaUmTexto,w
  1727  097B  00A9               	movwf	itoa@str
  1728  097C  160A  118A  26A8  120A  158A  	fcall	_itoa
  1729  0981                     l3403:
  1730                           
  1731                           ;Serial_Tank.c: 155:     lcd_str(buff);
  1732  0981  30CC               	movlw	(low (_buff| 0))& (0+255)
  1733  0982  00F6               	movwf	lcd_str@str
  1734  0983  3000               	movlw	0
  1735  0984  00F7               	movwf	lcd_str@str+1
  1736  0985  160A  118A  25A4  120A  158A  	fcall	_lcd_str
  1737  098A                     l3405:
  1738                           
  1739                           ;Serial_Tank.c: 156:     lcd_str("%");
  1740  098A  306B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1741  098B  00F6               	movwf	lcd_str@str
  1742  098C  3080               	movlw	128
  1743  098D  00F7               	movwf	lcd_str@str+1
  1744  098E  160A  118A  25A4  120A  158A  	fcall	_lcd_str
  1745  0993                     l3407:
  1746                           
  1747                           ;Serial_Tank.c: 158:     valori = get_temperatura();
  1748  0993  160A  118A  25FC  120A  158A  	fcall	_get_temperatura
  1749  0998  0879               	movf	?_get_temperatura+1,w
  1750  0999  00FB               	movwf	_valori+1
  1751  099A  0878               	movf	?_get_temperatura,w
  1752  099B  00FA               	movwf	_valori
  1753  099C                     l3409:
  1754                           
  1755                           ;Serial_Tank.c: 159:     itoa(valori, buff);
  1756  099C  087B               	movf	_valori+1,w
  1757  099D  1283               	bcf	3,5	;RP0=0, select bank0
  1758  099E  1303               	bcf	3,6	;RP1=0, select bank0
  1759  099F  00A8               	movwf	itoa@val+1
  1760  09A0  087A               	movf	_valori,w
  1761  09A1  00A7               	movwf	itoa@val
  1762  09A2  30CC               	movlw	(low (_buff| 0))& (0+255)
  1763  09A3  00AA               	movwf	??_telaUmTexto
  1764  09A4  082A               	movf	??_telaUmTexto,w
  1765  09A5  00A9               	movwf	itoa@str
  1766  09A6  160A  118A  26A8  120A  158A  	fcall	_itoa
  1767                           
  1768                           ;Serial_Tank.c: 160:     lcd_str(" Temp ");
  1769  09AB  3057               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1770  09AC  00F6               	movwf	lcd_str@str
  1771  09AD  3080               	movlw	128
  1772  09AE  00F7               	movwf	lcd_str@str+1
  1773  09AF  160A  118A  25A4  120A  158A  	fcall	_lcd_str
  1774                           
  1775                           ;Serial_Tank.c: 161:     lcd_str(buff);
  1776  09B4  30CC               	movlw	(low (_buff| 0))& (0+255)
  1777  09B5  00F6               	movwf	lcd_str@str
  1778  09B6  3000               	movlw	0
  1779  09B7  00F7               	movwf	lcd_str@str+1
  1780  09B8  160A  118A  25A4  120A  158A  	fcall	_lcd_str
  1781                           
  1782                           ;Serial_Tank.c: 162:     lcd_str("C");
  1783  09BD  306D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1784  09BE  00F6               	movwf	lcd_str@str
  1785  09BF  3080               	movlw	128
  1786  09C0  00F7               	movwf	lcd_str@str+1
  1787  09C1  160A  118A  25A4  120A  158A  	fcall	_lcd_str
  1788  09C6                     l3411:
  1789                           
  1790                           ;Serial_Tank.c: 164:     lcd_cmd(0xC0);
  1791  09C6  30C0               	movlw	192
  1792  09C7  160A  118A  252F  120A  158A  	fcall	_lcd_cmd
  1793  09CC                     l3413:
  1794                           
  1795                           ;Serial_Tank.c: 165:     lcd_str("Pres R0,R1 ou R2");
  1796  09CC  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1797  09CD  00F6               	movwf	lcd_str@str
  1798  09CE  3080               	movlw	128
  1799  09CF  00F7               	movwf	lcd_str@str+1
  1800  09D0  160A  118A  25A4  120A  158A  	fcall	_lcd_str
  1801  09D5                     l100:
  1802  09D5  0008               	return
  1803  09D6                     __end_of_telaUmTexto:
  1804                           
  1805                           	psect	text3
  1806  14F1                     __ptext3:	
  1807 ;; *************** function _manual *****************
  1808 ;; Defined at:
  1809 ;;		line 359 in file "Serial_Tank.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;		None
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;		None
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1823 ;;      Params:         0       0       0       0       0
  1824 ;;      Locals:         0       0       0       0       0
  1825 ;;      Temps:          0       0       0       0       0
  1826 ;;      Totals:         0       0       0       0       0
  1827 ;;Total ram usage:        0 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; Hardware stack levels required when called: 6
  1830 ;; This function calls:
  1831 ;;		_automatico
  1832 ;;		_criasetpoint
  1833 ;; This function is called by:
  1834 ;;		_telaUm
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838  14F1                     _manual:	
  1839                           ;psect for function _manual
  1840                           
  1841  14F1                     l3415:	
  1842                           ;incstack = 0
  1843                           ; Regs used in _manual: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1844                           
  1845                           
  1846                           ;Serial_Tank.c: 360:     TRISB = 0x0F;
  1847  14F1  300F               	movlw	15
  1848  14F2  1683               	bsf	3,5	;RP0=1, select bank1
  1849  14F3  1303               	bcf	3,6	;RP1=0, select bank1
  1850  14F4  0086               	movwf	6	;volatile
  1851  14F5                     l3417:
  1852                           
  1853                           ;Serial_Tank.c: 361:     criasetpoint(0);
  1854  14F5  3000               	movlw	0
  1855  14F6  00A5               	movwf	criasetpoint@opcao^(0+128)
  1856  14F7  00A6               	movwf	(criasetpoint@opcao+1)^(0+128)
  1857  14F8  120A  118A  202C  160A  118A  	fcall	_criasetpoint
  1858  14FD                     l3419:
  1859                           
  1860                           ;Serial_Tank.c: 362:     automatico();
  1861  14FD  120A  158A  20B3  160A  118A  	fcall	_automatico
  1862  1502                     l174:
  1863  1502  0008               	return
  1864  1503                     __end_of_manual:
  1865                           
  1866                           	psect	text4
  1867  08B3                     __ptext4:	
  1868 ;; *************** function _automatico *****************
  1869 ;; Defined at:
  1870 ;;		line 214 in file "Serial_Tank.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1884 ;;      Params:         0       0       0       0       0
  1885 ;;      Locals:         0       0       0       0       0
  1886 ;;      Temps:          0       4       0       0       0
  1887 ;;      Totals:         0       4       0       0       0
  1888 ;;Total ram usage:        4 bytes
  1889 ;; Hardware stack levels used: 1
  1890 ;; Hardware stack levels required when called: 5
  1891 ;; This function calls:
  1892 ;;		_EtapaCinco
  1893 ;;		_eeprom_read
  1894 ;;		_serial_tx
  1895 ;; This function is called by:
  1896 ;;		_telaUm
  1897 ;;		_manual
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901  08B3                     _automatico:	
  1902                           ;psect for function _automatico
  1903                           
  1904  08B3                     l3205:	
  1905                           ;incstack = 0
  1906                           ; Regs used in _automatico: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1907                           
  1908                           
  1909                           ;Serial_Tank.c: 215:     enableRB0 = 1;
  1910  08B3  1683               	bsf	3,5	;RP0=1, select bank1
  1911  08B4  1303               	bcf	3,6	;RP1=0, select bank1
  1912  08B5  01C8               	clrf	_enableRB0^(0+128)
  1913  08B6  0AC8               	incf	_enableRB0^(0+128),f
  1914  08B7                     l3207:
  1915                           
  1916                           ;Serial_Tank.c: 216:     mostrandoTexto = 0;
  1917  08B7  01C4               	clrf	_mostrandoTexto^(0+128)
  1918  08B8                     l3209:
  1919                           
  1920                           ;Serial_Tank.c: 218:     if (setEnable == 0) {
  1921  08B8  0841               	movf	_setEnable^(0+128),w
  1922  08B9  0442               	iorwf	(_setEnable+1)^(0+128),w
  1923  08BA  1D03               	btfss	3,2
  1924  08BB  28BD               	goto	u4251
  1925  08BC  28BE               	goto	u4250
  1926  08BD                     u4251:
  1927  08BD  2909               	goto	l3217
  1928  08BE                     u4250:
  1929  08BE                     l3211:
  1930                           
  1931                           ;Serial_Tank.c: 219:         setVolm = (unsigned int) (eeprom_read(1) << 8 | eeprom_read
      +                          (2));
  1932  08BE  3002               	movlw	2
  1933  08BF  160A  118A  2518  120A  158A  	fcall	_eeprom_read
  1934  08C4  1283               	bcf	3,5	;RP0=0, select bank0
  1935  08C5  1303               	bcf	3,6	;RP1=0, select bank0
  1936  08C6  00E1               	movwf	??_automatico
  1937  08C7  01E2               	clrf	??_automatico+1
  1938  08C8  3001               	movlw	1
  1939  08C9  160A  118A  2518  120A  158A  	fcall	_eeprom_read
  1940  08CE  1283               	bcf	3,5	;RP0=0, select bank0
  1941  08CF  1303               	bcf	3,6	;RP1=0, select bank0
  1942  08D0  00E3               	movwf	??_automatico+2
  1943  08D1  01E4               	clrf	??_automatico+3
  1944  08D2  0863               	movf	??_automatico+2,w
  1945  08D3  00E4               	movwf	??_automatico+3
  1946  08D4  01E3               	clrf	??_automatico+2
  1947  08D5  0861               	movf	??_automatico,w
  1948  08D6  0463               	iorwf	??_automatico+2,w
  1949  08D7  1683               	bsf	3,5	;RP0=1, select bank1
  1950  08D8  1303               	bcf	3,6	;RP1=0, select bank1
  1951  08D9  00BF               	movwf	_setVolm^(0+128)
  1952  08DA  1283               	bcf	3,5	;RP0=0, select bank0
  1953  08DB  1303               	bcf	3,6	;RP1=0, select bank0
  1954  08DC  0862               	movf	??_automatico+1,w
  1955  08DD  0464               	iorwf	??_automatico+3,w
  1956  08DE  1683               	bsf	3,5	;RP0=1, select bank1
  1957  08DF  1303               	bcf	3,6	;RP1=0, select bank1
  1958  08E0  00C0               	movwf	(_setVolm+1)^(0+128)
  1959  08E1                     l3213:
  1960                           
  1961                           ;Serial_Tank.c: 220:         setTemp = (unsigned int) eeprom_read(0);
  1962  08E1  3000               	movlw	0
  1963  08E2  160A  118A  2518  120A  158A  	fcall	_eeprom_read
  1964  08E7  1283               	bcf	3,5	;RP0=0, select bank0
  1965  08E8  1303               	bcf	3,6	;RP1=0, select bank0
  1966  08E9  00E1               	movwf	??_automatico
  1967  08EA  01E2               	clrf	??_automatico+1
  1968  08EB  0861               	movf	??_automatico,w
  1969  08EC  1683               	bsf	3,5	;RP0=1, select bank1
  1970  08ED  1303               	bcf	3,6	;RP1=0, select bank1
  1971  08EE  00BD               	movwf	_setTemp^(0+128)
  1972  08EF  1283               	bcf	3,5	;RP0=0, select bank0
  1973  08F0  1303               	bcf	3,6	;RP1=0, select bank0
  1974  08F1  0862               	movf	??_automatico+1,w
  1975  08F2  1683               	bsf	3,5	;RP0=1, select bank1
  1976  08F3  1303               	bcf	3,6	;RP1=0, select bank1
  1977  08F4  00BE               	movwf	(_setTemp+1)^(0+128)
  1978  08F5                     l3215:
  1979                           
  1980                           ;Serial_Tank.c: 221:         setAgit = (unsigned int) eeprom_read(3);
  1981  08F5  3003               	movlw	3
  1982  08F6  160A  118A  2518  120A  158A  	fcall	_eeprom_read
  1983  08FB  1283               	bcf	3,5	;RP0=0, select bank0
  1984  08FC  1303               	bcf	3,6	;RP1=0, select bank0
  1985  08FD  00E1               	movwf	??_automatico
  1986  08FE  01E2               	clrf	??_automatico+1
  1987  08FF  0861               	movf	??_automatico,w
  1988  0900  1683               	bsf	3,5	;RP0=1, select bank1
  1989  0901  1303               	bcf	3,6	;RP1=0, select bank1
  1990  0902  00BB               	movwf	_setAgit^(0+128)
  1991  0903  1283               	bcf	3,5	;RP0=0, select bank0
  1992  0904  1303               	bcf	3,6	;RP1=0, select bank0
  1993  0905  0862               	movf	??_automatico+1,w
  1994  0906  1683               	bsf	3,5	;RP0=1, select bank1
  1995  0907  1303               	bcf	3,6	;RP1=0, select bank1
  1996  0908  00BC               	movwf	(_setAgit+1)^(0+128)
  1997  0909                     l3217:
  1998                           
  1999                           ;Serial_Tank.c: 224:     EtapaCinco();
  2000  0909  120A  158A  25AC  120A  158A  	fcall	_EtapaCinco
  2001  090E                     l3219:
  2002                           
  2003                           ;Serial_Tank.c: 226:     INTE = 0;
  2004  090E  120B               	bcf	11,4	;volatile
  2005  090F                     l3221:
  2006                           
  2007                           ;Serial_Tank.c: 227:     INTF = 0;
  2008  090F  108B               	bcf	11,1	;volatile
  2009  0910                     l3223:
  2010                           
  2011                           ;Serial_Tank.c: 229:     serial_tx(0x04);
  2012  0910  3004               	movlw	4
  2013  0911  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2014  0916                     l3225:
  2015                           
  2016                           ;Serial_Tank.c: 230:     serial_tx(0x00);
  2017  0916  3000               	movlw	0
  2018  0917  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2019  091C                     l3227:
  2020                           
  2021                           ;Serial_Tank.c: 231:     serial_tx(0x02);
  2022  091C  3002               	movlw	2
  2023  091D  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2024  0922                     l3229:
  2025                           
  2026                           ;Serial_Tank.c: 232:     serial_tx(0x00);
  2027  0922  3000               	movlw	0
  2028  0923  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2029  0928                     l3231:
  2030                           
  2031                           ;Serial_Tank.c: 233:     serial_tx(0x03);
  2032  0928  3003               	movlw	3
  2033  0929  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2034  092E                     l3233:
  2035                           
  2036                           ;Serial_Tank.c: 234:     serial_tx(0x00);
  2037  092E  3000               	movlw	0
  2038  092F  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2039  0934                     l3235:
  2040                           
  2041                           ;Serial_Tank.c: 235:     serial_tx(0x00);
  2042  0934  3000               	movlw	0
  2043  0935  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2044  093A                     l3237:
  2045                           
  2046                           ;Serial_Tank.c: 236:     serial_tx(0x00);
  2047  093A  3000               	movlw	0
  2048  093B  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2049  0940                     l120:
  2050  0940  0008               	return
  2051  0941                     __end_of_automatico:
  2052                           
  2053                           	psect	text5
  2054  1518                     __ptext5:	
  2055 ;; *************** function _eeprom_read *****************
  2056 ;; Defined at:
  2057 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\pic\__eeread.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  addr            1    wreg     unsigned char 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  addr            1    3[COMMON] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      unsigned char 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2071 ;;      Params:         0       0       0       0       0
  2072 ;;      Locals:         1       0       0       0       0
  2073 ;;      Temps:          1       0       0       0       0
  2074 ;;      Totals:         2       0       0       0       0
  2075 ;;Total ram usage:        2 bytes
  2076 ;; Hardware stack levels used: 1
  2077 ;; Hardware stack levels required when called: 1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_automatico
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085  1518                     _eeprom_read:	
  2086                           ;psect for function _eeprom_read
  2087                           
  2088                           
  2089                           ;incstack = 0
  2090                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  2091                           ;eeprom_read@addr stored from wreg
  2092  1518  00F3               	movwf	eeprom_read@addr
  2093  1519                     l375:	
  2094                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\pic\__eeread.c: 7:
      +                           {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\pic\__eeread.c: 8:  do
  2095                           
  2096  1519  0064               	clrwdt	;# 
  2097  151A  1683               	bsf	3,5	;RP0=1, select bank3
  2098  151B  1703               	bsf	3,6	;RP1=1, select bank3
  2099  151C  188C               	btfsc	12,1	;volsfr
  2100  151D  2D1F               	goto	u2591
  2101  151E  2D20               	goto	u2590
  2102  151F                     u2591:
  2103  151F  2D19               	goto	l375
  2104  1520                     u2590:
  2105  1520                     l2289:
  2106                           
  2107                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  2108  1520  0873               	movf	eeprom_read@addr,w
  2109  1521  1283               	bcf	3,5	;RP0=0, select bank2
  2110  1522  1703               	bsf	3,6	;RP1=1, select bank2
  2111  1523  008D               	movwf	13	;volatile
  2112  1524  303F               	movlw	63
  2113  1525  00F2               	movwf	??_eeprom_read
  2114  1526  0872               	movf	??_eeprom_read,w
  2115  1527  1683               	bsf	3,5	;RP0=1, select bank3
  2116  1528  1703               	bsf	3,6	;RP1=1, select bank3
  2117  1529  058C               	andwf	12,f	;volsfr
  2118  152A  140C               	bsf	12,0	;volsfr
  2119  152B  1283               	bcf	3,5	;RP0=0, select bank2
  2120  152C  1703               	bsf	3,6	;RP1=1, select bank2
  2121  152D  080C               	movf	12,w	;volatile
  2122  152E                     l377:
  2123  152E  0008               	return
  2124  152F                     __end_of_eeprom_read:
  2125                           
  2126                           	psect	text6
  2127  0DAC                     __ptext6:	
  2128 ;; *************** function _EtapaCinco *****************
  2129 ;; Defined at:
  2130 ;;		line 372 in file "Serial_Tank.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  waiting         1   64[BANK0 ] unsigned char 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         0       0       0       0       0
  2145 ;;      Locals:         0       1       0       0       0
  2146 ;;      Temps:          0       4       0       0       0
  2147 ;;      Totals:         0       5       0       0       0
  2148 ;;Total ram usage:        5 bytes
  2149 ;; Hardware stack levels used: 1
  2150 ;; Hardware stack levels required when called: 4
  2151 ;; This function calls:
  2152 ;;		___fldiv
  2153 ;;		___flge
  2154 ;;		___lwdiv
  2155 ;;		___xxtofl
  2156 ;;		_get_temperatura
  2157 ;;		_get_volume
  2158 ;;		_itoa
  2159 ;;		_lcd_cmd
  2160 ;;		_lcd_str
  2161 ;;		_serial_tx
  2162 ;; This function is called by:
  2163 ;;		_automatico
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167  0DAC                     _EtapaCinco:	
  2168                           ;psect for function _EtapaCinco
  2169                           
  2170  0DAC                     l2975:	
  2171                           ;incstack = 0
  2172                           ; Regs used in _EtapaCinco: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2173                           
  2174                           
  2175                           ;Serial_Tank.c: 373:     unsigned char waiting = 1;
  2176  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  2177  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  2178  0DAE  01E0               	clrf	EtapaCinco@waiting
  2179  0DAF  0AE0               	incf	EtapaCinco@waiting,f
  2180  0DB0                     l2977:
  2181                           
  2182                           ;Serial_Tank.c: 375:     lcd_cmd(0x01);
  2183  0DB0  3001               	movlw	1
  2184  0DB1  160A  118A  252F  120A  158A  	fcall	_lcd_cmd
  2185                           
  2186                           ;Serial_Tank.c: 376:     lcd_cmd(0x80);
  2187  0DB6  3080               	movlw	128
  2188  0DB7  160A  118A  252F  120A  158A  	fcall	_lcd_cmd
  2189  0DBC                     l2979:
  2190                           
  2191                           ;Serial_Tank.c: 377:     lcd_str("Iniciar?");
  2192  0DBC  304E               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2193  0DBD  00F6               	movwf	lcd_str@str
  2194  0DBE  3080               	movlw	128
  2195  0DBF  00F7               	movwf	lcd_str@str+1
  2196  0DC0  160A  118A  25A4  120A  158A  	fcall	_lcd_str
  2197  0DC5                     l2981:
  2198                           
  2199                           ;Serial_Tank.c: 378:     lcd_cmd(0xC0);
  2200  0DC5  30C0               	movlw	192
  2201  0DC6  160A  118A  252F  120A  158A  	fcall	_lcd_cmd
  2202                           
  2203                           ;Serial_Tank.c: 379:     lcd_str("(R0)SIM, (R1)NAO");
  2204  0DCB  3012               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2205  0DCC  00F6               	movwf	lcd_str@str
  2206  0DCD  3080               	movlw	128
  2207  0DCE  00F7               	movwf	lcd_str@str+1
  2208  0DCF  160A  118A  25A4  120A  158A  	fcall	_lcd_str
  2209                           
  2210                           ;Serial_Tank.c: 380:     while (waiting) {
  2211  0DD4  2FF8               	goto	l3063
  2212  0DD5                     l181:
  2213                           
  2214                           ;Serial_Tank.c: 381:         if (!PORTBbits.RB0) {
  2215  0DD5  1806               	btfsc	6,0	;volatile
  2216  0DD6  2DD8               	goto	u3731
  2217  0DD7  2DD9               	goto	u3730
  2218  0DD8                     u3731:
  2219  0DD8  2FF3               	goto	l182
  2220  0DD9                     u3730:
  2221  0DD9                     l2983:
  2222                           
  2223                           ;Serial_Tank.c: 383:             enableRB0 = 0;
  2224  0DD9  1683               	bsf	3,5	;RP0=1, select bank1
  2225  0DDA  1303               	bcf	3,6	;RP1=0, select bank1
  2226  0DDB  01C8               	clrf	_enableRB0^(0+128)
  2227  0DDC                     l2985:
  2228                           
  2229                           ;Serial_Tank.c: 385:             INTE = 1;
  2230  0DDC  160B               	bsf	11,4	;volatile
  2231  0DDD                     l2987:
  2232                           
  2233                           ;Serial_Tank.c: 386:             INTF = 0;
  2234  0DDD  108B               	bcf	11,1	;volatile
  2235  0DDE                     l2989:
  2236                           
  2237                           ;Serial_Tank.c: 389:                 lcd_cmd(0x01);
  2238  0DDE  3001               	movlw	1
  2239  0DDF  160A  118A  252F  120A  158A  	fcall	_lcd_cmd
  2240  0DE4                     l2991:
  2241                           
  2242                           ;Serial_Tank.c: 390:                 lcd_cmd(0x80);
  2243  0DE4  3080               	movlw	128
  2244  0DE5  160A  118A  252F  120A  158A  	fcall	_lcd_cmd
  2245  0DEA                     l2993:
  2246                           
  2247                           ;Serial_Tank.c: 391:                 lcd_str("Niv ");
  2248  0DEA  305E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2249  0DEB  00F6               	movwf	lcd_str@str
  2250  0DEC  3080               	movlw	128
  2251  0DED  00F7               	movwf	lcd_str@str+1
  2252  0DEE  160A  118A  25A4  120A  158A  	fcall	_lcd_str
  2253  0DF3                     l2995:
  2254                           
  2255                           ;Serial_Tank.c: 392:                 valori = get_volume();
  2256  0DF3  120A  158A  207F  120A  158A  	fcall	_get_volume
  2257  0DF8  0879               	movf	?_get_volume+1,w
  2258  0DF9  00FB               	movwf	_valori+1
  2259  0DFA  0878               	movf	?_get_volume,w
  2260  0DFB  00FA               	movwf	_valori
  2261  0DFC                     l2997:
  2262                           
  2263                           ;Serial_Tank.c: 393:                 valori /= (capacidade / 100);
  2264  0DFC  301E               	movlw	30
  2265  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  2266  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  2267  0DFF  00A0               	movwf	___lwdiv@divisor
  2268  0E00  3000               	movlw	0
  2269  0E01  00A1               	movwf	___lwdiv@divisor+1
  2270  0E02  087B               	movf	_valori+1,w
  2271  0E03  00A3               	movwf	___lwdiv@dividend+1
  2272  0E04  087A               	movf	_valori,w
  2273  0E05  00A2               	movwf	___lwdiv@dividend
  2274  0E06  160A  118A  26EC  120A  158A  	fcall	___lwdiv
  2275  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  2276  0E0C  1303               	bcf	3,6	;RP1=0, select bank0
  2277  0E0D  0821               	movf	?___lwdiv+1,w
  2278  0E0E  00FB               	movwf	_valori+1
  2279  0E0F  0820               	movf	?___lwdiv,w
  2280  0E10  00FA               	movwf	_valori
  2281  0E11                     l2999:
  2282                           
  2283                           ;Serial_Tank.c: 394:                 itoa(valori, buff);
  2284  0E11  087B               	movf	_valori+1,w
  2285  0E12  00A8               	movwf	itoa@val+1
  2286  0E13  087A               	movf	_valori,w
  2287  0E14  00A7               	movwf	itoa@val
  2288  0E15  30CC               	movlw	(low (_buff| 0))& (0+255)
  2289  0E16  00DC               	movwf	??_EtapaCinco
  2290  0E17  085C               	movf	??_EtapaCinco,w
  2291  0E18  00A9               	movwf	itoa@str
  2292  0E19  160A  118A  26A8  120A  158A  	fcall	_itoa
  2293  0E1E                     l3001:
  2294                           
  2295                           ;Serial_Tank.c: 395:                 lcd_str(buff);
  2296  0E1E  30CC               	movlw	(low (_buff| 0))& (0+255)
  2297  0E1F  00F6               	movwf	lcd_str@str
  2298  0E20  3000               	movlw	0
  2299  0E21  00F7               	movwf	lcd_str@str+1
  2300  0E22  160A  118A  25A4  120A  158A  	fcall	_lcd_str
  2301  0E27                     l3003:
  2302                           
  2303                           ;Serial_Tank.c: 396:                 lcd_str("%");
  2304  0E27  306B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2305  0E28  00F6               	movwf	lcd_str@str
  2306  0E29  3080               	movlw	128
  2307  0E2A  00F7               	movwf	lcd_str@str+1
  2308  0E2B  160A  118A  25A4  120A  158A  	fcall	_lcd_str
  2309  0E30                     l3005:
  2310                           
  2311                           ;Serial_Tank.c: 398:                 valori = get_temperatura();
  2312  0E30  160A  118A  25FC  120A  158A  	fcall	_get_temperatura
  2313  0E35  0879               	movf	?_get_temperatura+1,w
  2314  0E36  00FB               	movwf	_valori+1
  2315  0E37  0878               	movf	?_get_temperatura,w
  2316  0E38  00FA               	movwf	_valori
  2317  0E39                     l3007:
  2318                           
  2319                           ;Serial_Tank.c: 399:                 itoa(valori, buff);
  2320  0E39  087B               	movf	_valori+1,w
  2321  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  2322  0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  2323  0E3C  00A8               	movwf	itoa@val+1
  2324  0E3D  087A               	movf	_valori,w
  2325  0E3E  00A7               	movwf	itoa@val
  2326  0E3F  30CC               	movlw	(low (_buff| 0))& (0+255)
  2327  0E40  00DC               	movwf	??_EtapaCinco
  2328  0E41  085C               	movf	??_EtapaCinco,w
  2329  0E42  00A9               	movwf	itoa@str
  2330  0E43  160A  118A  26A8  120A  158A  	fcall	_itoa
  2331  0E48                     l3009:
  2332                           
  2333                           ;Serial_Tank.c: 400:                 lcd_str(" Temp ");
  2334  0E48  3057               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2335  0E49  00F6               	movwf	lcd_str@str
  2336  0E4A  3080               	movlw	128
  2337  0E4B  00F7               	movwf	lcd_str@str+1
  2338  0E4C  160A  118A  25A4  120A  158A  	fcall	_lcd_str
  2339  0E51                     l3011:
  2340                           
  2341                           ;Serial_Tank.c: 401:                 lcd_str(buff);
  2342  0E51  30CC               	movlw	(low (_buff| 0))& (0+255)
  2343  0E52  00F6               	movwf	lcd_str@str
  2344  0E53  3000               	movlw	0
  2345  0E54  00F7               	movwf	lcd_str@str+1
  2346  0E55  160A  118A  25A4  120A  158A  	fcall	_lcd_str
  2347  0E5A                     l3013:
  2348                           
  2349                           ;Serial_Tank.c: 402:                 lcd_str("C");
  2350  0E5A  306D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2351  0E5B  00F6               	movwf	lcd_str@str
  2352  0E5C  3080               	movlw	128
  2353  0E5D  00F7               	movwf	lcd_str@str+1
  2354  0E5E  160A  118A  25A4  120A  158A  	fcall	_lcd_str
  2355  0E63                     l3015:
  2356                           
  2357                           ;Serial_Tank.c: 403:                 lcd_cmd(0xC0);
  2358  0E63  30C0               	movlw	192
  2359  0E64  160A  118A  252F  120A  158A  	fcall	_lcd_cmd
  2360  0E69                     l3017:
  2361                           
  2362                           ;Serial_Tank.c: 404:                 lcd_str("Pres R0 p. sair");
  2363  0E69  3023               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
  2364  0E6A  00F6               	movwf	lcd_str@str
  2365  0E6B  3080               	movlw	128
  2366  0E6C  00F7               	movwf	lcd_str@str+1
  2367  0E6D  160A  118A  25A4  120A  158A  	fcall	_lcd_str
  2368  0E72                     l3019:
  2369                           
  2370                           ;Serial_Tank.c: 406:                 if (ret) {
  2371  0E72  1683               	bsf	3,5	;RP0=1, select bank1
  2372  0E73  1303               	bcf	3,6	;RP1=0, select bank1
  2373  0E74  0843               	movf	_ret^(0+128),w
  2374  0E75  1903               	btfsc	3,2
  2375  0E76  2E78               	goto	u3741
  2376  0E77  2E79               	goto	u3740
  2377  0E78                     u3741:
  2378  0E78  2E7C               	goto	l184
  2379  0E79                     u3740:
  2380  0E79                     l3021:
  2381                           
  2382                           ;Serial_Tank.c: 407:                     enableRB0 = 0;
  2383  0E79  01C8               	clrf	_enableRB0^(0+128)
  2384                           
  2385                           ;Serial_Tank.c: 408:                     ret = 0;
  2386  0E7A  01C3               	clrf	_ret^(0+128)
  2387  0E7B  2FFF               	goto	l185
  2388  0E7C                     l184:	
  2389                           ;Serial_Tank.c: 410:                 }
  2390                           
  2391                           
  2392                           ;Serial_Tank.c: 411:                 if (PORTBbits.RB0) {
  2393  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0E7E  1C06               	btfss	6,0	;volatile
  2396  0E7F  2E81               	goto	u3751
  2397  0E80  2E82               	goto	u3750
  2398  0E81                     u3751:
  2399  0E81  2E86               	goto	l3027
  2400  0E82                     u3750:
  2401  0E82                     l3025:
  2402                           
  2403                           ;Serial_Tank.c: 412:                     enableRB0 = 1;
  2404  0E82  1683               	bsf	3,5	;RP0=1, select bank1
  2405  0E83  1303               	bcf	3,6	;RP1=0, select bank1
  2406  0E84  01C8               	clrf	_enableRB0^(0+128)
  2407  0E85  0AC8               	incf	_enableRB0^(0+128),f
  2408  0E86                     l3027:
  2409                           
  2410                           ;Serial_Tank.c: 415:                 if ((((float) get_volume()) / ((float) capacidade))
      +                           > 0.2) {
  2411  0E86  303E               	movlw	62
  2412  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0E88  00D3               	movwf	___flge@ff1+3
  2414  0E89  304C               	movlw	76
  2415  0E8A  00D2               	movwf	___flge@ff1+2
  2416  0E8B  30CC               	movlw	204
  2417  0E8C  00D1               	movwf	___flge@ff1+1
  2418  0E8D  30CD               	movlw	205
  2419  0E8E  00D0               	movwf	___flge@ff1
  2420  0E8F  3045               	movlw	69
  2421  0E90  00B9               	movwf	___fldiv@a+3
  2422  0E91  303B               	movlw	59
  2423  0E92  00B8               	movwf	___fldiv@a+2
  2424  0E93  3080               	movlw	128
  2425  0E94  00B7               	movwf	___fldiv@a+1
  2426  0E95  3000               	movlw	0
  2427  0E96  00B6               	movwf	___fldiv@a
  2428  0E97  120A  158A  207F  120A  158A  	fcall	_get_volume
  2429  0E9C  0878               	movf	?_get_volume,w
  2430  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  2431  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  2432  0E9F  00DC               	movwf	??_EtapaCinco
  2433  0EA0  0879               	movf	?_get_volume+1,w
  2434  0EA1  00DD               	movwf	??_EtapaCinco+1
  2435  0EA2  01DE               	clrf	??_EtapaCinco+2
  2436  0EA3  01DF               	clrf	??_EtapaCinco+3
  2437  0EA4  085F               	movf	??_EtapaCinco+3,w
  2438  0EA5  00AB               	movwf	___xxtofl@val+3
  2439  0EA6  085E               	movf	??_EtapaCinco+2,w
  2440  0EA7  00AA               	movwf	___xxtofl@val+2
  2441  0EA8  085D               	movf	??_EtapaCinco+1,w
  2442  0EA9  00A9               	movwf	___xxtofl@val+1
  2443  0EAA  085C               	movf	??_EtapaCinco,w
  2444  0EAB  00A8               	movwf	___xxtofl@val
  2445  0EAC  3000               	movlw	0
  2446  0EAD  120A  158A  2313  120A  158A  	fcall	___xxtofl
  2447  0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  2448  0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0EB4  082B               	movf	?___xxtofl+3,w
  2450  0EB5  00BD               	movwf	___fldiv@b+3
  2451  0EB6  082A               	movf	?___xxtofl+2,w
  2452  0EB7  00BC               	movwf	___fldiv@b+2
  2453  0EB8  0829               	movf	?___xxtofl+1,w
  2454  0EB9  00BB               	movwf	___fldiv@b+1
  2455  0EBA  0828               	movf	?___xxtofl,w
  2456  0EBB  00BA               	movwf	___fldiv@b
  2457  0EBC  120A  158A  23CF  120A  158A  	fcall	___fldiv
  2458  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0EC3  0839               	movf	?___fldiv+3,w
  2461  0EC4  00D7               	movwf	___flge@ff2+3
  2462  0EC5  0838               	movf	?___fldiv+2,w
  2463  0EC6  00D6               	movwf	___flge@ff2+2
  2464  0EC7  0837               	movf	?___fldiv+1,w
  2465  0EC8  00D5               	movwf	___flge@ff2+1
  2466  0EC9  0836               	movf	?___fldiv,w
  2467  0ECA  00D4               	movwf	___flge@ff2
  2468  0ECB  120A  158A  226F  120A  158A  	fcall	___flge
  2469  0ED0  1803               	btfsc	3,0
  2470  0ED1  2ED3               	goto	u3761
  2471  0ED2  2ED4               	goto	u3760
  2472  0ED3                     u3761:
  2473  0ED3  2F79               	goto	l3047
  2474  0ED4                     u3760:
  2475  0ED4                     l3029:
  2476                           
  2477                           ;Serial_Tank.c: 416:                     if (setAgit == 0) {
  2478  0ED4  1683               	bsf	3,5	;RP0=1, select bank1
  2479  0ED5  1303               	bcf	3,6	;RP1=0, select bank1
  2480  0ED6  083B               	movf	_setAgit^(0+128),w
  2481  0ED7  043C               	iorwf	(_setAgit+1)^(0+128),w
  2482  0ED8  1D03               	btfss	3,2
  2483  0ED9  2EDB               	goto	u3771
  2484  0EDA  2EDC               	goto	u3770
  2485  0EDB                     u3771:
  2486  0EDB  2EE9               	goto	l3033
  2487  0EDC                     u3770:
  2488  0EDC                     l3031:
  2489                           
  2490                           ;Serial_Tank.c: 417:                         serial_tx(0x04);
  2491  0EDC  3004               	movlw	4
  2492  0EDD  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2493                           
  2494                           ;Serial_Tank.c: 418:                         serial_tx(0x00);
  2495  0EE2  3000               	movlw	0
  2496  0EE3  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2497                           
  2498                           ;Serial_Tank.c: 419:                     } else if (setAgit == 1) {
  2499  0EE8  2EFB               	goto	l189
  2500  0EE9                     l3033:
  2501  0EE9  033B               	decf	_setAgit^(0+128),w
  2502  0EEA  043C               	iorwf	(_setAgit+1)^(0+128),w
  2503  0EEB  1D03               	btfss	3,2
  2504  0EEC  2EEE               	goto	u3781
  2505  0EED  2EEF               	goto	u3780
  2506  0EEE                     u3781:
  2507  0EEE  2EFB               	goto	l189
  2508  0EEF                     u3780:
  2509  0EEF                     l3035:
  2510                           
  2511                           ;Serial_Tank.c: 420:                         serial_tx(0x04);
  2512  0EEF  3004               	movlw	4
  2513  0EF0  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2514                           
  2515                           ;Serial_Tank.c: 421:                         serial_tx(0x01);
  2516  0EF5  3001               	movlw	1
  2517  0EF6  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2518  0EFB                     l189:
  2519                           
  2520                           ;Serial_Tank.c: 424:                     if (get_temperatura() > setTemp) {
  2521  0EFB  160A  118A  25FC  120A  158A  	fcall	_get_temperatura
  2522  0F00  0879               	movf	?_get_temperatura+1,w
  2523  0F01  1683               	bsf	3,5	;RP0=1, select bank1
  2524  0F02  1303               	bcf	3,6	;RP1=0, select bank1
  2525  0F03  023E               	subwf	(_setTemp+1)^(0+128),w
  2526  0F04  1D03               	skipz
  2527  0F05  2F08               	goto	u3795
  2528  0F06  0878               	movf	?_get_temperatura,w
  2529  0F07  023D               	subwf	_setTemp^(0+128),w
  2530  0F08                     u3795:
  2531  0F08  1803               	skipnc
  2532  0F09  2F0B               	goto	u3791
  2533  0F0A  2F0C               	goto	u3790
  2534  0F0B                     u3791:
  2535  0F0B  2F25               	goto	l3039
  2536  0F0C                     u3790:
  2537  0F0C                     l3037:
  2538                           
  2539                           ;Serial_Tank.c: 425:                         serial_tx(0x02);
  2540  0F0C  3002               	movlw	2
  2541  0F0D  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2542                           
  2543                           ;Serial_Tank.c: 426:                         serial_tx(0x00);
  2544  0F12  3000               	movlw	0
  2545  0F13  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2546                           
  2547                           ;Serial_Tank.c: 427:                         serial_tx(0x03);
  2548  0F18  3003               	movlw	3
  2549  0F19  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2550                           
  2551                           ;Serial_Tank.c: 428:                         serial_tx(0x01);
  2552  0F1E  3001               	movlw	1
  2553  0F1F  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2554                           
  2555                           ;Serial_Tank.c: 429:                     } else if (get_temperatura() < setTemp) {
  2556  0F24  2FA5               	goto	l196
  2557  0F25                     l3039:
  2558  0F25  160A  118A  25FC  120A  158A  	fcall	_get_temperatura
  2559  0F2A  1683               	bsf	3,5	;RP0=1, select bank1
  2560  0F2B  1303               	bcf	3,6	;RP1=0, select bank1
  2561  0F2C  083E               	movf	(_setTemp+1)^(0+128),w
  2562  0F2D  0279               	subwf	?_get_temperatura+1,w
  2563  0F2E  1D03               	skipz
  2564  0F2F  2F32               	goto	u3805
  2565  0F30  083D               	movf	_setTemp^(0+128),w
  2566  0F31  0278               	subwf	?_get_temperatura,w
  2567  0F32                     u3805:
  2568  0F32  1803               	skipnc
  2569  0F33  2F35               	goto	u3801
  2570  0F34  2F36               	goto	u3800
  2571  0F35                     u3801:
  2572  0F35  2F4F               	goto	l3043
  2573  0F36                     u3800:
  2574  0F36                     l3041:
  2575                           
  2576                           ;Serial_Tank.c: 430:                         serial_tx(0x02);
  2577  0F36  3002               	movlw	2
  2578  0F37  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2579                           
  2580                           ;Serial_Tank.c: 431:                         serial_tx(0x01);
  2581  0F3C  3001               	movlw	1
  2582  0F3D  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2583                           
  2584                           ;Serial_Tank.c: 432:                         serial_tx(0x03);
  2585  0F42  3003               	movlw	3
  2586  0F43  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2587                           
  2588                           ;Serial_Tank.c: 433:                         serial_tx(0x00);
  2589  0F48  3000               	movlw	0
  2590  0F49  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2591                           
  2592                           ;Serial_Tank.c: 434:                     } else if (get_temperatura() == setTemp) {
  2593  0F4E  2FA5               	goto	l196
  2594  0F4F                     l3043:
  2595  0F4F  160A  118A  25FC  120A  158A  	fcall	_get_temperatura
  2596  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  2597  0F55  1303               	bcf	3,6	;RP1=0, select bank1
  2598  0F56  083E               	movf	(_setTemp+1)^(0+128),w
  2599  0F57  0679               	xorwf	?_get_temperatura+1,w
  2600  0F58  1D03               	skipz
  2601  0F59  2F5C               	goto	u3815
  2602  0F5A  083D               	movf	_setTemp^(0+128),w
  2603  0F5B  0678               	xorwf	?_get_temperatura,w
  2604  0F5C                     u3815:
  2605  0F5C  1D03               	skipz
  2606  0F5D  2F5F               	goto	u3811
  2607  0F5E  2F60               	goto	u3810
  2608  0F5F                     u3811:
  2609  0F5F  2FA5               	goto	l196
  2610  0F60                     u3810:
  2611  0F60                     l3045:
  2612                           
  2613                           ;Serial_Tank.c: 435:                         serial_tx(0x02);
  2614  0F60  3002               	movlw	2
  2615  0F61  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2616                           
  2617                           ;Serial_Tank.c: 436:                         serial_tx(0x00);
  2618  0F66  3000               	movlw	0
  2619  0F67  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2620                           
  2621                           ;Serial_Tank.c: 437:                         serial_tx(0x03);
  2622  0F6C  3003               	movlw	3
  2623  0F6D  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2624                           
  2625                           ;Serial_Tank.c: 438:                         serial_tx(0x00);
  2626  0F72  3000               	movlw	0
  2627  0F73  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2628  0F78  2FA5               	goto	l196
  2629  0F79                     l3047:
  2630                           
  2631                           ;Serial_Tank.c: 441:                     if (setAgit == 1) {
  2632  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  2633  0F7A  1303               	bcf	3,6	;RP1=0, select bank1
  2634  0F7B  033B               	decf	_setAgit^(0+128),w
  2635  0F7C  043C               	iorwf	(_setAgit+1)^(0+128),w
  2636  0F7D  1D03               	btfss	3,2
  2637  0F7E  2F80               	goto	u3821
  2638  0F7F  2F81               	goto	u3820
  2639  0F80                     u3821:
  2640  0F80  2F8D               	goto	l197
  2641  0F81                     u3820:
  2642  0F81                     l3049:
  2643                           
  2644                           ;Serial_Tank.c: 442:                         serial_tx(0x04);
  2645  0F81  3004               	movlw	4
  2646  0F82  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2647                           
  2648                           ;Serial_Tank.c: 443:                         serial_tx(0x00);
  2649  0F87  3000               	movlw	0
  2650  0F88  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2651  0F8D                     l197:	
  2652                           ;Serial_Tank.c: 444:                     }
  2653                           
  2654                           
  2655                           ;Serial_Tank.c: 445:                     serial_tx(0x02);
  2656  0F8D  3002               	movlw	2
  2657  0F8E  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2658                           
  2659                           ;Serial_Tank.c: 446:                     serial_tx(0x00);
  2660  0F93  3000               	movlw	0
  2661  0F94  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2662                           
  2663                           ;Serial_Tank.c: 447:                     serial_tx(0x03);
  2664  0F99  3003               	movlw	3
  2665  0F9A  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2666                           
  2667                           ;Serial_Tank.c: 448:                     serial_tx(0x00);
  2668  0F9F  3000               	movlw	0
  2669  0FA0  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2670  0FA5                     l196:	
  2671                           ;Serial_Tank.c: 449:                 }
  2672                           
  2673                           
  2674                           ;Serial_Tank.c: 451:                 if (get_volume() != setVolm) {
  2675  0FA5  120A  158A  207F  120A  158A  	fcall	_get_volume
  2676  0FAA  1683               	bsf	3,5	;RP0=1, select bank1
  2677  0FAB  1303               	bcf	3,6	;RP1=0, select bank1
  2678  0FAC  0840               	movf	(_setVolm+1)^(0+128),w
  2679  0FAD  0679               	xorwf	?_get_volume+1,w
  2680  0FAE  1D03               	skipz
  2681  0FAF  2FB2               	goto	u3835
  2682  0FB0  083F               	movf	_setVolm^(0+128),w
  2683  0FB1  0678               	xorwf	?_get_volume,w
  2684  0FB2                     u3835:
  2685  0FB2  1903               	skipnz
  2686  0FB3  2FB5               	goto	u3831
  2687  0FB4  2FB6               	goto	u3830
  2688  0FB5                     u3831:
  2689  0FB5  2DDE               	goto	l2989
  2690  0FB6                     u3830:
  2691  0FB6                     l3051:
  2692                           
  2693                           ;Serial_Tank.c: 452:                     if (get_volume() > setVolm) {
  2694  0FB6  120A  158A  207F  120A  158A  	fcall	_get_volume
  2695  0FBB  0879               	movf	?_get_volume+1,w
  2696  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  2697  0FBD  1303               	bcf	3,6	;RP1=0, select bank1
  2698  0FBE  0240               	subwf	(_setVolm+1)^(0+128),w
  2699  0FBF  1D03               	skipz
  2700  0FC0  2FC3               	goto	u3845
  2701  0FC1  0878               	movf	?_get_volume,w
  2702  0FC2  023F               	subwf	_setVolm^(0+128),w
  2703  0FC3                     u3845:
  2704  0FC3  1803               	skipnc
  2705  0FC4  2FC6               	goto	u3841
  2706  0FC5  2FC7               	goto	u3840
  2707  0FC6                     u3841:
  2708  0FC6  2FD4               	goto	l3055
  2709  0FC7                     u3840:
  2710  0FC7                     l3053:
  2711                           
  2712                           ;Serial_Tank.c: 453:                         serial_tx(0x00);
  2713  0FC7  3000               	movlw	0
  2714  0FC8  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2715                           
  2716                           ;Serial_Tank.c: 454:                         serial_tx(0x00);
  2717  0FCD  3000               	movlw	0
  2718  0FCE  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2719                           
  2720                           ;Serial_Tank.c: 455:                     } else if (get_volume() < setVolm) {
  2721  0FD3  2DDE               	goto	l2989
  2722  0FD4                     l3055:
  2723  0FD4  120A  158A  207F  120A  158A  	fcall	_get_volume
  2724  0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  2725  0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  2726  0FDB  0840               	movf	(_setVolm+1)^(0+128),w
  2727  0FDC  0279               	subwf	?_get_volume+1,w
  2728  0FDD  1D03               	skipz
  2729  0FDE  2FE1               	goto	u3855
  2730  0FDF  083F               	movf	_setVolm^(0+128),w
  2731  0FE0  0278               	subwf	?_get_volume,w
  2732  0FE1                     u3855:
  2733  0FE1  1803               	skipnc
  2734  0FE2  2FE4               	goto	u3851
  2735  0FE3  2FE5               	goto	u3850
  2736  0FE4                     u3851:
  2737  0FE4  2FF2               	goto	l198
  2738  0FE5                     u3850:
  2739  0FE5                     l3057:
  2740                           
  2741                           ;Serial_Tank.c: 456:                         serial_tx(0x00);
  2742  0FE5  3000               	movlw	0
  2743  0FE6  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2744                           
  2745                           ;Serial_Tank.c: 457:                         serial_tx(0x01);
  2746  0FEB  3001               	movlw	1
  2747  0FEC  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2748  0FF1  2DDE               	goto	l2989
  2749  0FF2                     l198:	
  2750                           ;Serial_Tank.c: 459:                 }
  2751                           
  2752  0FF2  2DDE               	goto	l2989
  2753  0FF3                     l182:	
  2754                           ;Serial_Tank.c: 461:         }
  2755                           
  2756                           
  2757                           ;Serial_Tank.c: 463:         if (!PORTBbits.RB1) {
  2758  0FF3  1886               	btfsc	6,1	;volatile
  2759  0FF4  2FF6               	goto	u3861
  2760  0FF5  2FF7               	goto	u3860
  2761  0FF6                     u3861:
  2762  0FF6  2FF8               	goto	l3063
  2763  0FF7                     u3860:
  2764  0FF7                     l3059:
  2765  0FF7  2FFF               	goto	l185
  2766  0FF8                     l3063:
  2767                           
  2768                           ;Serial_Tank.c: 380:     while (waiting) {
  2769  0FF8  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0FF9  1303               	bcf	3,6	;RP1=0, select bank0
  2771  0FFA  0860               	movf	EtapaCinco@waiting,w
  2772  0FFB  1D03               	btfss	3,2
  2773  0FFC  2FFE               	goto	u3871
  2774  0FFD  2FFF               	goto	u3870
  2775  0FFE                     u3871:
  2776  0FFE  2DD5               	goto	l181
  2777  0FFF                     u3870:
  2778  0FFF                     l185:
  2779  0FFF  0008               	return
  2780  1000                     __end_of_EtapaCinco:
  2781                           
  2782                           	psect	text7
  2783  087F                     __ptext7:	
  2784 ;; *************** function _get_volume *****************
  2785 ;; Defined at:
  2786 ;;		line 470 in file "Serial_Tank.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  aux             2    6[BANK0 ] unsigned int 
  2791 ;;  auxl            2    4[BANK0 ] unsigned int 
  2792 ;;  auxh            2    2[BANK0 ] unsigned int 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  2    8[COMMON] unsigned int 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, pclath, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2802 ;;      Params:         2       0       0       0       0
  2803 ;;      Locals:         0       6       0       0       0
  2804 ;;      Temps:          0       2       0       0       0
  2805 ;;      Totals:         2       8       0       0       0
  2806 ;;Total ram usage:       10 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 2
  2809 ;; This function calls:
  2810 ;;		_serial_rx
  2811 ;;		_serial_tx
  2812 ;; This function is called by:
  2813 ;;		_telaUmTexto
  2814 ;;		_EtapaCinco
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818  087F                     _get_volume:	
  2819                           ;psect for function _get_volume
  2820                           
  2821  087F                     l2941:	
  2822                           ;incstack = 0
  2823                           ; Regs used in _get_volume: [wreg+status,2+status,0+pclath+cstack]
  2824                           
  2825                           
  2826                           ;Serial_Tank.c: 471:     unsigned int auxh;;Serial_Tank.c: 472:     unsigned int auxl;;S
      +                          erial_Tank.c: 473:     unsigned int aux;;Serial_Tank.c: 474:     serial_tx(0x30);
  2827  087F  3030               	movlw	48
  2828  0880  160A  118A  24C9  120A  158A  	fcall	_serial_tx
  2829                           
  2830                           ;Serial_Tank.c: 475:     auxh = serial_rx(0);
  2831  0885  3000               	movlw	0
  2832  0886  00F2               	movwf	serial_rx@timeout
  2833  0887  00F3               	movwf	serial_rx@timeout+1
  2834  0888  160A  118A  266A  120A  158A  	fcall	_serial_rx
  2835  088D  1283               	bcf	3,5	;RP0=0, select bank0
  2836  088E  1303               	bcf	3,6	;RP1=0, select bank0
  2837  088F  00A0               	movwf	??_get_volume
  2838  0890  01A1               	clrf	??_get_volume+1
  2839  0891  0820               	movf	??_get_volume,w
  2840  0892  00A2               	movwf	get_volume@auxh
  2841  0893  0821               	movf	??_get_volume+1,w
  2842  0894  00A3               	movwf	get_volume@auxh+1
  2843                           
  2844                           ;Serial_Tank.c: 476:     auxl = serial_rx(0);
  2845  0895  3000               	movlw	0
  2846  0896  00F2               	movwf	serial_rx@timeout
  2847  0897  00F3               	movwf	serial_rx@timeout+1
  2848  0898  160A  118A  266A  120A  158A  	fcall	_serial_rx
  2849  089D  1283               	bcf	3,5	;RP0=0, select bank0
  2850  089E  1303               	bcf	3,6	;RP1=0, select bank0
  2851  089F  00A0               	movwf	??_get_volume
  2852  08A0  01A1               	clrf	??_get_volume+1
  2853  08A1  0820               	movf	??_get_volume,w
  2854  08A2  00A4               	movwf	get_volume@auxl
  2855  08A3  0821               	movf	??_get_volume+1,w
  2856  08A4  00A5               	movwf	get_volume@auxl+1
  2857  08A5                     l2943:
  2858                           
  2859                           ;Serial_Tank.c: 477:     aux = (unsigned int) (auxh << 8 | auxl);
  2860  08A5  0822               	movf	get_volume@auxh,w
  2861  08A6  00A1               	movwf	??_get_volume+1
  2862  08A7  01A0               	clrf	??_get_volume
  2863  08A8  0824               	movf	get_volume@auxl,w
  2864  08A9  0420               	iorwf	??_get_volume,w
  2865  08AA  00A6               	movwf	get_volume@aux
  2866  08AB  0825               	movf	get_volume@auxl+1,w
  2867  08AC  0421               	iorwf	??_get_volume+1,w
  2868  08AD  00A7               	movwf	get_volume@aux+1
  2869  08AE                     l2945:
  2870                           
  2871                           ;Serial_Tank.c: 478:     return aux;
  2872  08AE  0827               	movf	get_volume@aux+1,w
  2873  08AF  00F9               	movwf	?_get_volume+1
  2874  08B0  0826               	movf	get_volume@aux,w
  2875  08B1  00F8               	movwf	?_get_volume
  2876  08B2                     l208:
  2877  08B2  0008               	return
  2878  08B3                     __end_of_get_volume:
  2879                           
  2880                           	psect	text8
  2881  15FC                     __ptext8:	
  2882 ;; *************** function _get_temperatura *****************
  2883 ;; Defined at:
  2884 ;;		line 481 in file "Serial_Tank.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  aux             2    6[BANK0 ] unsigned int 
  2889 ;;  auxl            2    4[BANK0 ] unsigned int 
  2890 ;;  auxh            2    2[BANK0 ] unsigned int 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  2    8[COMMON] unsigned int 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0, pclath, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2900 ;;      Params:         2       0       0       0       0
  2901 ;;      Locals:         0       6       0       0       0
  2902 ;;      Temps:          0       2       0       0       0
  2903 ;;      Totals:         2       8       0       0       0
  2904 ;;Total ram usage:       10 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 2
  2907 ;; This function calls:
  2908 ;;		_serial_rx
  2909 ;;		_serial_tx
  2910 ;; This function is called by:
  2911 ;;		_telaUmTexto
  2912 ;;		_EtapaCinco
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916  15FC                     _get_temperatura:	
  2917                           ;psect for function _get_temperatura
  2918                           
  2919  15FC                     l2953:	
  2920                           ;incstack = 0
  2921                           ; Regs used in _get_temperatura: [wreg+status,2+status,0+pclath+cstack]
  2922                           
  2923                           
  2924                           ;Serial_Tank.c: 482:     unsigned int auxh;;Serial_Tank.c: 483:     unsigned int auxl;;S
      +                          erial_Tank.c: 484:     unsigned int aux;;Serial_Tank.c: 485:     serial_tx(0x31);
  2925  15FC  3031               	movlw	49
  2926  15FD  160A  118A  24C9  160A  118A  	fcall	_serial_tx
  2927                           
  2928                           ;Serial_Tank.c: 486:     auxh = serial_rx(0);
  2929  1602  3000               	movlw	0
  2930  1603  00F2               	movwf	serial_rx@timeout
  2931  1604  00F3               	movwf	serial_rx@timeout+1
  2932  1605  160A  118A  266A  160A  118A  	fcall	_serial_rx
  2933  160A  1283               	bcf	3,5	;RP0=0, select bank0
  2934  160B  1303               	bcf	3,6	;RP1=0, select bank0
  2935  160C  00A0               	movwf	??_get_temperatura
  2936  160D  01A1               	clrf	??_get_temperatura+1
  2937  160E  0820               	movf	??_get_temperatura,w
  2938  160F  00A2               	movwf	get_temperatura@auxh
  2939  1610  0821               	movf	??_get_temperatura+1,w
  2940  1611  00A3               	movwf	get_temperatura@auxh+1
  2941                           
  2942                           ;Serial_Tank.c: 487:     auxl = serial_rx(0);
  2943  1612  3000               	movlw	0
  2944  1613  00F2               	movwf	serial_rx@timeout
  2945  1614  00F3               	movwf	serial_rx@timeout+1
  2946  1615  160A  118A  266A  160A  118A  	fcall	_serial_rx
  2947  161A  1283               	bcf	3,5	;RP0=0, select bank0
  2948  161B  1303               	bcf	3,6	;RP1=0, select bank0
  2949  161C  00A0               	movwf	??_get_temperatura
  2950  161D  01A1               	clrf	??_get_temperatura+1
  2951  161E  0820               	movf	??_get_temperatura,w
  2952  161F  00A4               	movwf	get_temperatura@auxl
  2953  1620  0821               	movf	??_get_temperatura+1,w
  2954  1621  00A5               	movwf	get_temperatura@auxl+1
  2955  1622                     l2955:
  2956                           
  2957                           ;Serial_Tank.c: 488:     aux = (unsigned int) (auxh << 8 | auxl);
  2958  1622  0822               	movf	get_temperatura@auxh,w
  2959  1623  00A1               	movwf	??_get_temperatura+1
  2960  1624  01A0               	clrf	??_get_temperatura
  2961  1625  0824               	movf	get_temperatura@auxl,w
  2962  1626  0420               	iorwf	??_get_temperatura,w
  2963  1627  00A6               	movwf	get_temperatura@aux
  2964  1628  0825               	movf	get_temperatura@auxl+1,w
  2965  1629  0421               	iorwf	??_get_temperatura+1,w
  2966  162A  00A7               	movwf	get_temperatura@aux+1
  2967  162B                     l2957:
  2968                           
  2969                           ;Serial_Tank.c: 489:     return aux;
  2970  162B  0827               	movf	get_temperatura@aux+1,w
  2971  162C  00F9               	movwf	?_get_temperatura+1
  2972  162D  0826               	movf	get_temperatura@aux,w
  2973  162E  00F8               	movwf	?_get_temperatura
  2974  162F                     l211:
  2975  162F  0008               	return
  2976  1630                     __end_of_get_temperatura:
  2977                           
  2978                           	psect	text9
  2979  14C9                     __ptext9:	
  2980 ;; *************** function _serial_tx *****************
  2981 ;; Defined at:
  2982 ;;		line 43 in file "serial.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  val             1    wreg     unsigned char 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  val             1    2[COMMON] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2996 ;;      Params:         0       0       0       0       0
  2997 ;;      Locals:         1       0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0
  2999 ;;      Totals:         1       0       0       0       0
  3000 ;;Total ram usage:        1 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; Hardware stack levels required when called: 1
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_main
  3007 ;;		_automatico
  3008 ;;		_EtapaCinco
  3009 ;;		_get_volume
  3010 ;;		_get_temperatura
  3011 ;;		_serial_tx_str
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015  14C9                     _serial_tx:	
  3016                           ;psect for function _serial_tx
  3017                           
  3018                           
  3019                           ;incstack = 0
  3020                           ; Regs used in _serial_tx: [wreg]
  3021                           ;serial_tx@val stored from wreg
  3022  14C9  00F2               	movwf	serial_tx@val
  3023  14CA                     l1923:
  3024                           
  3025                           ;serial.c: 44:     TXREG = val;
  3026  14CA  0872               	movf	serial_tx@val,w
  3027  14CB  1283               	bcf	3,5	;RP0=0, select bank0
  3028  14CC  1303               	bcf	3,6	;RP1=0, select bank0
  3029  14CD  0099               	movwf	25	;volatile
  3030  14CE                     l231:	
  3031                           ;serial.c: 45:     while (!TXSTAbits.TRMT);
  3032                           
  3033  14CE  1683               	bsf	3,5	;RP0=1, select bank1
  3034  14CF  1303               	bcf	3,6	;RP1=0, select bank1
  3035  14D0  1C98               	btfss	24,1	;volatile
  3036  14D1  2CD3               	goto	u1821
  3037  14D2  2CD4               	goto	u1820
  3038  14D3                     u1821:
  3039  14D3  2CCE               	goto	l231
  3040  14D4                     u1820:
  3041  14D4                     l234:
  3042  14D4  0008               	return
  3043  14D5                     __end_of_serial_tx:
  3044                           
  3045                           	psect	text10
  3046  166A                     __ptext10:	
  3047 ;; *************** function _serial_rx *****************
  3048 ;; Defined at:
  3049 ;;		line 57 in file "serial.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  timeout         2    2[COMMON] unsigned int 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  to              2    6[COMMON] unsigned int 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      unsigned char 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3063 ;;      Params:         2       0       0       0       0
  3064 ;;      Locals:         2       0       0       0       0
  3065 ;;      Temps:          2       0       0       0       0
  3066 ;;      Totals:         6       0       0       0       0
  3067 ;;Total ram usage:        6 bytes
  3068 ;; Hardware stack levels used: 1
  3069 ;; Hardware stack levels required when called: 1
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_get_volume
  3074 ;;		_get_temperatura
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078  166A                     _serial_rx:	
  3079                           ;psect for function _serial_rx
  3080                           
  3081  166A                     l1925:	
  3082                           ;incstack = 0
  3083                           ; Regs used in _serial_rx: [wreg+status,2+status,0]
  3084                           
  3085                           
  3086                           ;serial.c: 58:     unsigned int to = 0;
  3087  166A  01F6               	clrf	serial_rx@to
  3088  166B  01F7               	clrf	serial_rx@to+1
  3089  166C                     l1927:
  3090                           
  3091                           ;serial.c: 60:     if (RCSTAbits.FERR || RCSTAbits.OERR)
  3092  166C  1283               	bcf	3,5	;RP0=0, select bank0
  3093  166D  1303               	bcf	3,6	;RP1=0, select bank0
  3094  166E  1918               	btfsc	24,2	;volatile
  3095  166F  2E71               	goto	u1831
  3096  1670  2E72               	goto	u1830
  3097  1671                     u1831:
  3098  1671  2E76               	goto	l245
  3099  1672                     u1830:
  3100  1672                     l1929:
  3101  1672  1C98               	btfss	24,1	;volatile
  3102  1673  2E75               	goto	u1841
  3103  1674  2E76               	goto	u1840
  3104  1675                     u1841:
  3105  1675  2E88               	goto	l246
  3106  1676                     u1840:
  3107  1676                     l245:
  3108                           
  3109                           ;serial.c: 61:     {;serial.c: 62:         RCSTAbits.CREN = 0;
  3110  1676  1218               	bcf	24,4	;volatile
  3111                           
  3112                           ;serial.c: 63:         RCSTAbits.CREN = 1;
  3113  1677  1618               	bsf	24,4	;volatile
  3114  1678  2E88               	goto	l246
  3115  1679                     l1931:
  3116                           
  3117                           ;serial.c: 67:         _delay((unsigned long)((20)*(4000000/4000.0)));
  3118  1679  301A               	movlw	26
  3119  167A  00F5               	movwf	??_serial_rx+1
  3120  167B  30F8               	movlw	248
  3121  167C  00F4               	movwf	??_serial_rx
  3122  167D                     u4647:
  3123  167D  0BF4               	decfsz	??_serial_rx,f
  3124  167E  2E7D               	goto	u4647
  3125  167F  0BF5               	decfsz	??_serial_rx+1,f
  3126  1680  2E7D               	goto	u4647
  3127  1681  0000               	nop
  3128                           
  3129                           ;serial.c: 68:         to += 20;
  3130  1682  3014               	movlw	20
  3131  1683  07F6               	addwf	serial_rx@to,f
  3132  1684  1803               	skipnc
  3133  1685  0AF7               	incf	serial_rx@to+1,f
  3134  1686  3000               	movlw	0
  3135  1687  07F7               	addwf	serial_rx@to+1,f
  3136  1688                     l246:	
  3137                           ;serial.c: 69:     }
  3138                           
  3139                           
  3140                           ;serial.c: 66:     while (((to < timeout) || (!timeout))&&(!PIR1bits.RCIF)) {
  3141  1688  0873               	movf	serial_rx@timeout+1,w
  3142  1689  0277               	subwf	serial_rx@to+1,w
  3143  168A  1D03               	skipz
  3144  168B  2E8E               	goto	u1855
  3145  168C  0872               	movf	serial_rx@timeout,w
  3146  168D  0276               	subwf	serial_rx@to,w
  3147  168E                     u1855:
  3148  168E  1C03               	skipc
  3149  168F  2E91               	goto	u1851
  3150  1690  2E92               	goto	u1850
  3151  1691                     u1851:
  3152  1691  2E98               	goto	l251
  3153  1692                     u1850:
  3154  1692                     l1933:
  3155  1692  0872               	movf	serial_rx@timeout,w
  3156  1693  0473               	iorwf	serial_rx@timeout+1,w
  3157  1694  1D03               	btfss	3,2
  3158  1695  2E97               	goto	u1861
  3159  1696  2E98               	goto	u1860
  3160  1697                     u1861:
  3161  1697  2E9E               	goto	l252
  3162  1698                     u1860:
  3163  1698                     l251:
  3164  1698  1283               	bcf	3,5	;RP0=0, select bank0
  3165  1699  1303               	bcf	3,6	;RP1=0, select bank0
  3166  169A  1E8C               	btfss	12,5	;volatile
  3167  169B  2E9D               	goto	u1871
  3168  169C  2E9E               	goto	u1870
  3169  169D                     u1871:
  3170  169D  2E79               	goto	l1931
  3171  169E                     u1870:
  3172  169E                     l252:
  3173                           
  3174                           ;serial.c: 70:     if (PIR1bits.RCIF)
  3175  169E  1283               	bcf	3,5	;RP0=0, select bank0
  3176  169F  1303               	bcf	3,6	;RP1=0, select bank0
  3177  16A0  1E8C               	btfss	12,5	;volatile
  3178  16A1  2EA3               	goto	u1881
  3179  16A2  2EA4               	goto	u1880
  3180  16A3                     u1881:
  3181  16A3  2EA6               	goto	l1941
  3182  16A4                     u1880:
  3183  16A4                     l1935:
  3184                           
  3185                           ;serial.c: 71:         return RCREG;
  3186  16A4  081A               	movf	26,w	;volatile
  3187  16A5  2EA7               	goto	l254
  3188  16A6                     l1941:
  3189                           
  3190                           ;serial.c: 73:         return 0xA5;
  3191  16A6  30A5               	movlw	165
  3192  16A7                     l254:
  3193  16A7  0008               	return
  3194  16A8                     __end_of_serial_rx:
  3195                           
  3196                           	psect	text11
  3197  0A6F                     __ptext11:	
  3198 ;; *************** function ___flge *****************
  3199 ;; Defined at:
  3200 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flge.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  ff1             4   48[BANK0 ] unsigned char 
  3203 ;;  ff2             4   52[BANK0 ] unsigned char 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;		None               void
  3208 ;; Registers used:
  3209 ;;		wreg, status,2, status,0
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3215 ;;      Params:         0       8       0       0       0
  3216 ;;      Locals:         0       0       0       0       0
  3217 ;;      Temps:          0       4       0       0       0
  3218 ;;      Totals:         0      12       0       0       0
  3219 ;;Total ram usage:       12 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 1
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_EtapaCinco
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229  0A6F                     ___flge:	
  3230                           ;psect for function ___flge
  3231                           
  3232  0A6F                     l2049:	
  3233                           ;incstack = 0
  3234                           ; Regs used in ___flge: [wreg+status,2+status,0]
  3235                           
  3236  0A6F  3000               	movlw	0
  3237  0A70  1283               	bcf	3,5	;RP0=0, select bank0
  3238  0A71  1303               	bcf	3,6	;RP1=0, select bank0
  3239  0A72  0550               	andwf	___flge@ff1,w
  3240  0A73  00D8               	movwf	??___flge
  3241  0A74  3000               	movlw	0
  3242  0A75  0551               	andwf	___flge@ff1+1,w
  3243  0A76  00D9               	movwf	??___flge+1
  3244  0A77  3080               	movlw	128
  3245  0A78  0552               	andwf	___flge@ff1+2,w
  3246  0A79  00DA               	movwf	??___flge+2
  3247  0A7A  307F               	movlw	127
  3248  0A7B  0553               	andwf	___flge@ff1+3,w
  3249  0A7C  00DB               	movwf	??___flge+3
  3250  0A7D  085B               	movf	??___flge+3,w
  3251  0A7E  045A               	iorwf	??___flge+2,w
  3252  0A7F  0459               	iorwf	??___flge+1,w
  3253  0A80  0458               	iorwf	??___flge,w
  3254  0A81  1D03               	skipz
  3255  0A82  2A84               	goto	u2031
  3256  0A83  2A85               	goto	u2030
  3257  0A84                     u2031:
  3258  0A84  2A8D               	goto	l579
  3259  0A85                     u2030:
  3260  0A85                     l2051:
  3261  0A85  3000               	movlw	0
  3262  0A86  00D3               	movwf	___flge@ff1+3
  3263  0A87  3000               	movlw	0
  3264  0A88  00D2               	movwf	___flge@ff1+2
  3265  0A89  3000               	movlw	0
  3266  0A8A  00D1               	movwf	___flge@ff1+1
  3267  0A8B  3000               	movlw	0
  3268  0A8C  00D0               	movwf	___flge@ff1
  3269  0A8D                     l579:
  3270  0A8D  3000               	movlw	0
  3271  0A8E  0554               	andwf	___flge@ff2,w
  3272  0A8F  00D8               	movwf	??___flge
  3273  0A90  3000               	movlw	0
  3274  0A91  0555               	andwf	___flge@ff2+1,w
  3275  0A92  00D9               	movwf	??___flge+1
  3276  0A93  3080               	movlw	128
  3277  0A94  0556               	andwf	___flge@ff2+2,w
  3278  0A95  00DA               	movwf	??___flge+2
  3279  0A96  307F               	movlw	127
  3280  0A97  0557               	andwf	___flge@ff2+3,w
  3281  0A98  00DB               	movwf	??___flge+3
  3282  0A99  085B               	movf	??___flge+3,w
  3283  0A9A  045A               	iorwf	??___flge+2,w
  3284  0A9B  0459               	iorwf	??___flge+1,w
  3285  0A9C  0458               	iorwf	??___flge,w
  3286  0A9D  1D03               	skipz
  3287  0A9E  2AA0               	goto	u2041
  3288  0A9F  2AA1               	goto	u2040
  3289  0AA0                     u2041:
  3290  0AA0  2AA9               	goto	l2055
  3291  0AA1                     u2040:
  3292  0AA1                     l2053:
  3293  0AA1  3000               	movlw	0
  3294  0AA2  00D7               	movwf	___flge@ff2+3
  3295  0AA3  3000               	movlw	0
  3296  0AA4  00D6               	movwf	___flge@ff2+2
  3297  0AA5  3000               	movlw	0
  3298  0AA6  00D5               	movwf	___flge@ff2+1
  3299  0AA7  3000               	movlw	0
  3300  0AA8  00D4               	movwf	___flge@ff2
  3301  0AA9                     l2055:
  3302  0AA9  1FD3               	btfss	___flge@ff1+3,7
  3303  0AAA  2AAC               	goto	u2051
  3304  0AAB  2AAD               	goto	u2050
  3305  0AAC                     u2051:
  3306  0AAC  2AD1               	goto	l2059
  3307  0AAD                     u2050:
  3308  0AAD                     l2057:
  3309  0AAD  3000               	movlw	0
  3310  0AAE  00D8               	movwf	??___flge
  3311  0AAF  3000               	movlw	0
  3312  0AB0  00D9               	movwf	??___flge+1
  3313  0AB1  3000               	movlw	0
  3314  0AB2  00DA               	movwf	??___flge+2
  3315  0AB3  3080               	movlw	128
  3316  0AB4  00DB               	movwf	??___flge+3
  3317  0AB5  0850               	movf	___flge@ff1,w
  3318  0AB6  02D8               	subwf	??___flge,f
  3319  0AB7  0851               	movf	___flge@ff1+1,w
  3320  0AB8  1C03               	skipc
  3321  0AB9  0F51               	incfsz	___flge@ff1+1,w
  3322  0ABA  2ABC               	goto	u2061
  3323  0ABB  2ABD               	goto	u2062
  3324  0ABC                     u2061:
  3325  0ABC  02D9               	subwf	??___flge+1,f
  3326  0ABD                     u2062:
  3327  0ABD  0852               	movf	___flge@ff1+2,w
  3328  0ABE  1C03               	skipc
  3329  0ABF  0F52               	incfsz	___flge@ff1+2,w
  3330  0AC0  2AC2               	goto	u2063
  3331  0AC1  2AC3               	goto	u2064
  3332  0AC2                     u2063:
  3333  0AC2  02DA               	subwf	??___flge+2,f
  3334  0AC3                     u2064:
  3335  0AC3  0853               	movf	___flge@ff1+3,w
  3336  0AC4  1C03               	skipc
  3337  0AC5  0F53               	incfsz	___flge@ff1+3,w
  3338  0AC6  2AC8               	goto	u2065
  3339  0AC7  2AC9               	goto	u2066
  3340  0AC8                     u2065:
  3341  0AC8  02DB               	subwf	??___flge+3,f
  3342  0AC9                     u2066:
  3343  0AC9  085B               	movf	??___flge+3,w
  3344  0ACA  00D3               	movwf	___flge@ff1+3
  3345  0ACB  085A               	movf	??___flge+2,w
  3346  0ACC  00D2               	movwf	___flge@ff1+2
  3347  0ACD  0859               	movf	??___flge+1,w
  3348  0ACE  00D1               	movwf	___flge@ff1+1
  3349  0ACF  0858               	movf	??___flge,w
  3350  0AD0  00D0               	movwf	___flge@ff1
  3351  0AD1                     l2059:
  3352  0AD1  1FD7               	btfss	___flge@ff2+3,7
  3353  0AD2  2AD4               	goto	u2071
  3354  0AD3  2AD5               	goto	u2070
  3355  0AD4                     u2071:
  3356  0AD4  2AF9               	goto	l582
  3357  0AD5                     u2070:
  3358  0AD5                     l2061:
  3359  0AD5  3000               	movlw	0
  3360  0AD6  00D8               	movwf	??___flge
  3361  0AD7  3000               	movlw	0
  3362  0AD8  00D9               	movwf	??___flge+1
  3363  0AD9  3000               	movlw	0
  3364  0ADA  00DA               	movwf	??___flge+2
  3365  0ADB  3080               	movlw	128
  3366  0ADC  00DB               	movwf	??___flge+3
  3367  0ADD  0854               	movf	___flge@ff2,w
  3368  0ADE  02D8               	subwf	??___flge,f
  3369  0ADF  0855               	movf	___flge@ff2+1,w
  3370  0AE0  1C03               	skipc
  3371  0AE1  0F55               	incfsz	___flge@ff2+1,w
  3372  0AE2  2AE4               	goto	u2081
  3373  0AE3  2AE5               	goto	u2082
  3374  0AE4                     u2081:
  3375  0AE4  02D9               	subwf	??___flge+1,f
  3376  0AE5                     u2082:
  3377  0AE5  0856               	movf	___flge@ff2+2,w
  3378  0AE6  1C03               	skipc
  3379  0AE7  0F56               	incfsz	___flge@ff2+2,w
  3380  0AE8  2AEA               	goto	u2083
  3381  0AE9  2AEB               	goto	u2084
  3382  0AEA                     u2083:
  3383  0AEA  02DA               	subwf	??___flge+2,f
  3384  0AEB                     u2084:
  3385  0AEB  0857               	movf	___flge@ff2+3,w
  3386  0AEC  1C03               	skipc
  3387  0AED  0F57               	incfsz	___flge@ff2+3,w
  3388  0AEE  2AF0               	goto	u2085
  3389  0AEF  2AF1               	goto	u2086
  3390  0AF0                     u2085:
  3391  0AF0  02DB               	subwf	??___flge+3,f
  3392  0AF1                     u2086:
  3393  0AF1  085B               	movf	??___flge+3,w
  3394  0AF2  00D7               	movwf	___flge@ff2+3
  3395  0AF3  085A               	movf	??___flge+2,w
  3396  0AF4  00D6               	movwf	___flge@ff2+2
  3397  0AF5  0859               	movf	??___flge+1,w
  3398  0AF6  00D5               	movwf	___flge@ff2+1
  3399  0AF7  0858               	movf	??___flge,w
  3400  0AF8  00D4               	movwf	___flge@ff2
  3401  0AF9                     l582:
  3402  0AF9  3080               	movlw	128
  3403  0AFA  06D3               	xorwf	___flge@ff1+3,f
  3404  0AFB  3080               	movlw	128
  3405  0AFC  06D7               	xorwf	___flge@ff2+3,f
  3406  0AFD  0857               	movf	___flge@ff2+3,w
  3407  0AFE  0253               	subwf	___flge@ff1+3,w
  3408  0AFF  1D03               	skipz
  3409  0B00  2B0B               	goto	u2095
  3410  0B01  0856               	movf	___flge@ff2+2,w
  3411  0B02  0252               	subwf	___flge@ff1+2,w
  3412  0B03  1D03               	skipz
  3413  0B04  2B0B               	goto	u2095
  3414  0B05  0855               	movf	___flge@ff2+1,w
  3415  0B06  0251               	subwf	___flge@ff1+1,w
  3416  0B07  1D03               	skipz
  3417  0B08  2B0B               	goto	u2095
  3418  0B09  0854               	movf	___flge@ff2,w
  3419  0B0A  0250               	subwf	___flge@ff1,w
  3420  0B0B                     u2095:
  3421  0B0B  1803               	skipnc
  3422  0B0C  2B0E               	goto	u2091
  3423  0B0D  2B0F               	goto	u2090
  3424  0B0E                     u2091:
  3425  0B0E  2B11               	goto	l2065
  3426  0B0F                     u2090:
  3427  0B0F                     l2063:
  3428  0B0F  1003               	clrc
  3429  0B10  2B12               	goto	l583
  3430  0B11                     l2065:
  3431  0B11  1403               	setc
  3432  0B12                     l583:
  3433  0B12  0008               	return
  3434  0B13                     __end_of___flge:
  3435                           
  3436                           	psect	text12
  3437  14E3                     __ptext12:	
  3438 ;; *************** function _configura *****************
  3439 ;; Defined at:
  3440 ;;		line 366 in file "Serial_Tank.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3454 ;;      Params:         0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0
  3457 ;;      Totals:         0       0       0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 5
  3461 ;; This function calls:
  3462 ;;		_criasetpoint
  3463 ;; This function is called by:
  3464 ;;		_telaUm
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468  14E3                     _configura:	
  3469                           ;psect for function _configura
  3470                           
  3471  14E3                     l3423:	
  3472                           ;incstack = 0
  3473                           ; Regs used in _configura: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3474                           
  3475                           
  3476                           ;Serial_Tank.c: 367:     TRISB = 0x0F;
  3477  14E3  300F               	movlw	15
  3478  14E4  1683               	bsf	3,5	;RP0=1, select bank1
  3479  14E5  1303               	bcf	3,6	;RP1=0, select bank1
  3480  14E6  0086               	movwf	6	;volatile
  3481  14E7                     l3425:
  3482                           
  3483                           ;Serial_Tank.c: 368:     criasetpoint(1);
  3484  14E7  3001               	movlw	1
  3485  14E8  00A5               	movwf	criasetpoint@opcao^(0+128)
  3486  14E9  3000               	movlw	0
  3487  14EA  00A6               	movwf	(criasetpoint@opcao^(0+128)+1)
  3488  14EB  120A  118A  202C  160A  118A  	fcall	_criasetpoint
  3489  14F0                     l177:
  3490  14F0  0008               	return
  3491  14F1                     __end_of_configura:
  3492                           
  3493                           	psect	text13
  3494  002C                     __ptext13:	
  3495 ;; *************** function _criasetpoint *****************
  3496 ;; Defined at:
  3497 ;;		line 241 in file "Serial_Tank.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  opcao           2    5[BANK1 ] int 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  auxVolm2        2   14[BANK1 ] unsigned int 
  3502 ;;  auxVolm         2   22[BANK1 ] unsigned int 
  3503 ;;  attTexto        2   20[BANK1 ] int 
  3504 ;;  auxTemp         2   18[BANK1 ] unsigned int 
  3505 ;;  progressao      2   16[BANK1 ] int 
  3506 ;;  auxAgit         2   12[BANK1 ] unsigned int 
  3507 ;;  wait            2   10[BANK1 ] int 
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      void 
  3510 ;; Registers used:
  3511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3517 ;;      Params:         0       0       2       0       0
  3518 ;;      Locals:         0       0      14       0       0
  3519 ;;      Temps:          0       0       3       0       0
  3520 ;;      Totals:         0       0      19       0       0
  3521 ;;Total ram usage:       19 bytes
  3522 ;; Hardware stack levels used: 1
  3523 ;; Hardware stack levels required when called: 4
  3524 ;; This function calls:
  3525 ;;		___fldiv
  3526 ;;		___flmul
  3527 ;;		___fltol
  3528 ;;		___xxtofl
  3529 ;;		_eeprom_write
  3530 ;;		_itoa
  3531 ;;		_lcd_cmd
  3532 ;;		_lcd_str
  3533 ;; This function is called by:
  3534 ;;		_manual
  3535 ;;		_configura
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539  002C                     _criasetpoint:	
  3540                           ;psect for function _criasetpoint
  3541                           
  3542  002C                     l3241:	
  3543                           ;incstack = 0
  3544                           ; Regs used in _criasetpoint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3545                           
  3546                           
  3547                           ;Serial_Tank.c: 243:     unsigned int auxVolm = 0x00;
  3548  002C  1683               	bsf	3,5	;RP0=1, select bank1
  3549  002D  1303               	bcf	3,6	;RP1=0, select bank1
  3550  002E  01B6               	clrf	criasetpoint@auxVolm^(0+128)
  3551  002F  01B7               	clrf	(criasetpoint@auxVolm+1)^(0+128)
  3552  0030                     l3243:
  3553                           
  3554                           ;Serial_Tank.c: 244:     unsigned int auxTemp = 0x05;
  3555  0030  3005               	movlw	5
  3556  0031  00B2               	movwf	criasetpoint@auxTemp^(0+128)
  3557  0032  3000               	movlw	0
  3558  0033  00B3               	movwf	(criasetpoint@auxTemp^(0+128)+1)
  3559  0034                     l3245:
  3560                           
  3561                           ;Serial_Tank.c: 245:     unsigned int auxAgit = 0x00;
  3562  0034  01AC               	clrf	criasetpoint@auxAgit^(0+128)
  3563  0035  01AD               	clrf	(criasetpoint@auxAgit+1)^(0+128)
  3564                           
  3565                           ;Serial_Tank.c: 247:     int attTexto = 1;
  3566  0036  3001               	movlw	1
  3567  0037  00B4               	movwf	criasetpoint@attTexto^(0+128)
  3568  0038  3000               	movlw	0
  3569  0039  00B5               	movwf	(criasetpoint@attTexto^(0+128)+1)
  3570                           
  3571                           ;Serial_Tank.c: 248:     int progressao = 1;
  3572  003A  3001               	movlw	1
  3573  003B  00B0               	movwf	criasetpoint@progressao^(0+128)
  3574  003C  3000               	movlw	0
  3575  003D  00B1               	movwf	(criasetpoint@progressao^(0+128)+1)
  3576                           
  3577                           ;Serial_Tank.c: 249:     int wait = 1;
  3578  003E  3001               	movlw	1
  3579  003F  00AA               	movwf	criasetpoint@wait^(0+128)
  3580  0040  3000               	movlw	0
  3581  0041  00AB               	movwf	(criasetpoint@wait^(0+128)+1)
  3582                           
  3583                           ;Serial_Tank.c: 251:     while (wait) {
  3584  0042  2BF8               	goto	l3391
  3585  0043                     l3247:
  3586                           
  3587                           ;Serial_Tank.c: 252:         if (attTexto == 1) {
  3588  0043  0334               	decf	criasetpoint@attTexto^(0+128),w
  3589  0044  0435               	iorwf	(criasetpoint@attTexto+1)^(0+128),w
  3590  0045  1D03               	btfss	3,2
  3591  0046  2848               	goto	u4261
  3592  0047  2849               	goto	u4260
  3593  0048                     u4261:
  3594  0048  289D               	goto	l3265
  3595  0049                     u4260:
  3596  0049                     l3249:
  3597                           
  3598                           ;Serial_Tank.c: 253:             lcd_cmd(0x01);
  3599  0049  3001               	movlw	1
  3600  004A  160A  118A  252F  120A  118A  	fcall	_lcd_cmd
  3601                           
  3602                           ;Serial_Tank.c: 254:             lcd_cmd(0x80);
  3603  004F  3080               	movlw	128
  3604  0050  160A  118A  252F  120A  118A  	fcall	_lcd_cmd
  3605  0055                     l3251:
  3606                           
  3607                           ;Serial_Tank.c: 255:             lcd_str("Niv ");
  3608  0055  305E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3609  0056  00F6               	movwf	lcd_str@str
  3610  0057  3080               	movlw	128
  3611  0058  00F7               	movwf	lcd_str@str+1
  3612  0059  160A  118A  25A4  120A  118A  	fcall	_lcd_str
  3613  005E                     l3253:
  3614                           
  3615                           ;Serial_Tank.c: 256:             itoa(auxVolm, buff);
  3616  005E  1683               	bsf	3,5	;RP0=1, select bank1
  3617  005F  1303               	bcf	3,6	;RP1=0, select bank1
  3618  0060  0837               	movf	(criasetpoint@auxVolm+1)^(0+128),w
  3619  0061  1283               	bcf	3,5	;RP0=0, select bank0
  3620  0062  1303               	bcf	3,6	;RP1=0, select bank0
  3621  0063  00A8               	movwf	itoa@val+1
  3622  0064  1683               	bsf	3,5	;RP0=1, select bank1
  3623  0065  1303               	bcf	3,6	;RP1=0, select bank1
  3624  0066  0836               	movf	criasetpoint@auxVolm^(0+128),w
  3625  0067  1283               	bcf	3,5	;RP0=0, select bank0
  3626  0068  1303               	bcf	3,6	;RP1=0, select bank0
  3627  0069  00A7               	movwf	itoa@val
  3628  006A  30CC               	movlw	(low (_buff| 0))& (0+255)
  3629  006B  1683               	bsf	3,5	;RP0=1, select bank1
  3630  006C  1303               	bcf	3,6	;RP1=0, select bank1
  3631  006D  00A7               	movwf	??_criasetpoint^(0+128)
  3632  006E  0827               	movf	??_criasetpoint^(0+128),w
  3633  006F  1283               	bcf	3,5	;RP0=0, select bank0
  3634  0070  1303               	bcf	3,6	;RP1=0, select bank0
  3635  0071  00A9               	movwf	itoa@str
  3636  0072  160A  118A  26A8  120A  118A  	fcall	_itoa
  3637  0077                     l3255:
  3638                           
  3639                           ;Serial_Tank.c: 257:             lcd_str(buff);
  3640  0077  30CC               	movlw	(low (_buff| 0))& (0+255)
  3641  0078  00F6               	movwf	lcd_str@str
  3642  0079  3000               	movlw	0
  3643  007A  00F7               	movwf	lcd_str@str+1
  3644  007B  160A  118A  25A4  120A  118A  	fcall	_lcd_str
  3645  0080                     l3257:
  3646                           
  3647                           ;Serial_Tank.c: 258:             lcd_str("%");
  3648  0080  306B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3649  0081  00F6               	movwf	lcd_str@str
  3650  0082  3080               	movlw	128
  3651  0083  00F7               	movwf	lcd_str@str+1
  3652  0084  160A  118A  25A4  120A  118A  	fcall	_lcd_str
  3653  0089                     l3259:
  3654                           
  3655                           ;Serial_Tank.c: 259:             lcd_cmd(0xC0);
  3656  0089  30C0               	movlw	192
  3657  008A  160A  118A  252F  120A  118A  	fcall	_lcd_cmd
  3658  008F                     l3261:
  3659                           
  3660                           ;Serial_Tank.c: 260:             lcd_str("R0+,R1-,R2>,R3x");
  3661  008F  3033               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3662  0090  00F6               	movwf	lcd_str@str
  3663  0091  3080               	movlw	128
  3664  0092  00F7               	movwf	lcd_str@str+1
  3665  0093  160A  118A  25A4  120A  118A  	fcall	_lcd_str
  3666  0098                     l3263:
  3667                           
  3668                           ;Serial_Tank.c: 261:             attTexto = 0;
  3669  0098  1683               	bsf	3,5	;RP0=1, select bank1
  3670  0099  1303               	bcf	3,6	;RP1=0, select bank1
  3671  009A  01B4               	clrf	criasetpoint@attTexto^(0+128)
  3672  009B  01B5               	clrf	(criasetpoint@attTexto+1)^(0+128)
  3673                           
  3674                           ;Serial_Tank.c: 262:         } else if (attTexto == 2) {
  3675  009C  293B               	goto	l3301
  3676  009D                     l3265:
  3677  009D  3002               	movlw	2
  3678  009E  0634               	xorwf	criasetpoint@attTexto^(0+128),w
  3679  009F  0435               	iorwf	(criasetpoint@attTexto+1)^(0+128),w
  3680  00A0  1D03               	btfss	3,2
  3681  00A1  28A3               	goto	u4271
  3682  00A2  28A4               	goto	u4270
  3683  00A3                     u4271:
  3684  00A3  28F4               	goto	l3283
  3685  00A4                     u4270:
  3686  00A4                     l3267:
  3687                           
  3688                           ;Serial_Tank.c: 263:             lcd_cmd(0x01);
  3689  00A4  3001               	movlw	1
  3690  00A5  160A  118A  252F  120A  118A  	fcall	_lcd_cmd
  3691                           
  3692                           ;Serial_Tank.c: 264:             lcd_cmd(0x80);
  3693  00AA  3080               	movlw	128
  3694  00AB  160A  118A  252F  120A  118A  	fcall	_lcd_cmd
  3695  00B0                     l3269:
  3696                           
  3697                           ;Serial_Tank.c: 265:             lcd_str("Temp ");
  3698  00B0  3058               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  3699  00B1  00F6               	movwf	lcd_str@str
  3700  00B2  3080               	movlw	128
  3701  00B3  00F7               	movwf	lcd_str@str+1
  3702  00B4  160A  118A  25A4  120A  118A  	fcall	_lcd_str
  3703  00B9                     l3271:
  3704                           
  3705                           ;Serial_Tank.c: 266:             itoa(auxTemp, buff);
  3706  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  3707  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  3708  00BB  0833               	movf	(criasetpoint@auxTemp+1)^(0+128),w
  3709  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  3710  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  3711  00BE  00A8               	movwf	itoa@val+1
  3712  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  3713  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  3714  00C1  0832               	movf	criasetpoint@auxTemp^(0+128),w
  3715  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  3716  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  3717  00C4  00A7               	movwf	itoa@val
  3718  00C5  30CC               	movlw	(low (_buff| 0))& (0+255)
  3719  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  3720  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  3721  00C8  00A7               	movwf	??_criasetpoint^(0+128)
  3722  00C9  0827               	movf	??_criasetpoint^(0+128),w
  3723  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  3724  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  3725  00CC  00A9               	movwf	itoa@str
  3726  00CD  160A  118A  26A8  120A  118A  	fcall	_itoa
  3727  00D2                     l3273:
  3728                           
  3729                           ;Serial_Tank.c: 267:             lcd_str(buff);
  3730  00D2  30CC               	movlw	(low (_buff| 0))& (0+255)
  3731  00D3  00F6               	movwf	lcd_str@str
  3732  00D4  3000               	movlw	0
  3733  00D5  00F7               	movwf	lcd_str@str+1
  3734  00D6  160A  118A  25A4  120A  118A  	fcall	_lcd_str
  3735  00DB                     l3275:
  3736                           
  3737                           ;Serial_Tank.c: 268:             lcd_str("C");
  3738  00DB  306D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3739  00DC  00F6               	movwf	lcd_str@str
  3740  00DD  3080               	movlw	128
  3741  00DE  00F7               	movwf	lcd_str@str+1
  3742  00DF  160A  118A  25A4  120A  118A  	fcall	_lcd_str
  3743  00E4                     l3277:
  3744                           
  3745                           ;Serial_Tank.c: 269:             lcd_cmd(0xC0);
  3746  00E4  30C0               	movlw	192
  3747  00E5  160A  118A  252F  120A  118A  	fcall	_lcd_cmd
  3748  00EA                     l3279:
  3749                           
  3750                           ;Serial_Tank.c: 270:             lcd_str("R0+,R1-,R2>,R3x");
  3751  00EA  3033               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3752  00EB  00F6               	movwf	lcd_str@str
  3753  00EC  3080               	movlw	128
  3754  00ED  00F7               	movwf	lcd_str@str+1
  3755  00EE  160A  118A  25A4  120A  118A  	fcall	_lcd_str
  3756  00F3  2898               	goto	l3263
  3757  00F4                     l3283:
  3758  00F4  3003               	movlw	3
  3759  00F5  0634               	xorwf	criasetpoint@attTexto^(0+128),w
  3760  00F6  0435               	iorwf	(criasetpoint@attTexto+1)^(0+128),w
  3761  00F7  1D03               	btfss	3,2
  3762  00F8  28FA               	goto	u4281
  3763  00F9  28FB               	goto	u4280
  3764  00FA                     u4281:
  3765  00FA  293B               	goto	l3301
  3766  00FB                     u4280:
  3767  00FB                     l3285:
  3768                           
  3769                           ;Serial_Tank.c: 273:             lcd_cmd(0x01);
  3770  00FB  3001               	movlw	1
  3771  00FC  160A  118A  252F  120A  118A  	fcall	_lcd_cmd
  3772                           
  3773                           ;Serial_Tank.c: 274:             lcd_cmd(0x80);
  3774  0101  3080               	movlw	128
  3775  0102  160A  118A  252F  120A  118A  	fcall	_lcd_cmd
  3776  0107                     l3287:
  3777                           
  3778                           ;Serial_Tank.c: 275:             lcd_str("Agitador: ");
  3779  0107  3043               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  3780  0108  00F6               	movwf	lcd_str@str
  3781  0109  3080               	movlw	128
  3782  010A  00F7               	movwf	lcd_str@str+1
  3783  010B  160A  118A  25A4  120A  118A  	fcall	_lcd_str
  3784  0110                     l3289:
  3785                           
  3786                           ;Serial_Tank.c: 276:             auxAgit == 1 ? lcd_str("ON ") : lcd_str("OFF");
  3787  0110  1683               	bsf	3,5	;RP0=1, select bank1
  3788  0111  1303               	bcf	3,6	;RP1=0, select bank1
  3789  0112  032C               	decf	criasetpoint@auxAgit^(0+128),w
  3790  0113  042D               	iorwf	(criasetpoint@auxAgit+1)^(0+128),w
  3791  0114  1D03               	btfss	3,2
  3792  0115  2917               	goto	u4291
  3793  0116  2918               	goto	u4290
  3794  0117                     u4291:
  3795  0117  2922               	goto	l3293
  3796  0118                     u4290:
  3797  0118                     l3291:
  3798  0118  3063               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  3799  0119  00F6               	movwf	lcd_str@str
  3800  011A  3080               	movlw	128
  3801  011B  00F7               	movwf	lcd_str@str+1
  3802  011C  160A  118A  25A4  120A  118A  	fcall	_lcd_str
  3803  0121  292B               	goto	l3295
  3804  0122                     l3293:
  3805  0122  3067               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3806  0123  00F6               	movwf	lcd_str@str
  3807  0124  3080               	movlw	128
  3808  0125  00F7               	movwf	lcd_str@str+1
  3809  0126  160A  118A  25A4  120A  118A  	fcall	_lcd_str
  3810  012B                     l3295:
  3811                           
  3812                           ;Serial_Tank.c: 277:             lcd_cmd(0xC0);
  3813  012B  30C0               	movlw	192
  3814  012C  160A  118A  252F  120A  118A  	fcall	_lcd_cmd
  3815  0131                     l3297:
  3816                           
  3817                           ;Serial_Tank.c: 278:             lcd_str("R0+,R1-,R2>,R3x");
  3818  0131  3033               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3819  0132  00F6               	movwf	lcd_str@str
  3820  0133  3080               	movlw	128
  3821  0134  00F7               	movwf	lcd_str@str+1
  3822  0135  160A  118A  25A4  120A  118A  	fcall	_lcd_str
  3823  013A  2898               	goto	l3263
  3824  013B                     l3301:
  3825                           
  3826                           ;Serial_Tank.c: 281:         if (progressao == 1) {
  3827  013B  0330               	decf	criasetpoint@progressao^(0+128),w
  3828  013C  0431               	iorwf	(criasetpoint@progressao+1)^(0+128),w
  3829  013D  1D03               	btfss	3,2
  3830  013E  2940               	goto	u4301
  3831  013F  2941               	goto	u4300
  3832  0140                     u4301:
  3833  0140  29B1               	goto	l3321
  3834  0141                     u4300:
  3835  0141                     l3303:
  3836                           
  3837                           ;Serial_Tank.c: 282:             if (!PORTBbits.RB0) {
  3838  0141  1283               	bcf	3,5	;RP0=0, select bank0
  3839  0142  1303               	bcf	3,6	;RP1=0, select bank0
  3840  0143  1806               	btfsc	6,0	;volatile
  3841  0144  2946               	goto	u4311
  3842  0145  2947               	goto	u4310
  3843  0146                     u4311:
  3844  0146  2967               	goto	l135
  3845  0147                     u4310:
  3846  0147                     l3305:
  3847                           
  3848                           ;Serial_Tank.c: 283:                 _delay((unsigned long)((15)*(4000000/4000.0)));
  3849  0147  3014               	movlw	20
  3850  0148  1683               	bsf	3,5	;RP0=1, select bank1
  3851  0149  1303               	bcf	3,6	;RP1=0, select bank1
  3852  014A  00A8               	movwf	(??_criasetpoint^(0+128)+1)
  3853  014B  3079               	movlw	121
  3854  014C  00A7               	movwf	??_criasetpoint^(0+128)
  3855  014D                     u4657:
  3856  014D  0BA7               	decfsz	??_criasetpoint^(0+128),f
  3857  014E  294D               	goto	u4657
  3858  014F  0BA8               	decfsz	(??_criasetpoint^(0+128)+1),f
  3859  0150  294D               	goto	u4657
  3860                           
  3861                           ;Serial_Tank.c: 284:                 attTexto = 1;
  3862  0151  3001               	movlw	1
  3863  0152  1683               	bsf	3,5	;RP0=1, select bank1
  3864  0153  1303               	bcf	3,6	;RP1=0, select bank1
  3865  0154  00B4               	movwf	criasetpoint@attTexto^(0+128)
  3866  0155  3000               	movlw	0
  3867  0156  00B5               	movwf	(criasetpoint@attTexto^(0+128)+1)
  3868                           
  3869                           ;Serial_Tank.c: 285:                 if (auxVolm < 0x5F)
  3870  0157  3000               	movlw	0
  3871  0158  0237               	subwf	(criasetpoint@auxVolm+1)^(0+128),w
  3872  0159  305F               	movlw	95
  3873  015A  1903               	skipnz
  3874  015B  0236               	subwf	criasetpoint@auxVolm^(0+128),w
  3875  015C  1803               	skipnc
  3876  015D  295F               	goto	u4321
  3877  015E  2960               	goto	u4320
  3878  015F                     u4321:
  3879  015F  2BF8               	goto	l3391
  3880  0160                     u4320:
  3881  0160                     l3307:
  3882                           
  3883                           ;Serial_Tank.c: 286:                     auxVolm++;
  3884  0160  3001               	movlw	1
  3885  0161  07B6               	addwf	criasetpoint@auxVolm^(0+128),f
  3886  0162  1803               	skipnc
  3887  0163  0AB7               	incf	(criasetpoint@auxVolm+1)^(0+128),f
  3888  0164  3000               	movlw	0
  3889  0165  07B7               	addwf	(criasetpoint@auxVolm+1)^(0+128),f
  3890  0166  2BF8               	goto	l3391
  3891  0167                     l135:
  3892  0167  1886               	btfsc	6,1	;volatile
  3893  0168  296A               	goto	u4331
  3894  0169  296B               	goto	u4330
  3895  016A                     u4331:
  3896  016A  298C               	goto	l138
  3897  016B                     u4330:
  3898  016B                     l3309:
  3899                           
  3900                           ;Serial_Tank.c: 288:                 _delay((unsigned long)((15)*(4000000/4000.0)));
  3901  016B  3014               	movlw	20
  3902  016C  1683               	bsf	3,5	;RP0=1, select bank1
  3903  016D  1303               	bcf	3,6	;RP1=0, select bank1
  3904  016E  00A8               	movwf	(??_criasetpoint^(0+128)+1)
  3905  016F  3079               	movlw	121
  3906  0170  00A7               	movwf	??_criasetpoint^(0+128)
  3907  0171                     u4667:
  3908  0171  0BA7               	decfsz	??_criasetpoint^(0+128),f
  3909  0172  2971               	goto	u4667
  3910  0173  0BA8               	decfsz	(??_criasetpoint^(0+128)+1),f
  3911  0174  2971               	goto	u4667
  3912                           
  3913                           ;Serial_Tank.c: 289:                 attTexto = 1;
  3914  0175  3001               	movlw	1
  3915  0176  1683               	bsf	3,5	;RP0=1, select bank1
  3916  0177  1303               	bcf	3,6	;RP1=0, select bank1
  3917  0178  00B4               	movwf	criasetpoint@attTexto^(0+128)
  3918  0179  3000               	movlw	0
  3919  017A  00B5               	movwf	(criasetpoint@attTexto^(0+128)+1)
  3920  017B                     l3311:
  3921                           
  3922                           ;Serial_Tank.c: 290:                 if (auxVolm == 0)
  3923  017B  0836               	movf	criasetpoint@auxVolm^(0+128),w
  3924  017C  0437               	iorwf	(criasetpoint@auxVolm+1)^(0+128),w
  3925  017D  1D03               	btfss	3,2
  3926  017E  2980               	goto	u4341
  3927  017F  2981               	goto	u4340
  3928  0180                     u4341:
  3929  0180  2984               	goto	l3315
  3930  0181                     u4340:
  3931  0181                     l3313:
  3932                           
  3933                           ;Serial_Tank.c: 291:                     auxVolm = 0;
  3934  0181  01B6               	clrf	criasetpoint@auxVolm^(0+128)
  3935  0182  01B7               	clrf	(criasetpoint@auxVolm+1)^(0+128)
  3936  0183  2BF8               	goto	l3391
  3937  0184                     l3315:
  3938  0184  3001               	movlw	1
  3939  0185  02B6               	subwf	criasetpoint@auxVolm^(0+128),f
  3940  0186  3000               	movlw	0
  3941  0187  1C03               	skipc
  3942  0188  03B7               	decf	(criasetpoint@auxVolm+1)^(0+128),f
  3943  0189  02B7               	subwf	(criasetpoint@auxVolm+1)^(0+128),f
  3944  018A  2BF8               	goto	l3391
  3945  018B                     l140:
  3946                           
  3947                           ;Serial_Tank.c: 293:             } else if (!PORTBbits.RB2) {
  3948  018B  2BF8               	goto	l3391
  3949  018C                     l138:
  3950  018C  1906               	btfsc	6,2	;volatile
  3951  018D  298F               	goto	u4351
  3952  018E  2990               	goto	u4350
  3953  018F                     u4351:
  3954  018F  29AC               	goto	l142
  3955  0190                     u4350:
  3956  0190                     l3317:
  3957                           
  3958                           ;Serial_Tank.c: 294:                 _delay((unsigned long)((200)*(4000000/4000.0)));
  3959  0190  3002               	movlw	2
  3960  0191  1683               	bsf	3,5	;RP0=1, select bank1
  3961  0192  1303               	bcf	3,6	;RP1=0, select bank1
  3962  0193  00A9               	movwf	(??_criasetpoint^(0+128)+2)
  3963  0194  3004               	movlw	4
  3964  0195  00A8               	movwf	(??_criasetpoint^(0+128)+1)
  3965  0196  30B9               	movlw	185
  3966  0197  00A7               	movwf	??_criasetpoint^(0+128)
  3967  0198                     u4677:
  3968  0198  0BA7               	decfsz	??_criasetpoint^(0+128),f
  3969  0199  2998               	goto	u4677
  3970  019A  0BA8               	decfsz	(??_criasetpoint^(0+128)+1),f
  3971  019B  2998               	goto	u4677
  3972  019C  0BA9               	decfsz	(??_criasetpoint^(0+128)+2),f
  3973  019D  2998               	goto	u4677
  3974  019E  299F               	nop2
  3975                           
  3976                           ;Serial_Tank.c: 295:                 progressao++;
  3977  019F  3001               	movlw	1
  3978  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  3979  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  3980  01A2  07B0               	addwf	criasetpoint@progressao^(0+128),f
  3981  01A3  1803               	skipnc
  3982  01A4  0AB1               	incf	(criasetpoint@progressao+1)^(0+128),f
  3983  01A5  3000               	movlw	0
  3984  01A6  07B1               	addwf	(criasetpoint@progressao+1)^(0+128),f
  3985                           
  3986                           ;Serial_Tank.c: 296:                 attTexto = 2;
  3987  01A7  3002               	movlw	2
  3988  01A8  00B4               	movwf	criasetpoint@attTexto^(0+128)
  3989  01A9  3000               	movlw	0
  3990  01AA  00B5               	movwf	(criasetpoint@attTexto^(0+128)+1)
  3991                           
  3992                           ;Serial_Tank.c: 297:             } else if (!RB3)
  3993  01AB  2BF8               	goto	l3391
  3994  01AC                     l142:
  3995  01AC  1986               	btfsc	6,3	;volatile
  3996  01AD  29AF               	goto	u4361
  3997  01AE  29B0               	goto	u4360
  3998  01AF                     u4361:
  3999  01AF  298B               	goto	l140
  4000  01B0                     u4360:
  4001  01B0  2C00               	goto	l145
  4002  01B1                     l3321:
  4003  01B1  3002               	movlw	2
  4004  01B2  0630               	xorwf	criasetpoint@progressao^(0+128),w
  4005  01B3  0431               	iorwf	(criasetpoint@progressao+1)^(0+128),w
  4006  01B4  1D03               	btfss	3,2
  4007  01B5  29B7               	goto	u4371
  4008  01B6  29B8               	goto	u4370
  4009  01B7                     u4371:
  4010  01B7  2A27               	goto	l3337
  4011  01B8                     u4370:
  4012  01B8                     l3323:
  4013                           
  4014                           ;Serial_Tank.c: 300:             if (!PORTBbits.RB0) {
  4015  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  4016  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  4017  01BA  1806               	btfsc	6,0	;volatile
  4018  01BB  29BD               	goto	u4381
  4019  01BC  29BE               	goto	u4380
  4020  01BD                     u4381:
  4021  01BD  29DE               	goto	l148
  4022  01BE                     u4380:
  4023  01BE                     l3325:
  4024                           
  4025                           ;Serial_Tank.c: 301:                 _delay((unsigned long)((15)*(4000000/4000.0)));
  4026  01BE  3014               	movlw	20
  4027  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  4028  01C0  1303               	bcf	3,6	;RP1=0, select bank1
  4029  01C1  00A8               	movwf	(??_criasetpoint^(0+128)+1)
  4030  01C2  3079               	movlw	121
  4031  01C3  00A7               	movwf	??_criasetpoint^(0+128)
  4032  01C4                     u4687:
  4033  01C4  0BA7               	decfsz	??_criasetpoint^(0+128),f
  4034  01C5  29C4               	goto	u4687
  4035  01C6  0BA8               	decfsz	(??_criasetpoint^(0+128)+1),f
  4036  01C7  29C4               	goto	u4687
  4037                           
  4038                           ;Serial_Tank.c: 302:                 attTexto = 2;
  4039  01C8  3002               	movlw	2
  4040  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  4041  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  4042  01CB  00B4               	movwf	criasetpoint@attTexto^(0+128)
  4043  01CC  3000               	movlw	0
  4044  01CD  00B5               	movwf	(criasetpoint@attTexto^(0+128)+1)
  4045                           
  4046                           ;Serial_Tank.c: 303:                 if (auxTemp < 0x3C) {
  4047  01CE  3000               	movlw	0
  4048  01CF  0233               	subwf	(criasetpoint@auxTemp+1)^(0+128),w
  4049  01D0  303C               	movlw	60
  4050  01D1  1903               	skipnz
  4051  01D2  0232               	subwf	criasetpoint@auxTemp^(0+128),w
  4052  01D3  1803               	skipnc
  4053  01D4  29D6               	goto	u4391
  4054  01D5  29D7               	goto	u4390
  4055  01D6                     u4391:
  4056  01D6  2BF8               	goto	l3391
  4057  01D7                     u4390:
  4058  01D7                     l3327:
  4059                           
  4060                           ;Serial_Tank.c: 304:                     auxTemp++;
  4061  01D7  3001               	movlw	1
  4062  01D8  07B2               	addwf	criasetpoint@auxTemp^(0+128),f
  4063  01D9  1803               	skipnc
  4064  01DA  0AB3               	incf	(criasetpoint@auxTemp+1)^(0+128),f
  4065  01DB  3000               	movlw	0
  4066  01DC  07B3               	addwf	(criasetpoint@auxTemp+1)^(0+128),f
  4067  01DD  2BF8               	goto	l3391
  4068  01DE                     l148:
  4069  01DE  1886               	btfsc	6,1	;volatile
  4070  01DF  29E1               	goto	u4401
  4071  01E0  29E2               	goto	u4400
  4072  01E1                     u4401:
  4073  01E1  2A02               	goto	l151
  4074  01E2                     u4400:
  4075  01E2                     l3329:
  4076                           
  4077                           ;Serial_Tank.c: 307:                 _delay((unsigned long)((15)*(4000000/4000.0)));
  4078  01E2  3014               	movlw	20
  4079  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  4080  01E4  1303               	bcf	3,6	;RP1=0, select bank1
  4081  01E5  00A8               	movwf	(??_criasetpoint^(0+128)+1)
  4082  01E6  3079               	movlw	121
  4083  01E7  00A7               	movwf	??_criasetpoint^(0+128)
  4084  01E8                     u4697:
  4085  01E8  0BA7               	decfsz	??_criasetpoint^(0+128),f
  4086  01E9  29E8               	goto	u4697
  4087  01EA  0BA8               	decfsz	(??_criasetpoint^(0+128)+1),f
  4088  01EB  29E8               	goto	u4697
  4089                           
  4090                           ;Serial_Tank.c: 308:                 attTexto = 2;
  4091  01EC  3002               	movlw	2
  4092  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  4093  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  4094  01EF  00B4               	movwf	criasetpoint@attTexto^(0+128)
  4095  01F0  3000               	movlw	0
  4096  01F1  00B5               	movwf	(criasetpoint@attTexto^(0+128)+1)
  4097                           
  4098                           ;Serial_Tank.c: 309:                 if (auxTemp > 0x05) {
  4099  01F2  3000               	movlw	0
  4100  01F3  0233               	subwf	(criasetpoint@auxTemp+1)^(0+128),w
  4101  01F4  3006               	movlw	6
  4102  01F5  1903               	skipnz
  4103  01F6  0232               	subwf	criasetpoint@auxTemp^(0+128),w
  4104  01F7  1C03               	skipc
  4105  01F8  29FA               	goto	u4411
  4106  01F9  29FB               	goto	u4410
  4107  01FA                     u4411:
  4108  01FA  2BF8               	goto	l3391
  4109  01FB                     u4410:
  4110  01FB                     l3331:
  4111                           
  4112                           ;Serial_Tank.c: 310:                     auxTemp--;
  4113  01FB  3001               	movlw	1
  4114  01FC  02B2               	subwf	criasetpoint@auxTemp^(0+128),f
  4115  01FD  3000               	movlw	0
  4116  01FE  1C03               	skipc
  4117  01FF  03B3               	decf	(criasetpoint@auxTemp+1)^(0+128),f
  4118  0200  02B3               	subwf	(criasetpoint@auxTemp+1)^(0+128),f
  4119  0201  2BF8               	goto	l3391
  4120  0202                     l151:
  4121  0202  1906               	btfsc	6,2	;volatile
  4122  0203  2A05               	goto	u4421
  4123  0204  2A06               	goto	u4420
  4124  0205                     u4421:
  4125  0205  2A22               	goto	l154
  4126  0206                     u4420:
  4127  0206                     l3333:
  4128                           
  4129                           ;Serial_Tank.c: 313:                 _delay((unsigned long)((200)*(4000000/4000.0)));
  4130  0206  3002               	movlw	2
  4131  0207  1683               	bsf	3,5	;RP0=1, select bank1
  4132  0208  1303               	bcf	3,6	;RP1=0, select bank1
  4133  0209  00A9               	movwf	(??_criasetpoint^(0+128)+2)
  4134  020A  3004               	movlw	4
  4135  020B  00A8               	movwf	(??_criasetpoint^(0+128)+1)
  4136  020C  30B9               	movlw	185
  4137  020D  00A7               	movwf	??_criasetpoint^(0+128)
  4138  020E                     u4707:
  4139  020E  0BA7               	decfsz	??_criasetpoint^(0+128),f
  4140  020F  2A0E               	goto	u4707
  4141  0210  0BA8               	decfsz	(??_criasetpoint^(0+128)+1),f
  4142  0211  2A0E               	goto	u4707
  4143  0212  0BA9               	decfsz	(??_criasetpoint^(0+128)+2),f
  4144  0213  2A0E               	goto	u4707
  4145  0214  2A15               	nop2
  4146                           
  4147                           ;Serial_Tank.c: 314:                 attTexto = 3;
  4148  0215  3003               	movlw	3
  4149  0216  1683               	bsf	3,5	;RP0=1, select bank1
  4150  0217  1303               	bcf	3,6	;RP1=0, select bank1
  4151  0218  00B4               	movwf	criasetpoint@attTexto^(0+128)
  4152  0219  3000               	movlw	0
  4153  021A  00B5               	movwf	(criasetpoint@attTexto^(0+128)+1)
  4154                           
  4155                           ;Serial_Tank.c: 315:                 progressao++;
  4156  021B  3001               	movlw	1
  4157  021C  07B0               	addwf	criasetpoint@progressao^(0+128),f
  4158  021D  1803               	skipnc
  4159  021E  0AB1               	incf	(criasetpoint@progressao+1)^(0+128),f
  4160  021F  3000               	movlw	0
  4161  0220  07B1               	addwf	(criasetpoint@progressao+1)^(0+128),f
  4162                           
  4163                           ;Serial_Tank.c: 316:             } else if (!RB3)
  4164  0221  2BF8               	goto	l3391
  4165  0222                     l154:
  4166  0222  1986               	btfsc	6,3	;volatile
  4167  0223  2A25               	goto	u4431
  4168  0224  2A26               	goto	u4430
  4169  0225                     u4431:
  4170  0225  2BF8               	goto	l3391
  4171  0226                     u4430:
  4172  0226  2C00               	goto	l145
  4173  0227                     l3337:
  4174  0227  3003               	movlw	3
  4175  0228  0630               	xorwf	criasetpoint@progressao^(0+128),w
  4176  0229  0431               	iorwf	(criasetpoint@progressao+1)^(0+128),w
  4177  022A  1D03               	btfss	3,2
  4178  022B  2A2D               	goto	u4441
  4179  022C  2A2E               	goto	u4440
  4180  022D                     u4441:
  4181  022D  2A81               	goto	l3351
  4182  022E                     u4440:
  4183  022E                     l3339:
  4184                           
  4185                           ;Serial_Tank.c: 319:             if (!PORTBbits.RB0) {
  4186  022E  1283               	bcf	3,5	;RP0=0, select bank0
  4187  022F  1303               	bcf	3,6	;RP1=0, select bank0
  4188  0230  1806               	btfsc	6,0	;volatile
  4189  0231  2A33               	goto	u4451
  4190  0232  2A34               	goto	u4450
  4191  0233                     u4451:
  4192  0233  2A49               	goto	l159
  4193  0234                     u4450:
  4194  0234                     l3341:
  4195                           
  4196                           ;Serial_Tank.c: 320:                 _delay((unsigned long)((15)*(4000000/4000.0)));
  4197  0234  3014               	movlw	20
  4198  0235  1683               	bsf	3,5	;RP0=1, select bank1
  4199  0236  1303               	bcf	3,6	;RP1=0, select bank1
  4200  0237  00A8               	movwf	(??_criasetpoint^(0+128)+1)
  4201  0238  3079               	movlw	121
  4202  0239  00A7               	movwf	??_criasetpoint^(0+128)
  4203  023A                     u4717:
  4204  023A  0BA7               	decfsz	??_criasetpoint^(0+128),f
  4205  023B  2A3A               	goto	u4717
  4206  023C  0BA8               	decfsz	(??_criasetpoint^(0+128)+1),f
  4207  023D  2A3A               	goto	u4717
  4208                           
  4209                           ;Serial_Tank.c: 321:                 attTexto = 3;
  4210  023E  3003               	movlw	3
  4211  023F  1683               	bsf	3,5	;RP0=1, select bank1
  4212  0240  1303               	bcf	3,6	;RP1=0, select bank1
  4213  0241  00B4               	movwf	criasetpoint@attTexto^(0+128)
  4214  0242  3000               	movlw	0
  4215  0243  00B5               	movwf	(criasetpoint@attTexto^(0+128)+1)
  4216                           
  4217                           ;Serial_Tank.c: 322:                 auxAgit = 1;
  4218  0244  3001               	movlw	1
  4219  0245  00AC               	movwf	criasetpoint@auxAgit^(0+128)
  4220  0246  3000               	movlw	0
  4221  0247  00AD               	movwf	(criasetpoint@auxAgit^(0+128)+1)
  4222                           
  4223                           ;Serial_Tank.c: 323:             } else if (!PORTBbits.RB1) {
  4224  0248  2BF8               	goto	l3391
  4225  0249                     l159:
  4226  0249  1886               	btfsc	6,1	;volatile
  4227  024A  2A4C               	goto	u4461
  4228  024B  2A4D               	goto	u4460
  4229  024C                     u4461:
  4230  024C  2A60               	goto	l161
  4231  024D                     u4460:
  4232  024D                     l3343:
  4233                           
  4234                           ;Serial_Tank.c: 324:                 _delay((unsigned long)((15)*(4000000/4000.0)));
  4235  024D  3014               	movlw	20
  4236  024E  1683               	bsf	3,5	;RP0=1, select bank1
  4237  024F  1303               	bcf	3,6	;RP1=0, select bank1
  4238  0250  00A8               	movwf	(??_criasetpoint^(0+128)+1)
  4239  0251  3079               	movlw	121
  4240  0252  00A7               	movwf	??_criasetpoint^(0+128)
  4241  0253                     u4727:
  4242  0253  0BA7               	decfsz	??_criasetpoint^(0+128),f
  4243  0254  2A53               	goto	u4727
  4244  0255  0BA8               	decfsz	(??_criasetpoint^(0+128)+1),f
  4245  0256  2A53               	goto	u4727
  4246                           
  4247                           ;Serial_Tank.c: 325:                 attTexto = 3;
  4248  0257  3003               	movlw	3
  4249  0258  1683               	bsf	3,5	;RP0=1, select bank1
  4250  0259  1303               	bcf	3,6	;RP1=0, select bank1
  4251  025A  00B4               	movwf	criasetpoint@attTexto^(0+128)
  4252  025B  3000               	movlw	0
  4253  025C  00B5               	movwf	(criasetpoint@attTexto^(0+128)+1)
  4254  025D                     l3345:
  4255                           
  4256                           ;Serial_Tank.c: 326:                 auxAgit = 0;
  4257  025D  01AC               	clrf	criasetpoint@auxAgit^(0+128)
  4258  025E  01AD               	clrf	(criasetpoint@auxAgit+1)^(0+128)
  4259                           
  4260                           ;Serial_Tank.c: 327:             } else if (!PORTBbits.RB2) {
  4261  025F  2BF8               	goto	l3391
  4262  0260                     l161:
  4263  0260  1906               	btfsc	6,2	;volatile
  4264  0261  2A63               	goto	u4471
  4265  0262  2A64               	goto	u4470
  4266  0263                     u4471:
  4267  0263  2A7C               	goto	l163
  4268  0264                     u4470:
  4269  0264                     l3347:
  4270                           
  4271                           ;Serial_Tank.c: 328:                 _delay((unsigned long)((200)*(4000000/4000.0)));
  4272  0264  3002               	movlw	2
  4273  0265  1683               	bsf	3,5	;RP0=1, select bank1
  4274  0266  1303               	bcf	3,6	;RP1=0, select bank1
  4275  0267  00A9               	movwf	(??_criasetpoint^(0+128)+2)
  4276  0268  3004               	movlw	4
  4277  0269  00A8               	movwf	(??_criasetpoint^(0+128)+1)
  4278  026A  30B9               	movlw	185
  4279  026B  00A7               	movwf	??_criasetpoint^(0+128)
  4280  026C                     u4737:
  4281  026C  0BA7               	decfsz	??_criasetpoint^(0+128),f
  4282  026D  2A6C               	goto	u4737
  4283  026E  0BA8               	decfsz	(??_criasetpoint^(0+128)+1),f
  4284  026F  2A6C               	goto	u4737
  4285  0270  0BA9               	decfsz	(??_criasetpoint^(0+128)+2),f
  4286  0271  2A6C               	goto	u4737
  4287  0272  2A73               	nop2
  4288                           
  4289                           ;Serial_Tank.c: 329:                 progressao++;
  4290  0273  3001               	movlw	1
  4291  0274  1683               	bsf	3,5	;RP0=1, select bank1
  4292  0275  1303               	bcf	3,6	;RP1=0, select bank1
  4293  0276  07B0               	addwf	criasetpoint@progressao^(0+128),f
  4294  0277  1803               	skipnc
  4295  0278  0AB1               	incf	(criasetpoint@progressao+1)^(0+128),f
  4296  0279  3000               	movlw	0
  4297  027A  07B1               	addwf	(criasetpoint@progressao+1)^(0+128),f
  4298                           
  4299                           ;Serial_Tank.c: 330:             } else if (!RB3)
  4300  027B  2BF8               	goto	l3391
  4301  027C                     l163:
  4302  027C  1986               	btfsc	6,3	;volatile
  4303  027D  2A7F               	goto	u4481
  4304  027E  2A80               	goto	u4480
  4305  027F                     u4481:
  4306  027F  298B               	goto	l140
  4307  0280                     u4480:
  4308  0280  2C00               	goto	l145
  4309  0281                     l3351:
  4310  0281  3004               	movlw	4
  4311  0282  0630               	xorwf	criasetpoint@progressao^(0+128),w
  4312  0283  0431               	iorwf	(criasetpoint@progressao+1)^(0+128),w
  4313  0284  1D03               	btfss	3,2
  4314  0285  2A87               	goto	u4491
  4315  0286  2A88               	goto	u4490
  4316  0287                     u4491:
  4317  0287  2BF8               	goto	l3391
  4318  0288                     u4490:
  4319  0288                     l3353:
  4320  0288                     l3355:
  4321  0288                     l3357:
  4322                           
  4323                           ;Serial_Tank.c: 335:             if (opcao == 0) {
  4324  0288  0825               	movf	criasetpoint@opcao^(0+128),w
  4325  0289  0426               	iorwf	(criasetpoint@opcao+1)^(0+128),w
  4326  028A  1D03               	btfss	3,2
  4327  028B  2A8D               	goto	u4501
  4328  028C  2A8E               	goto	u4500
  4329  028D                     u4501:
  4330  028D  2AF6               	goto	l3367
  4331  028E                     u4500:
  4332  028E                     l3359:
  4333                           
  4334                           ;Serial_Tank.c: 336:                 setVolm = (unsigned int) (((float) auxVolm / (float
      +                          ) 100) * capacidade);
  4335  028E  0836               	movf	criasetpoint@auxVolm^(0+128),w
  4336  028F  1283               	bcf	3,5	;RP0=0, select bank0
  4337  0290  1303               	bcf	3,6	;RP1=0, select bank0
  4338  0291  00A8               	movwf	___xxtofl@val
  4339  0292  1683               	bsf	3,5	;RP0=1, select bank1
  4340  0293  1303               	bcf	3,6	;RP1=0, select bank1
  4341  0294  0837               	movf	(criasetpoint@auxVolm+1)^(0+128),w
  4342  0295  1283               	bcf	3,5	;RP0=0, select bank0
  4343  0296  1303               	bcf	3,6	;RP1=0, select bank0
  4344  0297  00A9               	movwf	___xxtofl@val+1
  4345  0298  01AA               	clrf	___xxtofl@val+2
  4346  0299  01AB               	clrf	___xxtofl@val+3
  4347  029A  3000               	movlw	0
  4348  029B  120A  158A  2313  120A  118A  	fcall	___xxtofl
  4349  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  4350  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  4351  02A2  082B               	movf	?___xxtofl+3,w
  4352  02A3  00BD               	movwf	___fldiv@b+3
  4353  02A4  082A               	movf	?___xxtofl+2,w
  4354  02A5  00BC               	movwf	___fldiv@b+2
  4355  02A6  0829               	movf	?___xxtofl+1,w
  4356  02A7  00BB               	movwf	___fldiv@b+1
  4357  02A8  0828               	movf	?___xxtofl,w
  4358  02A9  00BA               	movwf	___fldiv@b
  4359  02AA  3042               	movlw	66
  4360  02AB  00B9               	movwf	___fldiv@a+3
  4361  02AC  30C8               	movlw	200
  4362  02AD  00B8               	movwf	___fldiv@a+2
  4363  02AE  3000               	movlw	0
  4364  02AF  00B7               	movwf	___fldiv@a+1
  4365  02B0  3000               	movlw	0
  4366  02B1  00B6               	movwf	___fldiv@a
  4367  02B2  120A  158A  23CF  120A  118A  	fcall	___fldiv
  4368  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  4369  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  4370  02B9  0839               	movf	?___fldiv+3,w
  4371  02BA  00D7               	movwf	___flmul@a+3
  4372  02BB  0838               	movf	?___fldiv+2,w
  4373  02BC  00D6               	movwf	___flmul@a+2
  4374  02BD  0837               	movf	?___fldiv+1,w
  4375  02BE  00D5               	movwf	___flmul@a+1
  4376  02BF  0836               	movf	?___fldiv,w
  4377  02C0  00D4               	movwf	___flmul@a
  4378  02C1  3045               	movlw	69
  4379  02C2  00D3               	movwf	___flmul@b+3
  4380  02C3  303B               	movlw	59
  4381  02C4  00D2               	movwf	___flmul@b+2
  4382  02C5  3080               	movlw	128
  4383  02C6  00D1               	movwf	___flmul@b+1
  4384  02C7  3000               	movlw	0
  4385  02C8  00D0               	movwf	___flmul@b
  4386  02C9  120A  118A  2401  120A  118A  	fcall	___flmul
  4387  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  4388  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  4389  02D0  0853               	movf	?___flmul+3,w
  4390  02D1  00ED               	movwf	___fltol@f1+3
  4391  02D2  0852               	movf	?___flmul+2,w
  4392  02D3  00EC               	movwf	___fltol@f1+2
  4393  02D4  0851               	movf	?___flmul+1,w
  4394  02D5  00EB               	movwf	___fltol@f1+1
  4395  02D6  0850               	movf	?___flmul,w
  4396  02D7  00EA               	movwf	___fltol@f1
  4397  02D8  120A  118A  2762  120A  118A  	fcall	___fltol
  4398  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  4399  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  4400  02DF  086B               	movf	?___fltol+1,w
  4401  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  4402  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  4403  02E2  00C0               	movwf	(_setVolm+1)^(0+128)
  4404  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  4405  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  4406  02E5  086A               	movf	?___fltol,w
  4407  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  4408  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  4409  02E8  00BF               	movwf	_setVolm^(0+128)
  4410  02E9                     l3361:
  4411                           
  4412                           ;Serial_Tank.c: 337:                 setTemp = auxTemp;
  4413  02E9  0833               	movf	(criasetpoint@auxTemp+1)^(0+128),w
  4414  02EA  00BE               	movwf	(_setTemp+1)^(0+128)
  4415  02EB  0832               	movf	criasetpoint@auxTemp^(0+128),w
  4416  02EC  00BD               	movwf	_setTemp^(0+128)
  4417  02ED                     l3363:
  4418                           
  4419                           ;Serial_Tank.c: 338:                 setAgit = auxAgit;
  4420  02ED  082D               	movf	(criasetpoint@auxAgit+1)^(0+128),w
  4421  02EE  00BC               	movwf	(_setAgit+1)^(0+128)
  4422  02EF  082C               	movf	criasetpoint@auxAgit^(0+128),w
  4423  02F0  00BB               	movwf	_setAgit^(0+128)
  4424  02F1                     l3365:
  4425                           
  4426                           ;Serial_Tank.c: 339:                 setEnable = 1;
  4427  02F1  3001               	movlw	1
  4428  02F2  00C1               	movwf	_setEnable^(0+128)
  4429  02F3  3000               	movlw	0
  4430  02F4  00C2               	movwf	(_setEnable^(0+128)+1)
  4431                           
  4432                           ;Serial_Tank.c: 340:             } else if (opcao == 1) {
  4433  02F5  2C00               	goto	l145
  4434  02F6                     l3367:
  4435  02F6  0325               	decf	criasetpoint@opcao^(0+128),w
  4436  02F7  0426               	iorwf	(criasetpoint@opcao+1)^(0+128),w
  4437  02F8  1D03               	btfss	3,2
  4438  02F9  2AFB               	goto	u4511
  4439  02FA  2AFC               	goto	u4510
  4440  02FB                     u4511:
  4441  02FB  2C00               	goto	l145
  4442  02FC                     u4510:
  4443  02FC                     l3369:
  4444                           
  4445                           ;Serial_Tank.c: 341:                 eeprom_write(0, auxTemp);
  4446  02FC  0832               	movf	criasetpoint@auxTemp^(0+128),w
  4447  02FD  00A7               	movwf	??_criasetpoint^(0+128)
  4448  02FE  0827               	movf	??_criasetpoint^(0+128),w
  4449  02FF  00F2               	movwf	eeprom_write@value
  4450  0300  3000               	movlw	0
  4451  0301  160A  118A  25CF  120A  118A  	fcall	_eeprom_write
  4452  0306                     l3371:
  4453                           
  4454                           ;Serial_Tank.c: 342:                 unsigned int auxVolm2;;Serial_Tank.c: 343:         
      +                                  auxVolm2 = (unsigned int) (((float) auxVolm / (float) 100) * capacidade);
  4455  0306  1683               	bsf	3,5	;RP0=1, select bank1
  4456  0307  1303               	bcf	3,6	;RP1=0, select bank1
  4457  0308  0836               	movf	criasetpoint@auxVolm^(0+128),w
  4458  0309  1283               	bcf	3,5	;RP0=0, select bank0
  4459  030A  1303               	bcf	3,6	;RP1=0, select bank0
  4460  030B  00A8               	movwf	___xxtofl@val
  4461  030C  1683               	bsf	3,5	;RP0=1, select bank1
  4462  030D  1303               	bcf	3,6	;RP1=0, select bank1
  4463  030E  0837               	movf	(criasetpoint@auxVolm+1)^(0+128),w
  4464  030F  1283               	bcf	3,5	;RP0=0, select bank0
  4465  0310  1303               	bcf	3,6	;RP1=0, select bank0
  4466  0311  00A9               	movwf	___xxtofl@val+1
  4467  0312  01AA               	clrf	___xxtofl@val+2
  4468  0313  01AB               	clrf	___xxtofl@val+3
  4469  0314  3000               	movlw	0
  4470  0315  120A  158A  2313  120A  118A  	fcall	___xxtofl
  4471  031A  1283               	bcf	3,5	;RP0=0, select bank0
  4472  031B  1303               	bcf	3,6	;RP1=0, select bank0
  4473  031C  082B               	movf	?___xxtofl+3,w
  4474  031D  00BD               	movwf	___fldiv@b+3
  4475  031E  082A               	movf	?___xxtofl+2,w
  4476  031F  00BC               	movwf	___fldiv@b+2
  4477  0320  0829               	movf	?___xxtofl+1,w
  4478  0321  00BB               	movwf	___fldiv@b+1
  4479  0322  0828               	movf	?___xxtofl,w
  4480  0323  00BA               	movwf	___fldiv@b
  4481  0324  3042               	movlw	66
  4482  0325  00B9               	movwf	___fldiv@a+3
  4483  0326  30C8               	movlw	200
  4484  0327  00B8               	movwf	___fldiv@a+2
  4485  0328  3000               	movlw	0
  4486  0329  00B7               	movwf	___fldiv@a+1
  4487  032A  3000               	movlw	0
  4488  032B  00B6               	movwf	___fldiv@a
  4489  032C  120A  158A  23CF  120A  118A  	fcall	___fldiv
  4490  0331  1283               	bcf	3,5	;RP0=0, select bank0
  4491  0332  1303               	bcf	3,6	;RP1=0, select bank0
  4492  0333  0839               	movf	?___fldiv+3,w
  4493  0334  00D7               	movwf	___flmul@a+3
  4494  0335  0838               	movf	?___fldiv+2,w
  4495  0336  00D6               	movwf	___flmul@a+2
  4496  0337  0837               	movf	?___fldiv+1,w
  4497  0338  00D5               	movwf	___flmul@a+1
  4498  0339  0836               	movf	?___fldiv,w
  4499  033A  00D4               	movwf	___flmul@a
  4500  033B  3045               	movlw	69
  4501  033C  00D3               	movwf	___flmul@b+3
  4502  033D  303B               	movlw	59
  4503  033E  00D2               	movwf	___flmul@b+2
  4504  033F  3080               	movlw	128
  4505  0340  00D1               	movwf	___flmul@b+1
  4506  0341  3000               	movlw	0
  4507  0342  00D0               	movwf	___flmul@b
  4508  0343  120A  118A  2401  120A  118A  	fcall	___flmul
  4509  0348  1283               	bcf	3,5	;RP0=0, select bank0
  4510  0349  1303               	bcf	3,6	;RP1=0, select bank0
  4511  034A  0853               	movf	?___flmul+3,w
  4512  034B  00ED               	movwf	___fltol@f1+3
  4513  034C  0852               	movf	?___flmul+2,w
  4514  034D  00EC               	movwf	___fltol@f1+2
  4515  034E  0851               	movf	?___flmul+1,w
  4516  034F  00EB               	movwf	___fltol@f1+1
  4517  0350  0850               	movf	?___flmul,w
  4518  0351  00EA               	movwf	___fltol@f1
  4519  0352  120A  118A  2762  120A  118A  	fcall	___fltol
  4520  0357  1283               	bcf	3,5	;RP0=0, select bank0
  4521  0358  1303               	bcf	3,6	;RP1=0, select bank0
  4522  0359  086B               	movf	?___fltol+1,w
  4523  035A  1683               	bsf	3,5	;RP0=1, select bank1
  4524  035B  1303               	bcf	3,6	;RP1=0, select bank1
  4525  035C  00AF               	movwf	(criasetpoint@auxVolm2+1)^(0+128)
  4526  035D  1283               	bcf	3,5	;RP0=0, select bank0
  4527  035E  1303               	bcf	3,6	;RP1=0, select bank0
  4528  035F  086A               	movf	?___fltol,w
  4529  0360  1683               	bsf	3,5	;RP0=1, select bank1
  4530  0361  1303               	bcf	3,6	;RP1=0, select bank1
  4531  0362  00AE               	movwf	criasetpoint@auxVolm2^(0+128)
  4532  0363                     l3373:
  4533                           
  4534                           ;Serial_Tank.c: 344:                 auxVolm2 &= 0xFF00;
  4535  0363  3000               	movlw	0
  4536  0364  05AE               	andwf	criasetpoint@auxVolm2^(0+128),f
  4537  0365  30FF               	movlw	255
  4538  0366  05AF               	andwf	(criasetpoint@auxVolm2+1)^(0+128),f
  4539  0367                     l3375:
  4540                           
  4541                           ;Serial_Tank.c: 345:                 auxVolm2 = auxVolm2 >> 8;
  4542  0367  082F               	movf	(criasetpoint@auxVolm2+1)^(0+128),w
  4543  0368  00A8               	movwf	(??_criasetpoint^(0+128)+1)
  4544  0369  082E               	movf	criasetpoint@auxVolm2^(0+128),w
  4545  036A  00A7               	movwf	??_criasetpoint^(0+128)
  4546  036B  0828               	movf	(??_criasetpoint^(0+128)+1),w
  4547  036C  00A7               	movwf	??_criasetpoint^(0+128)
  4548  036D  01A8               	clrf	(??_criasetpoint^(0+128)+1)
  4549  036E  0827               	movf	??_criasetpoint^(0+128),w
  4550  036F  00AE               	movwf	criasetpoint@auxVolm2^(0+128)
  4551  0370  0828               	movf	(??_criasetpoint+1)^(0+128),w
  4552  0371  00AF               	movwf	(criasetpoint@auxVolm2+1)^(0+128)
  4553  0372                     l3377:
  4554                           
  4555                           ;Serial_Tank.c: 346:                 eeprom_write(1, auxVolm2);
  4556  0372  082E               	movf	criasetpoint@auxVolm2^(0+128),w
  4557  0373  00A7               	movwf	??_criasetpoint^(0+128)
  4558  0374  0827               	movf	??_criasetpoint^(0+128),w
  4559  0375  00F2               	movwf	eeprom_write@value
  4560  0376  3001               	movlw	1
  4561  0377  160A  118A  25CF  120A  118A  	fcall	_eeprom_write
  4562  037C                     l3379:
  4563                           
  4564                           ;Serial_Tank.c: 347:                 auxVolm2 = (unsigned int) (((float) auxVolm / (floa
      +                          t) 100) * capacidade);
  4565  037C  1683               	bsf	3,5	;RP0=1, select bank1
  4566  037D  1303               	bcf	3,6	;RP1=0, select bank1
  4567  037E  0836               	movf	criasetpoint@auxVolm^(0+128),w
  4568  037F  1283               	bcf	3,5	;RP0=0, select bank0
  4569  0380  1303               	bcf	3,6	;RP1=0, select bank0
  4570  0381  00A8               	movwf	___xxtofl@val
  4571  0382  1683               	bsf	3,5	;RP0=1, select bank1
  4572  0383  1303               	bcf	3,6	;RP1=0, select bank1
  4573  0384  0837               	movf	(criasetpoint@auxVolm+1)^(0+128),w
  4574  0385  1283               	bcf	3,5	;RP0=0, select bank0
  4575  0386  1303               	bcf	3,6	;RP1=0, select bank0
  4576  0387  00A9               	movwf	___xxtofl@val+1
  4577  0388  01AA               	clrf	___xxtofl@val+2
  4578  0389  01AB               	clrf	___xxtofl@val+3
  4579  038A  3000               	movlw	0
  4580  038B  120A  158A  2313  120A  118A  	fcall	___xxtofl
  4581  0390  1283               	bcf	3,5	;RP0=0, select bank0
  4582  0391  1303               	bcf	3,6	;RP1=0, select bank0
  4583  0392  082B               	movf	?___xxtofl+3,w
  4584  0393  00BD               	movwf	___fldiv@b+3
  4585  0394  082A               	movf	?___xxtofl+2,w
  4586  0395  00BC               	movwf	___fldiv@b+2
  4587  0396  0829               	movf	?___xxtofl+1,w
  4588  0397  00BB               	movwf	___fldiv@b+1
  4589  0398  0828               	movf	?___xxtofl,w
  4590  0399  00BA               	movwf	___fldiv@b
  4591  039A  3042               	movlw	66
  4592  039B  00B9               	movwf	___fldiv@a+3
  4593  039C  30C8               	movlw	200
  4594  039D  00B8               	movwf	___fldiv@a+2
  4595  039E  3000               	movlw	0
  4596  039F  00B7               	movwf	___fldiv@a+1
  4597  03A0  3000               	movlw	0
  4598  03A1  00B6               	movwf	___fldiv@a
  4599  03A2  120A  158A  23CF  120A  118A  	fcall	___fldiv
  4600  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  4601  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  4602  03A9  0839               	movf	?___fldiv+3,w
  4603  03AA  00D7               	movwf	___flmul@a+3
  4604  03AB  0838               	movf	?___fldiv+2,w
  4605  03AC  00D6               	movwf	___flmul@a+2
  4606  03AD  0837               	movf	?___fldiv+1,w
  4607  03AE  00D5               	movwf	___flmul@a+1
  4608  03AF  0836               	movf	?___fldiv,w
  4609  03B0  00D4               	movwf	___flmul@a
  4610  03B1  3045               	movlw	69
  4611  03B2  00D3               	movwf	___flmul@b+3
  4612  03B3  303B               	movlw	59
  4613  03B4  00D2               	movwf	___flmul@b+2
  4614  03B5  3080               	movlw	128
  4615  03B6  00D1               	movwf	___flmul@b+1
  4616  03B7  3000               	movlw	0
  4617  03B8  00D0               	movwf	___flmul@b
  4618  03B9  120A  118A  2401  120A  118A  	fcall	___flmul
  4619  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  4620  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  4621  03C0  0853               	movf	?___flmul+3,w
  4622  03C1  00ED               	movwf	___fltol@f1+3
  4623  03C2  0852               	movf	?___flmul+2,w
  4624  03C3  00EC               	movwf	___fltol@f1+2
  4625  03C4  0851               	movf	?___flmul+1,w
  4626  03C5  00EB               	movwf	___fltol@f1+1
  4627  03C6  0850               	movf	?___flmul,w
  4628  03C7  00EA               	movwf	___fltol@f1
  4629  03C8  120A  118A  2762  120A  118A  	fcall	___fltol
  4630  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  4631  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  4632  03CF  086B               	movf	?___fltol+1,w
  4633  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  4634  03D1  1303               	bcf	3,6	;RP1=0, select bank1
  4635  03D2  00AF               	movwf	(criasetpoint@auxVolm2+1)^(0+128)
  4636  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  4637  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  4638  03D5  086A               	movf	?___fltol,w
  4639  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  4640  03D7  1303               	bcf	3,6	;RP1=0, select bank1
  4641  03D8  00AE               	movwf	criasetpoint@auxVolm2^(0+128)
  4642  03D9                     l3381:
  4643                           
  4644                           ;Serial_Tank.c: 348:                 auxVolm2 &= 0x00FF;
  4645  03D9  30FF               	movlw	255
  4646  03DA  05AE               	andwf	criasetpoint@auxVolm2^(0+128),f
  4647  03DB  3000               	movlw	0
  4648  03DC  05AF               	andwf	(criasetpoint@auxVolm2+1)^(0+128),f
  4649  03DD                     l3383:
  4650                           
  4651                           ;Serial_Tank.c: 349:                 eeprom_write(2, auxVolm2);
  4652  03DD  082E               	movf	criasetpoint@auxVolm2^(0+128),w
  4653  03DE  00A7               	movwf	??_criasetpoint^(0+128)
  4654  03DF  0827               	movf	??_criasetpoint^(0+128),w
  4655  03E0  00F2               	movwf	eeprom_write@value
  4656  03E1  3002               	movlw	2
  4657  03E2  160A  118A  25CF  120A  118A  	fcall	_eeprom_write
  4658  03E7                     l3385:
  4659                           
  4660                           ;Serial_Tank.c: 350:                 eeprom_write(3, auxAgit);
  4661  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  4662  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  4663  03E9  082C               	movf	criasetpoint@auxAgit^(0+128),w
  4664  03EA  00A7               	movwf	??_criasetpoint^(0+128)
  4665  03EB  0827               	movf	??_criasetpoint^(0+128),w
  4666  03EC  00F2               	movwf	eeprom_write@value
  4667  03ED  3003               	movlw	3
  4668  03EE  160A  118A  25CF  120A  118A  	fcall	_eeprom_write
  4669  03F3                     l3387:
  4670                           
  4671                           ;Serial_Tank.c: 351:                 setEnable = 0;
  4672  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  4673  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  4674  03F5  01C1               	clrf	_setEnable^(0+128)
  4675  03F6  01C2               	clrf	(_setEnable+1)^(0+128)
  4676  03F7  2C00               	goto	l145
  4677  03F8                     l3391:
  4678                           
  4679                           ;Serial_Tank.c: 251:     while (wait) {
  4680  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  4681  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  4682  03FA  082A               	movf	criasetpoint@wait^(0+128),w
  4683  03FB  042B               	iorwf	(criasetpoint@wait+1)^(0+128),w
  4684  03FC  1D03               	btfss	3,2
  4685  03FD  2BFF               	goto	u4521
  4686  03FE  2C00               	goto	u4520
  4687  03FF                     u4521:
  4688  03FF  2843               	goto	l3247
  4689  0400                     u4520:
  4690  0400                     l145:
  4691  0400  0008               	return
  4692  0401                     __end_of_criasetpoint:
  4693                           
  4694                           	psect	text14
  4695  15A4                     __ptext14:	
  4696 ;; *************** function _lcd_str *****************
  4697 ;; Defined at:
  4698 ;;		line 70 in file "lcd.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  str             2    6[COMMON] PTR const unsigned char 
  4701 ;;		 -> STR_22(16), STR_21(2), STR_20(7), STR_19(2), 
  4702 ;;		 -> STR_18(5), STR_17(17), STR_16(9), STR_15(16), 
  4703 ;;		 -> STR_14(4), STR_13(4), STR_12(11), STR_11(16), 
  4704 ;;		 -> STR_10(2), STR_9(6), STR_8(16), STR_7(2), 
  4705 ;;		 -> STR_6(5), STR_5(17), STR_4(2), STR_3(7), 
  4706 ;;		 -> STR_2(2), buff(6), STR_1(5), 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  i               1    9[COMMON] unsigned char 
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      void 
  4711 ;; Registers used:
  4712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4718 ;;      Params:         2       0       0       0       0
  4719 ;;      Locals:         1       0       0       0       0
  4720 ;;      Temps:          1       0       0       0       0
  4721 ;;      Totals:         4       0       0       0       0
  4722 ;;Total ram usage:        4 bytes
  4723 ;; Hardware stack levels used: 1
  4724 ;; Hardware stack levels required when called: 3
  4725 ;; This function calls:
  4726 ;;		_lcd_dat
  4727 ;; This function is called by:
  4728 ;;		_telaUmTexto
  4729 ;;		_criasetpoint
  4730 ;;		_EtapaCinco
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734  15A4                     _lcd_str:	
  4735                           ;psect for function _lcd_str
  4736                           
  4737  15A4                     l2021:	
  4738                           ;incstack = 0
  4739                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4740                           
  4741                           
  4742                           ;lcd.c: 70: void lcd_str(const char* str);lcd.c: 71: {;lcd.c: 72:  unsigned char i=0;
  4743  15A4  01F9               	clrf	lcd_str@i
  4744                           
  4745                           ;lcd.c: 74:  while(str[i] != 0 )
  4746  15A5  2DBB               	goto	l2027
  4747  15A6                     l2023:
  4748                           
  4749                           ;lcd.c: 75:  {;lcd.c: 76:    lcd_dat(str[i]);
  4750  15A6  0879               	movf	lcd_str@i,w
  4751  15A7  0776               	addwf	lcd_str@str,w
  4752  15A8  0084               	movwf	4
  4753  15A9  0877               	movf	lcd_str@str+1,w
  4754  15AA  1803               	skipnc
  4755  15AB  0A77               	incf	lcd_str@str+1,w
  4756  15AC  00FF               	movwf	btemp+1
  4757  15AD  120A  158A  2000  160A  118A  	fcall	stringtab
  4758  15B2  160A  118A  2555  160A  118A  	fcall	_lcd_dat
  4759  15B7                     l2025:
  4760                           
  4761                           ;lcd.c: 77:    i++;
  4762  15B7  3001               	movlw	1
  4763  15B8  00F8               	movwf	??_lcd_str
  4764  15B9  0878               	movf	??_lcd_str,w
  4765  15BA  07F9               	addwf	lcd_str@i,f
  4766  15BB                     l2027:
  4767                           
  4768                           ;lcd.c: 74:  while(str[i] != 0 )
  4769  15BB  0879               	movf	lcd_str@i,w
  4770  15BC  0776               	addwf	lcd_str@str,w
  4771  15BD  0084               	movwf	4
  4772  15BE  0877               	movf	lcd_str@str+1,w
  4773  15BF  1803               	skipnc
  4774  15C0  0A77               	incf	lcd_str@str+1,w
  4775  15C1  1283               	bcf	3,5	;RP0=0, select bank0
  4776  15C2  1303               	bcf	3,6	;RP1=0, select bank0
  4777  15C3  00FF               	movwf	btemp+1
  4778  15C4  120A  158A  2000  160A  118A  	fcall	stringtab
  4779  15C9  3A00               	xorlw	0
  4780  15CA  1D03               	skipz
  4781  15CB  2DCD               	goto	u2021
  4782  15CC  2DCE               	goto	u2020
  4783  15CD                     u2021:
  4784  15CD  2DA6               	goto	l2023
  4785  15CE                     u2020:
  4786  15CE                     l279:
  4787  15CE  0008               	return
  4788  15CF                     __end_of_lcd_str:
  4789                           
  4790                           	psect	text15
  4791  1555                     __ptext15:	
  4792 ;; *************** function _lcd_dat *****************
  4793 ;; Defined at:
  4794 ;;		line 40 in file "lcd.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  val             1    wreg     unsigned char 
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;  val             1    5[COMMON] unsigned char 
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1    wreg      void 
  4801 ;; Registers used:
  4802 ;;		wreg, status,2, status,0, pclath, cstack
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4808 ;;      Params:         0       0       0       0       0
  4809 ;;      Locals:         1       0       0       0       0
  4810 ;;      Temps:          2       0       0       0       0
  4811 ;;      Totals:         3       0       0       0       0
  4812 ;;Total ram usage:        3 bytes
  4813 ;; Hardware stack levels used: 1
  4814 ;; Hardware stack levels required when called: 2
  4815 ;; This function calls:
  4816 ;;		_lcd_wr
  4817 ;; This function is called by:
  4818 ;;		_lcd_str
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822  1555                     _lcd_dat:	
  4823                           ;psect for function _lcd_dat
  4824                           
  4825                           
  4826                           ;incstack = 0
  4827                           ; Regs used in _lcd_dat: [wreg+status,2+status,0+pclath+cstack]
  4828                           ;lcd_dat@val stored from wreg
  4829  1555  00F5               	movwf	lcd_dat@val
  4830  1556                     l1945:
  4831                           
  4832                           ;lcd.c: 40: void lcd_dat(unsigned char val);lcd.c: 41: {;lcd.c: 42:  PORTEbits.RE1=1;
  4833  1556  1283               	bcf	3,5	;RP0=0, select bank0
  4834  1557  1303               	bcf	3,6	;RP1=0, select bank0
  4835  1558  1489               	bsf	9,1	;volatile
  4836  1559                     l1947:
  4837                           
  4838                           ;lcd.c: 43:         lcd_wr(val);
  4839  1559  0875               	movf	lcd_dat@val,w
  4840  155A  160A  118A  24BB  160A  118A  	fcall	_lcd_wr
  4841  155F                     l1949:
  4842                           
  4843                           ;lcd.c: 44:         PORTEbits.RE0=1;
  4844  155F  1283               	bcf	3,5	;RP0=0, select bank0
  4845  1560  1303               	bcf	3,6	;RP1=0, select bank0
  4846  1561  1409               	bsf	9,0	;volatile
  4847  1562                     l1951:
  4848                           
  4849                           ;lcd.c: 45:         _delay((unsigned long)((3)*(4000000/4000.0)));
  4850  1562  3004               	movlw	4
  4851  1563  00F4               	movwf	??_lcd_dat+1
  4852  1564  30E4               	movlw	228
  4853  1565  00F3               	movwf	??_lcd_dat
  4854  1566                     u4747:
  4855  1566  0BF3               	decfsz	??_lcd_dat,f
  4856  1567  2D66               	goto	u4747
  4857  1568  0BF4               	decfsz	??_lcd_dat+1,f
  4858  1569  2D66               	goto	u4747
  4859  156A  0000               	nop
  4860  156B                     l1953:
  4861                           
  4862                           ;lcd.c: 46:         PORTEbits.RE1=0;
  4863  156B  1283               	bcf	3,5	;RP0=0, select bank0
  4864  156C  1303               	bcf	3,6	;RP1=0, select bank0
  4865  156D  1089               	bcf	9,1	;volatile
  4866  156E                     l1955:
  4867                           
  4868                           ;lcd.c: 47:         _delay((unsigned long)((3)*(4000000/4000.0)));
  4869  156E  3004               	movlw	4
  4870  156F  00F4               	movwf	??_lcd_dat+1
  4871  1570  30E4               	movlw	228
  4872  1571  00F3               	movwf	??_lcd_dat
  4873  1572                     u4757:
  4874  1572  0BF3               	decfsz	??_lcd_dat,f
  4875  1573  2D72               	goto	u4757
  4876  1574  0BF4               	decfsz	??_lcd_dat+1,f
  4877  1575  2D72               	goto	u4757
  4878  1576  0000               	nop
  4879  1577                     l1957:
  4880                           
  4881                           ;lcd.c: 48:  PORTEbits.RE1=1;
  4882  1577  1283               	bcf	3,5	;RP0=0, select bank0
  4883  1578  1303               	bcf	3,6	;RP1=0, select bank0
  4884  1579  1489               	bsf	9,1	;volatile
  4885  157A                     l270:
  4886  157A  0008               	return
  4887  157B                     __end_of_lcd_dat:
  4888                           
  4889                           	psect	text16
  4890  16A8                     __ptext16:	
  4891 ;; *************** function _itoa *****************
  4892 ;; Defined at:
  4893 ;;		line 19 in file "itoa.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;  val             2    7[BANK0 ] unsigned int 
  4896 ;;  str             1    9[BANK0 ] PTR unsigned char 
  4897 ;;		 -> buff(6), 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;		None
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      void 
  4902 ;; Registers used:
  4903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4909 ;;      Params:         0       3       0       0       0
  4910 ;;      Locals:         0       0       0       0       0
  4911 ;;      Temps:          1       0       0       0       0
  4912 ;;      Totals:         1       3       0       0       0
  4913 ;;Total ram usage:        4 bytes
  4914 ;; Hardware stack levels used: 1
  4915 ;; Hardware stack levels required when called: 2
  4916 ;; This function calls:
  4917 ;;		___lwdiv
  4918 ;;		___lwmod
  4919 ;; This function is called by:
  4920 ;;		_telaUmTexto
  4921 ;;		_criasetpoint
  4922 ;;		_EtapaCinco
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926  16A8                     _itoa:	
  4927                           ;psect for function _itoa
  4928                           
  4929  16A8                     l2949:	
  4930                           ;incstack = 0
  4931                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4932                           
  4933                           
  4934                           ;itoa.c: 19: void itoa(unsigned int val, char* str );itoa.c: 20: {;itoa.c: 24:   str[0]=
      +                          ((val%100)/10)+0x30;
  4935  16A8  300A               	movlw	10
  4936  16A9  1283               	bcf	3,5	;RP0=0, select bank0
  4937  16AA  1303               	bcf	3,6	;RP1=0, select bank0
  4938  16AB  00A0               	movwf	___lwdiv@divisor
  4939  16AC  3000               	movlw	0
  4940  16AD  00A1               	movwf	___lwdiv@divisor+1
  4941  16AE  0828               	movf	itoa@val+1,w
  4942  16AF  00F5               	movwf	___lwmod@dividend+1
  4943  16B0  0827               	movf	itoa@val,w
  4944  16B1  00F4               	movwf	___lwmod@dividend
  4945  16B2  3064               	movlw	100
  4946  16B3  00F2               	movwf	___lwmod@divisor
  4947  16B4  3000               	movlw	0
  4948  16B5  00F3               	movwf	___lwmod@divisor+1
  4949  16B6  160A  118A  2630  160A  118A  	fcall	___lwmod
  4950  16BB  0873               	movf	?___lwmod+1,w
  4951  16BC  1283               	bcf	3,5	;RP0=0, select bank0
  4952  16BD  1303               	bcf	3,6	;RP1=0, select bank0
  4953  16BE  00A3               	movwf	___lwdiv@dividend+1
  4954  16BF  0872               	movf	?___lwmod,w
  4955  16C0  00A2               	movwf	___lwdiv@dividend
  4956  16C1  160A  118A  26EC  160A  118A  	fcall	___lwdiv
  4957  16C6  1283               	bcf	3,5	;RP0=0, select bank0
  4958  16C7  1303               	bcf	3,6	;RP1=0, select bank0
  4959  16C8  0820               	movf	?___lwdiv,w
  4960  16C9  3E30               	addlw	48
  4961  16CA  00F9               	movwf	??_itoa
  4962  16CB  0829               	movf	itoa@str,w
  4963  16CC  0084               	movwf	4
  4964  16CD  0879               	movf	??_itoa,w
  4965  16CE  1383               	bcf	3,7	;select IRP bank0
  4966  16CF  0080               	movwf	0
  4967                           
  4968                           ;itoa.c: 25:   str[1]=(val%10)+0x30;
  4969  16D0  300A               	movlw	10
  4970  16D1  00F2               	movwf	___lwmod@divisor
  4971  16D2  3000               	movlw	0
  4972  16D3  00F3               	movwf	___lwmod@divisor+1
  4973  16D4  0828               	movf	itoa@val+1,w
  4974  16D5  00F5               	movwf	___lwmod@dividend+1
  4975  16D6  0827               	movf	itoa@val,w
  4976  16D7  00F4               	movwf	___lwmod@dividend
  4977  16D8  160A  118A  2630  160A  118A  	fcall	___lwmod
  4978  16DD  0872               	movf	?___lwmod,w
  4979  16DE  3E30               	addlw	48
  4980  16DF  00F9               	movwf	??_itoa
  4981  16E0  1283               	bcf	3,5	;RP0=0, select bank0
  4982  16E1  1303               	bcf	3,6	;RP1=0, select bank0
  4983  16E2  0A29               	incf	itoa@str,w
  4984  16E3  0084               	movwf	4
  4985  16E4  0879               	movf	??_itoa,w
  4986  16E5  1383               	bcf	3,7	;select IRP bank0
  4987  16E6  0080               	movwf	0
  4988  16E7                     l2951:
  4989                           
  4990                           ;itoa.c: 26:   str[2]=0;
  4991  16E7  0829               	movf	itoa@str,w
  4992  16E8  3E02               	addlw	2
  4993  16E9  0084               	movwf	4
  4994  16EA  0180               	clrf	0
  4995  16EB                     l282:
  4996  16EB  0008               	return
  4997  16EC                     __end_of_itoa:
  4998                           
  4999                           	psect	text17
  5000  1630                     __ptext17:	
  5001 ;; *************** function ___lwmod *****************
  5002 ;; Defined at:
  5003 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  divisor         2    2[COMMON] unsigned int 
  5006 ;;  dividend        2    4[COMMON] unsigned int 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;  counter         1    7[COMMON] unsigned char 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  2    2[COMMON] unsigned int 
  5011 ;; Registers used:
  5012 ;;		wreg, status,2, status,0
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5018 ;;      Params:         4       0       0       0       0
  5019 ;;      Locals:         1       0       0       0       0
  5020 ;;      Temps:          1       0       0       0       0
  5021 ;;      Totals:         6       0       0       0       0
  5022 ;;Total ram usage:        6 bytes
  5023 ;; Hardware stack levels used: 1
  5024 ;; Hardware stack levels required when called: 1
  5025 ;; This function calls:
  5026 ;;		Nothing
  5027 ;; This function is called by:
  5028 ;;		_itoa
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032  1630                     ___lwmod:	
  5033                           ;psect for function ___lwmod
  5034                           
  5035  1630                     l1985:	
  5036                           ;incstack = 0
  5037                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5038                           
  5039  1630  0872               	movf	___lwmod@divisor,w
  5040  1631  0473               	iorwf	___lwmod@divisor+1,w
  5041  1632  1903               	btfsc	3,2
  5042  1633  2E35               	goto	u1961
  5043  1634  2E36               	goto	u1960
  5044  1635                     u1961:
  5045  1635  2E65               	goto	l2003
  5046  1636                     u1960:
  5047  1636                     l1987:
  5048  1636  01F7               	clrf	___lwmod@counter
  5049  1637  0AF7               	incf	___lwmod@counter,f
  5050  1638  2E44               	goto	l1993
  5051  1639                     l1989:
  5052  1639  3001               	movlw	1
  5053  163A                     u1975:
  5054  163A  1003               	clrc
  5055  163B  0DF2               	rlf	___lwmod@divisor,f
  5056  163C  0DF3               	rlf	___lwmod@divisor+1,f
  5057  163D  3EFF               	addlw	-1
  5058  163E  1D03               	skipz
  5059  163F  2E3A               	goto	u1975
  5060  1640                     l1991:
  5061  1640  3001               	movlw	1
  5062  1641  00F6               	movwf	??___lwmod
  5063  1642  0876               	movf	??___lwmod,w
  5064  1643  07F7               	addwf	___lwmod@counter,f
  5065  1644                     l1993:
  5066  1644  1FF3               	btfss	___lwmod@divisor+1,7
  5067  1645  2E47               	goto	u1981
  5068  1646  2E48               	goto	u1980
  5069  1647                     u1981:
  5070  1647  2E39               	goto	l1989
  5071  1648                     u1980:
  5072  1648                     l1995:
  5073  1648  0873               	movf	___lwmod@divisor+1,w
  5074  1649  0275               	subwf	___lwmod@dividend+1,w
  5075  164A  1D03               	skipz
  5076  164B  2E4E               	goto	u1995
  5077  164C  0872               	movf	___lwmod@divisor,w
  5078  164D  0274               	subwf	___lwmod@dividend,w
  5079  164E                     u1995:
  5080  164E  1C03               	skipc
  5081  164F  2E51               	goto	u1991
  5082  1650  2E52               	goto	u1990
  5083  1651                     u1991:
  5084  1651  2E58               	goto	l1999
  5085  1652                     u1990:
  5086  1652                     l1997:
  5087  1652  0872               	movf	___lwmod@divisor,w
  5088  1653  02F4               	subwf	___lwmod@dividend,f
  5089  1654  0873               	movf	___lwmod@divisor+1,w
  5090  1655  1C03               	skipc
  5091  1656  03F5               	decf	___lwmod@dividend+1,f
  5092  1657  02F5               	subwf	___lwmod@dividend+1,f
  5093  1658                     l1999:
  5094  1658  3001               	movlw	1
  5095  1659                     u2005:
  5096  1659  1003               	clrc
  5097  165A  0CF3               	rrf	___lwmod@divisor+1,f
  5098  165B  0CF2               	rrf	___lwmod@divisor,f
  5099  165C  3EFF               	addlw	-1
  5100  165D  1D03               	skipz
  5101  165E  2E59               	goto	u2005
  5102  165F                     l2001:
  5103  165F  3001               	movlw	1
  5104  1660  02F7               	subwf	___lwmod@counter,f
  5105  1661  1D03               	btfss	3,2
  5106  1662  2E64               	goto	u2011
  5107  1663  2E65               	goto	u2010
  5108  1664                     u2011:
  5109  1664  2E48               	goto	l1995
  5110  1665                     u2010:
  5111  1665                     l2003:
  5112  1665  0875               	movf	___lwmod@dividend+1,w
  5113  1666  00F3               	movwf	?___lwmod+1
  5114  1667  0874               	movf	___lwmod@dividend,w
  5115  1668  00F2               	movwf	?___lwmod
  5116  1669                     l687:
  5117  1669  0008               	return
  5118  166A                     __end_of___lwmod:
  5119                           
  5120                           	psect	text18
  5121  16EC                     __ptext18:	
  5122 ;; *************** function ___lwdiv *****************
  5123 ;; Defined at:
  5124 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  divisor         2    0[BANK0 ] unsigned int 
  5127 ;;  dividend        2    2[BANK0 ] unsigned int 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;  quotient        2    5[BANK0 ] unsigned int 
  5130 ;;  counter         1    4[BANK0 ] unsigned char 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  2    0[BANK0 ] unsigned int 
  5133 ;; Registers used:
  5134 ;;		wreg, status,2, status,0
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5140 ;;      Params:         0       4       0       0       0
  5141 ;;      Locals:         0       3       0       0       0
  5142 ;;      Temps:          1       0       0       0       0
  5143 ;;      Totals:         1       7       0       0       0
  5144 ;;Total ram usage:        8 bytes
  5145 ;; Hardware stack levels used: 1
  5146 ;; Hardware stack levels required when called: 1
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_telaUmTexto
  5151 ;;		_EtapaCinco
  5152 ;;		_itoa
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156  16EC                     ___lwdiv:	
  5157                           ;psect for function ___lwdiv
  5158                           
  5159  16EC                     l2915:	
  5160                           ;incstack = 0
  5161                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5162                           
  5163  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  5164  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  5165  16EE  01A5               	clrf	___lwdiv@quotient
  5166  16EF  01A6               	clrf	___lwdiv@quotient+1
  5167  16F0                     l2917:
  5168  16F0  0820               	movf	___lwdiv@divisor,w
  5169  16F1  0421               	iorwf	___lwdiv@divisor+1,w
  5170  16F2  1903               	btfsc	3,2
  5171  16F3  2EF5               	goto	u3631
  5172  16F4  2EF6               	goto	u3630
  5173  16F5                     u3631:
  5174  16F5  2F2D               	goto	l2937
  5175  16F6                     u3630:
  5176  16F6                     l2919:
  5177  16F6  01A4               	clrf	___lwdiv@counter
  5178  16F7  0AA4               	incf	___lwdiv@counter,f
  5179  16F8  2F04               	goto	l2925
  5180  16F9                     l2921:
  5181  16F9  3001               	movlw	1
  5182  16FA                     u3645:
  5183  16FA  1003               	clrc
  5184  16FB  0DA0               	rlf	___lwdiv@divisor,f
  5185  16FC  0DA1               	rlf	___lwdiv@divisor+1,f
  5186  16FD  3EFF               	addlw	-1
  5187  16FE  1D03               	skipz
  5188  16FF  2EFA               	goto	u3645
  5189  1700                     l2923:
  5190  1700  3001               	movlw	1
  5191  1701  00F8               	movwf	??___lwdiv
  5192  1702  0878               	movf	??___lwdiv,w
  5193  1703  07A4               	addwf	___lwdiv@counter,f
  5194  1704                     l2925:
  5195  1704  1FA1               	btfss	___lwdiv@divisor+1,7
  5196  1705  2F07               	goto	u3651
  5197  1706  2F08               	goto	u3650
  5198  1707                     u3651:
  5199  1707  2EF9               	goto	l2921
  5200  1708                     u3650:
  5201  1708                     l2927:
  5202  1708  3001               	movlw	1
  5203  1709                     u3665:
  5204  1709  1003               	clrc
  5205  170A  0DA5               	rlf	___lwdiv@quotient,f
  5206  170B  0DA6               	rlf	___lwdiv@quotient+1,f
  5207  170C  3EFF               	addlw	-1
  5208  170D  1D03               	skipz
  5209  170E  2F09               	goto	u3665
  5210  170F  0821               	movf	___lwdiv@divisor+1,w
  5211  1710  0223               	subwf	___lwdiv@dividend+1,w
  5212  1711  1D03               	skipz
  5213  1712  2F15               	goto	u3675
  5214  1713  0820               	movf	___lwdiv@divisor,w
  5215  1714  0222               	subwf	___lwdiv@dividend,w
  5216  1715                     u3675:
  5217  1715  1C03               	skipc
  5218  1716  2F18               	goto	u3671
  5219  1717  2F19               	goto	u3670
  5220  1718                     u3671:
  5221  1718  2F20               	goto	l2933
  5222  1719                     u3670:
  5223  1719                     l2929:
  5224  1719  0820               	movf	___lwdiv@divisor,w
  5225  171A  02A2               	subwf	___lwdiv@dividend,f
  5226  171B  0821               	movf	___lwdiv@divisor+1,w
  5227  171C  1C03               	skipc
  5228  171D  03A3               	decf	___lwdiv@dividend+1,f
  5229  171E  02A3               	subwf	___lwdiv@dividend+1,f
  5230  171F                     l2931:
  5231  171F  1425               	bsf	___lwdiv@quotient,0
  5232  1720                     l2933:
  5233  1720  3001               	movlw	1
  5234  1721                     u3685:
  5235  1721  1003               	clrc
  5236  1722  0CA1               	rrf	___lwdiv@divisor+1,f
  5237  1723  0CA0               	rrf	___lwdiv@divisor,f
  5238  1724  3EFF               	addlw	-1
  5239  1725  1D03               	skipz
  5240  1726  2F21               	goto	u3685
  5241  1727                     l2935:
  5242  1727  3001               	movlw	1
  5243  1728  02A4               	subwf	___lwdiv@counter,f
  5244  1729  1D03               	btfss	3,2
  5245  172A  2F2C               	goto	u3691
  5246  172B  2F2D               	goto	u3690
  5247  172C                     u3691:
  5248  172C  2F08               	goto	l2927
  5249  172D                     u3690:
  5250  172D                     l2937:
  5251  172D  0826               	movf	___lwdiv@quotient+1,w
  5252  172E  00A1               	movwf	?___lwdiv+1
  5253  172F  0825               	movf	___lwdiv@quotient,w
  5254  1730  00A0               	movwf	?___lwdiv
  5255  1731                     l677:
  5256  1731  0008               	return
  5257  1732                     __end_of___lwdiv:
  5258                           
  5259                           	psect	text19
  5260  15CF                     __ptext19:	
  5261 ;; *************** function _eeprom_write *****************
  5262 ;; Defined at:
  5263 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\pic\__eewrite.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;  addr            1    wreg     unsigned char 
  5266 ;;  value           1    2[COMMON] unsigned char 
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;  addr            1    4[COMMON] unsigned char 
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  1    wreg      void 
  5271 ;; Registers used:
  5272 ;;		wreg, status,2, status,0
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5278 ;;      Params:         1       0       0       0       0
  5279 ;;      Locals:         1       0       0       0       0
  5280 ;;      Temps:          1       0       0       0       0
  5281 ;;      Totals:         3       0       0       0       0
  5282 ;;Total ram usage:        3 bytes
  5283 ;; Hardware stack levels used: 1
  5284 ;; Hardware stack levels required when called: 1
  5285 ;; This function calls:
  5286 ;;		Nothing
  5287 ;; This function is called by:
  5288 ;;		_main
  5289 ;;		_criasetpoint
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293  15CF                     _eeprom_write:	
  5294                           ;psect for function _eeprom_write
  5295                           
  5296                           
  5297                           ;incstack = 0
  5298                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  5299                           ;eeprom_write@addr stored from wreg
  5300  15CF  00F4               	movwf	eeprom_write@addr
  5301  15D0                     l394:	
  5302                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.36\pic\sources
      +                          \c90\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  5303                           
  5304  15D0                     l395:
  5305  15D0  1683               	bsf	3,5	;RP0=1, select bank3
  5306  15D1  1703               	bsf	3,6	;RP1=1, select bank3
  5307  15D2  188C               	btfsc	12,1	;volsfr
  5308  15D3  2DD5               	goto	u2561
  5309  15D4  2DD6               	goto	u2560
  5310  15D5                     u2561:
  5311  15D5  2DD0               	goto	l395
  5312  15D6                     u2560:
  5313  15D6                     l2269:
  5314  15D6  0874               	movf	eeprom_write@addr,w
  5315  15D7  1283               	bcf	3,5	;RP0=0, select bank2
  5316  15D8  1703               	bsf	3,6	;RP1=1, select bank2
  5317  15D9  008D               	movwf	13	;volatile
  5318  15DA  0872               	movf	eeprom_write@value,w
  5319  15DB  008C               	movwf	12	;volatile
  5320  15DC                     l2271:
  5321  15DC  303F               	movlw	63
  5322  15DD  00F3               	movwf	??_eeprom_write
  5323  15DE  0873               	movf	??_eeprom_write,w
  5324  15DF  1683               	bsf	3,5	;RP0=1, select bank3
  5325  15E0  1703               	bsf	3,6	;RP1=1, select bank3
  5326  15E1  058C               	andwf	12,f	;volsfr
  5327  15E2                     l2273:
  5328  15E2  1283               	bcf	3,5	;RP0=0, select bank0
  5329  15E3  1303               	bcf	3,6	;RP1=0, select bank0
  5330  15E4  1003               	bcf	3,0	;volatile
  5331  15E5                     l2275:
  5332  15E5  1F8B               	btfss	11,7	;volatile
  5333  15E6  2DE8               	goto	u2571
  5334  15E7  2DE9               	goto	u2570
  5335  15E8                     u2571:
  5336  15E8  2DEA               	goto	l398
  5337  15E9                     u2570:
  5338  15E9                     l2277:
  5339  15E9  1403               	bsf	3,0	;volatile
  5340  15EA                     l398:
  5341  15EA  138B               	bcf	11,7	;volatile
  5342  15EB  1683               	bsf	3,5	;RP0=1, select bank3
  5343  15EC  1703               	bsf	3,6	;RP1=1, select bank3
  5344  15ED  150C               	bsf	12,2	;volsfr
  5345  15EE                     l2279:
  5346  15EE  3055               	movlw	85
  5347  15EF  008D               	movwf	13	;volsfr
  5348  15F0  30AA               	movlw	170
  5349  15F1  008D               	movwf	13	;volsfr
  5350  15F2                     l2281:
  5351  15F2  148C               	bsf	12,1	;volsfr
  5352  15F3                     l2283:
  5353  15F3  110C               	bcf	12,2	;volsfr
  5354  15F4                     l2285:
  5355  15F4  1283               	bcf	3,5	;RP0=0, select bank0
  5356  15F5  1303               	bcf	3,6	;RP1=0, select bank0
  5357  15F6  1C03               	btfss	3,0	;volatile
  5358  15F7  2DF9               	goto	u2581
  5359  15F8  2DFA               	goto	u2580
  5360  15F9                     u2581:
  5361  15F9  2DFB               	goto	l401
  5362  15FA                     u2580:
  5363  15FA                     l2287:
  5364  15FA  178B               	bsf	11,7	;volatile
  5365  15FB                     l401:
  5366  15FB  0008               	return
  5367  15FC                     __end_of_eeprom_write:
  5368                           
  5369                           	psect	text20
  5370  0B13                     __ptext20:	
  5371 ;; *************** function ___xxtofl *****************
  5372 ;; Defined at:
  5373 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  sign            1    wreg     unsigned char 
  5376 ;;  val             4    8[BANK0 ] long 
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;  sign            1   16[BANK0 ] unsigned char 
  5379 ;;  arg             4   18[BANK0 ] unsigned long 
  5380 ;;  exp             1   17[BANK0 ] unsigned char 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  4    8[BANK0 ] unsigned char 
  5383 ;; Registers used:
  5384 ;;		wreg, status,2, status,0
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5390 ;;      Params:         0       4       0       0       0
  5391 ;;      Locals:         0       6       0       0       0
  5392 ;;      Temps:          0       4       0       0       0
  5393 ;;      Totals:         0      14       0       0       0
  5394 ;;Total ram usage:       14 bytes
  5395 ;; Hardware stack levels used: 1
  5396 ;; Hardware stack levels required when called: 1
  5397 ;; This function calls:
  5398 ;;		Nothing
  5399 ;; This function is called by:
  5400 ;;		_criasetpoint
  5401 ;;		_EtapaCinco
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405  0B13                     ___xxtofl:	
  5406                           ;psect for function ___xxtofl
  5407                           
  5408                           
  5409                           ;incstack = 0
  5410                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5411                           ;___xxtofl@sign stored from wreg
  5412  0B13  1283               	bcf	3,5	;RP0=0, select bank0
  5413  0B14  1303               	bcf	3,6	;RP1=0, select bank0
  5414  0B15  00B0               	movwf	___xxtofl@sign
  5415  0B16                     l2225:
  5416  0B16  0830               	movf	___xxtofl@sign,w
  5417  0B17  1903               	btfsc	3,2
  5418  0B18  2B1A               	goto	u2421
  5419  0B19  2B1B               	goto	u2420
  5420  0B1A                     u2421:
  5421  0B1A  2B2F               	goto	l2231
  5422  0B1B                     u2420:
  5423  0B1B                     l2227:
  5424  0B1B  1FAB               	btfss	___xxtofl@val+3,7
  5425  0B1C  2B1E               	goto	u2431
  5426  0B1D  2B1F               	goto	u2430
  5427  0B1E                     u2431:
  5428  0B1E  2B2F               	goto	l2231
  5429  0B1F                     u2430:
  5430  0B1F                     l2229:
  5431  0B1F  0928               	comf	___xxtofl@val,w
  5432  0B20  00B2               	movwf	___xxtofl@arg
  5433  0B21  0929               	comf	___xxtofl@val+1,w
  5434  0B22  00B3               	movwf	___xxtofl@arg+1
  5435  0B23  092A               	comf	___xxtofl@val+2,w
  5436  0B24  00B4               	movwf	___xxtofl@arg+2
  5437  0B25  092B               	comf	___xxtofl@val+3,w
  5438  0B26  00B5               	movwf	___xxtofl@arg+3
  5439  0B27  0AB2               	incf	___xxtofl@arg,f
  5440  0B28  1903               	skipnz
  5441  0B29  0AB3               	incf	___xxtofl@arg+1,f
  5442  0B2A  1903               	skipnz
  5443  0B2B  0AB4               	incf	___xxtofl@arg+2,f
  5444  0B2C  1903               	skipnz
  5445  0B2D  0AB5               	incf	___xxtofl@arg+3,f
  5446  0B2E  2B37               	goto	l838
  5447  0B2F                     l2231:
  5448  0B2F  082B               	movf	___xxtofl@val+3,w
  5449  0B30  00B5               	movwf	___xxtofl@arg+3
  5450  0B31  082A               	movf	___xxtofl@val+2,w
  5451  0B32  00B4               	movwf	___xxtofl@arg+2
  5452  0B33  0829               	movf	___xxtofl@val+1,w
  5453  0B34  00B3               	movwf	___xxtofl@arg+1
  5454  0B35  0828               	movf	___xxtofl@val,w
  5455  0B36  00B2               	movwf	___xxtofl@arg
  5456  0B37                     l838:
  5457  0B37  082B               	movf	___xxtofl@val+3,w
  5458  0B38  042A               	iorwf	___xxtofl@val+2,w
  5459  0B39  0429               	iorwf	___xxtofl@val+1,w
  5460  0B3A  0428               	iorwf	___xxtofl@val,w
  5461  0B3B  1D03               	skipz
  5462  0B3C  2B3E               	goto	u2441
  5463  0B3D  2B3F               	goto	u2440
  5464  0B3E                     u2441:
  5465  0B3E  2B48               	goto	l2237
  5466  0B3F                     u2440:
  5467  0B3F                     l2233:
  5468  0B3F  3000               	movlw	0
  5469  0B40  00AB               	movwf	?___xxtofl+3
  5470  0B41  3000               	movlw	0
  5471  0B42  00AA               	movwf	?___xxtofl+2
  5472  0B43  3000               	movlw	0
  5473  0B44  00A9               	movwf	?___xxtofl+1
  5474  0B45  3000               	movlw	0
  5475  0B46  00A8               	movwf	?___xxtofl
  5476  0B47  2BCE               	goto	l840
  5477  0B48                     l2237:
  5478  0B48  3096               	movlw	150
  5479  0B49  00AC               	movwf	??___xxtofl
  5480  0B4A  082C               	movf	??___xxtofl,w
  5481  0B4B  00B1               	movwf	___xxtofl@exp
  5482  0B4C  2B5A               	goto	l2241
  5483  0B4D                     l2239:
  5484  0B4D  3001               	movlw	1
  5485  0B4E  00AC               	movwf	??___xxtofl
  5486  0B4F  082C               	movf	??___xxtofl,w
  5487  0B50  07B1               	addwf	___xxtofl@exp,f
  5488  0B51  3001               	movlw	1
  5489  0B52                     u2455:
  5490  0B52  1003               	clrc
  5491  0B53  0CB5               	rrf	___xxtofl@arg+3,f
  5492  0B54  0CB4               	rrf	___xxtofl@arg+2,f
  5493  0B55  0CB3               	rrf	___xxtofl@arg+1,f
  5494  0B56  0CB2               	rrf	___xxtofl@arg,f
  5495  0B57  3EFF               	addlw	-1
  5496  0B58  1D03               	skipz
  5497  0B59  2B52               	goto	u2455
  5498  0B5A                     l2241:
  5499  0B5A  30FE               	movlw	254
  5500  0B5B  0535               	andwf	___xxtofl@arg+3,w
  5501  0B5C  1D03               	btfss	3,2
  5502  0B5D  2B5F               	goto	u2461
  5503  0B5E  2B60               	goto	u2460
  5504  0B5F                     u2461:
  5505  0B5F  2B4D               	goto	l2239
  5506  0B60                     u2460:
  5507  0B60  2B7C               	goto	l844
  5508  0B61                     l2243:
  5509  0B61  3001               	movlw	1
  5510  0B62  00AC               	movwf	??___xxtofl
  5511  0B63  082C               	movf	??___xxtofl,w
  5512  0B64  07B1               	addwf	___xxtofl@exp,f
  5513  0B65                     l2245:
  5514  0B65  3001               	movlw	1
  5515  0B66  07B2               	addwf	___xxtofl@arg,f
  5516  0B67  3000               	movlw	0
  5517  0B68  1803               	skipnc
  5518  0B69  3001               	movlw	1
  5519  0B6A  07B3               	addwf	___xxtofl@arg+1,f
  5520  0B6B  3000               	movlw	0
  5521  0B6C  1803               	skipnc
  5522  0B6D  3001               	movlw	1
  5523  0B6E  07B4               	addwf	___xxtofl@arg+2,f
  5524  0B6F  3000               	movlw	0
  5525  0B70  1803               	skipnc
  5526  0B71  3001               	movlw	1
  5527  0B72  07B5               	addwf	___xxtofl@arg+3,f
  5528  0B73                     l2247:
  5529  0B73  3001               	movlw	1
  5530  0B74                     u2475:
  5531  0B74  1003               	clrc
  5532  0B75  0CB5               	rrf	___xxtofl@arg+3,f
  5533  0B76  0CB4               	rrf	___xxtofl@arg+2,f
  5534  0B77  0CB3               	rrf	___xxtofl@arg+1,f
  5535  0B78  0CB2               	rrf	___xxtofl@arg,f
  5536  0B79  3EFF               	addlw	-1
  5537  0B7A  1D03               	skipz
  5538  0B7B  2B74               	goto	u2475
  5539  0B7C                     l844:
  5540  0B7C  30FF               	movlw	255
  5541  0B7D  0535               	andwf	___xxtofl@arg+3,w
  5542  0B7E  1D03               	btfss	3,2
  5543  0B7F  2B81               	goto	u2481
  5544  0B80  2B82               	goto	u2480
  5545  0B81                     u2481:
  5546  0B81  2B61               	goto	l2243
  5547  0B82                     u2480:
  5548  0B82  2B8E               	goto	l2251
  5549  0B83                     l2249:
  5550  0B83  3001               	movlw	1
  5551  0B84  02B1               	subwf	___xxtofl@exp,f
  5552  0B85  3001               	movlw	1
  5553  0B86  00AC               	movwf	??___xxtofl
  5554  0B87                     u2495:
  5555  0B87  1003               	clrc
  5556  0B88  0DB2               	rlf	___xxtofl@arg,f
  5557  0B89  0DB3               	rlf	___xxtofl@arg+1,f
  5558  0B8A  0DB4               	rlf	___xxtofl@arg+2,f
  5559  0B8B  0DB5               	rlf	___xxtofl@arg+3,f
  5560  0B8C  0BAC               	decfsz	??___xxtofl,f
  5561  0B8D  2B87               	goto	u2495
  5562  0B8E                     l2251:
  5563  0B8E  1BB4               	btfsc	___xxtofl@arg+2,7
  5564  0B8F  2B91               	goto	u2501
  5565  0B90  2B92               	goto	u2500
  5566  0B91                     u2501:
  5567  0B91  2B98               	goto	l851
  5568  0B92                     u2500:
  5569  0B92                     l2253:
  5570  0B92  3002               	movlw	2
  5571  0B93  0231               	subwf	___xxtofl@exp,w
  5572  0B94  1803               	skipnc
  5573  0B95  2B97               	goto	u2511
  5574  0B96  2B98               	goto	u2510
  5575  0B97                     u2511:
  5576  0B97  2B83               	goto	l2249
  5577  0B98                     u2510:
  5578  0B98                     l851:
  5579  0B98  1831               	btfsc	___xxtofl@exp,0
  5580  0B99  2B9B               	goto	u2521
  5581  0B9A  2B9C               	goto	u2520
  5582  0B9B                     u2521:
  5583  0B9B  2BA4               	goto	l852
  5584  0B9C                     u2520:
  5585  0B9C                     l2255:
  5586  0B9C  30FF               	movlw	255
  5587  0B9D  05B2               	andwf	___xxtofl@arg,f
  5588  0B9E  30FF               	movlw	255
  5589  0B9F  05B3               	andwf	___xxtofl@arg+1,f
  5590  0BA0  307F               	movlw	127
  5591  0BA1  05B4               	andwf	___xxtofl@arg+2,f
  5592  0BA2  30FF               	movlw	255
  5593  0BA3  05B5               	andwf	___xxtofl@arg+3,f
  5594  0BA4                     l852:
  5595  0BA4  1003               	clrc
  5596  0BA5  0CB1               	rrf	___xxtofl@exp,f
  5597  0BA6                     l2257:
  5598  0BA6  0831               	movf	___xxtofl@exp,w
  5599  0BA7  00AC               	movwf	??___xxtofl
  5600  0BA8  01AD               	clrf	??___xxtofl+1
  5601  0BA9  01AE               	clrf	??___xxtofl+2
  5602  0BAA  01AF               	clrf	??___xxtofl+3
  5603  0BAB  3018               	movlw	24
  5604  0BAC                     u2535:
  5605  0BAC  1003               	clrc
  5606  0BAD  0DAC               	rlf	??___xxtofl,f
  5607  0BAE  0DAD               	rlf	??___xxtofl+1,f
  5608  0BAF  0DAE               	rlf	??___xxtofl+2,f
  5609  0BB0  0DAF               	rlf	??___xxtofl+3,f
  5610  0BB1                     u2530:
  5611  0BB1  3EFF               	addlw	-1
  5612  0BB2  1D03               	skipz
  5613  0BB3  2BAC               	goto	u2535
  5614  0BB4  082C               	movf	??___xxtofl,w
  5615  0BB5  04B2               	iorwf	___xxtofl@arg,f
  5616  0BB6  082D               	movf	??___xxtofl+1,w
  5617  0BB7  04B3               	iorwf	___xxtofl@arg+1,f
  5618  0BB8  082E               	movf	??___xxtofl+2,w
  5619  0BB9  04B4               	iorwf	___xxtofl@arg+2,f
  5620  0BBA  082F               	movf	??___xxtofl+3,w
  5621  0BBB  04B5               	iorwf	___xxtofl@arg+3,f
  5622  0BBC                     l2259:
  5623  0BBC  0830               	movf	___xxtofl@sign,w
  5624  0BBD  1903               	btfsc	3,2
  5625  0BBE  2BC0               	goto	u2541
  5626  0BBF  2BC1               	goto	u2540
  5627  0BC0                     u2541:
  5628  0BC0  2BC6               	goto	l2265
  5629  0BC1                     u2540:
  5630  0BC1                     l2261:
  5631  0BC1  1FAB               	btfss	___xxtofl@val+3,7
  5632  0BC2  2BC4               	goto	u2551
  5633  0BC3  2BC5               	goto	u2550
  5634  0BC4                     u2551:
  5635  0BC4  2BC6               	goto	l2265
  5636  0BC5                     u2550:
  5637  0BC5                     l2263:
  5638  0BC5  17B5               	bsf	___xxtofl@arg+3,7
  5639  0BC6                     l2265:
  5640  0BC6  0835               	movf	___xxtofl@arg+3,w
  5641  0BC7  00AB               	movwf	?___xxtofl+3
  5642  0BC8  0834               	movf	___xxtofl@arg+2,w
  5643  0BC9  00AA               	movwf	?___xxtofl+2
  5644  0BCA  0833               	movf	___xxtofl@arg+1,w
  5645  0BCB  00A9               	movwf	?___xxtofl+1
  5646  0BCC  0832               	movf	___xxtofl@arg,w
  5647  0BCD  00A8               	movwf	?___xxtofl
  5648  0BCE                     l840:
  5649  0BCE  0008               	return
  5650  0BCF                     __end_of___xxtofl:
  5651                           
  5652                           	psect	text21
  5653  0762                     __ptext21:	
  5654 ;; *************** function ___fltol *****************
  5655 ;; Defined at:
  5656 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  f1              4   74[BANK0 ] unsigned char 
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;  exp1            1   79[BANK0 ] unsigned char 
  5661 ;;  sign1           1   78[BANK0 ] unsigned char 
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  4   74[BANK0 ] long 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2, status,0
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5671 ;;      Params:         0       4       0       0       0
  5672 ;;      Locals:         0       2       0       0       0
  5673 ;;      Temps:          0       0       5       0       0
  5674 ;;      Totals:         0       6       5       0       0
  5675 ;;Total ram usage:       11 bytes
  5676 ;; Hardware stack levels used: 1
  5677 ;; Hardware stack levels required when called: 1
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_criasetpoint
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685  0762                     ___fltol:	
  5686                           ;psect for function ___fltol
  5687                           
  5688  0762                     l2383:	
  5689                           ;incstack = 0
  5690                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5691                           
  5692  0762  1003               	clrc
  5693  0763  1283               	bcf	3,5	;RP0=0, select bank0
  5694  0764  1303               	bcf	3,6	;RP1=0, select bank0
  5695  0765  0D6C               	rlf	___fltol@f1+2,w
  5696  0766  0D6D               	rlf	___fltol@f1+3,w
  5697  0767  1683               	bsf	3,5	;RP0=1, select bank1
  5698  0768  1303               	bcf	3,6	;RP1=0, select bank1
  5699  0769  00A0               	movwf	??___fltol^(0+128)
  5700  076A  0820               	movf	??___fltol^(0+128),w
  5701  076B  1283               	bcf	3,5	;RP0=0, select bank0
  5702  076C  1303               	bcf	3,6	;RP1=0, select bank0
  5703  076D  00EF               	movwf	___fltol@exp1
  5704  076E  086F               	movf	___fltol@exp1,w
  5705  076F  1D03               	btfss	3,2
  5706  0770  2F72               	goto	u2751
  5707  0771  2F73               	goto	u2750
  5708  0772                     u2751:
  5709  0772  2F7C               	goto	l2389
  5710  0773                     u2750:
  5711  0773                     l2385:
  5712  0773  3000               	movlw	0
  5713  0774  00ED               	movwf	?___fltol+3
  5714  0775  3000               	movlw	0
  5715  0776  00EC               	movwf	?___fltol+2
  5716  0777  3000               	movlw	0
  5717  0778  00EB               	movwf	?___fltol+1
  5718  0779  3000               	movlw	0
  5719  077A  00EA               	movwf	?___fltol
  5720  077B  2FFD               	goto	l591
  5721  077C                     l2389:
  5722  077C  086A               	movf	___fltol@f1,w
  5723  077D  1683               	bsf	3,5	;RP0=1, select bank1
  5724  077E  1303               	bcf	3,6	;RP1=0, select bank1
  5725  077F  00A0               	movwf	??___fltol^(0+128)
  5726  0780  1283               	bcf	3,5	;RP0=0, select bank0
  5727  0781  1303               	bcf	3,6	;RP1=0, select bank0
  5728  0782  086B               	movf	___fltol@f1+1,w
  5729  0783  1683               	bsf	3,5	;RP0=1, select bank1
  5730  0784  1303               	bcf	3,6	;RP1=0, select bank1
  5731  0785  00A1               	movwf	(??___fltol^(0+128)+1)
  5732  0786  1283               	bcf	3,5	;RP0=0, select bank0
  5733  0787  1303               	bcf	3,6	;RP1=0, select bank0
  5734  0788  086C               	movf	___fltol@f1+2,w
  5735  0789  1683               	bsf	3,5	;RP0=1, select bank1
  5736  078A  1303               	bcf	3,6	;RP1=0, select bank1
  5737  078B  00A2               	movwf	(??___fltol^(0+128)+2)
  5738  078C  1283               	bcf	3,5	;RP0=0, select bank0
  5739  078D  1303               	bcf	3,6	;RP1=0, select bank0
  5740  078E  086D               	movf	___fltol@f1+3,w
  5741  078F  1683               	bsf	3,5	;RP0=1, select bank1
  5742  0790  1303               	bcf	3,6	;RP1=0, select bank1
  5743  0791  00A3               	movwf	(??___fltol^(0+128)+3)
  5744  0792  301F               	movlw	31
  5745  0793                     u2765:
  5746  0793  1003               	clrc
  5747  0794  0CA3               	rrf	(??___fltol^(0+128)+3),f
  5748  0795  0CA2               	rrf	(??___fltol^(0+128)+2),f
  5749  0796  0CA1               	rrf	(??___fltol^(0+128)+1),f
  5750  0797  0CA0               	rrf	??___fltol^(0+128),f
  5751  0798                     u2760:
  5752  0798  3EFF               	addlw	-1
  5753  0799  1D03               	skipz
  5754  079A  2F93               	goto	u2765
  5755  079B  0820               	movf	??___fltol^(0+128),w
  5756  079C  00A4               	movwf	(??___fltol+4)^(0+128)
  5757  079D  0824               	movf	(??___fltol+4)^(0+128),w
  5758  079E  1283               	bcf	3,5	;RP0=0, select bank0
  5759  079F  1303               	bcf	3,6	;RP1=0, select bank0
  5760  07A0  00EE               	movwf	___fltol@sign1
  5761  07A1                     l2391:
  5762  07A1  17EC               	bsf	___fltol@f1+2,7
  5763  07A2                     l2393:
  5764  07A2  30FF               	movlw	255
  5765  07A3  05EA               	andwf	___fltol@f1,f
  5766  07A4  30FF               	movlw	255
  5767  07A5  05EB               	andwf	___fltol@f1+1,f
  5768  07A6  30FF               	movlw	255
  5769  07A7  05EC               	andwf	___fltol@f1+2,f
  5770  07A8  3000               	movlw	0
  5771  07A9  05ED               	andwf	___fltol@f1+3,f
  5772  07AA                     l2395:
  5773  07AA  3096               	movlw	150
  5774  07AB  02EF               	subwf	___fltol@exp1,f
  5775  07AC                     l2397:
  5776  07AC  1FEF               	btfss	___fltol@exp1,7
  5777  07AD  2FAF               	goto	u2771
  5778  07AE  2FB0               	goto	u2770
  5779  07AF                     u2771:
  5780  07AF  2FCE               	goto	l2407
  5781  07B0                     u2770:
  5782  07B0                     l2399:
  5783  07B0  086F               	movf	___fltol@exp1,w
  5784  07B1  3A80               	xorlw	128
  5785  07B2  3E97               	addlw	151
  5786  07B3  1803               	skipnc
  5787  07B4  2FB6               	goto	u2781
  5788  07B5  2FB7               	goto	u2780
  5789  07B6                     u2781:
  5790  07B6  2FB8               	goto	l2405
  5791  07B7                     u2780:
  5792  07B7  2F73               	goto	l2385
  5793  07B8                     l2405:
  5794  07B8  3001               	movlw	1
  5795  07B9                     u2795:
  5796  07B9  1003               	clrc
  5797  07BA  0CED               	rrf	___fltol@f1+3,f
  5798  07BB  0CEC               	rrf	___fltol@f1+2,f
  5799  07BC  0CEB               	rrf	___fltol@f1+1,f
  5800  07BD  0CEA               	rrf	___fltol@f1,f
  5801  07BE  3EFF               	addlw	-1
  5802  07BF  1D03               	skipz
  5803  07C0  2FB9               	goto	u2795
  5804  07C1  3001               	movlw	1
  5805  07C2  1683               	bsf	3,5	;RP0=1, select bank1
  5806  07C3  1303               	bcf	3,6	;RP1=0, select bank1
  5807  07C4  00A0               	movwf	??___fltol^(0+128)
  5808  07C5  0820               	movf	??___fltol^(0+128),w
  5809  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  5810  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  5811  07C8  07EF               	addwf	___fltol@exp1,f
  5812  07C9  1D03               	btfss	3,2
  5813  07CA  2FCC               	goto	u2801
  5814  07CB  2FCD               	goto	u2800
  5815  07CC                     u2801:
  5816  07CC  2FB8               	goto	l2405
  5817  07CD                     u2800:
  5818  07CD  2FED               	goto	l2415
  5819  07CE                     l2407:
  5820  07CE  3020               	movlw	32
  5821  07CF  026F               	subwf	___fltol@exp1,w
  5822  07D0  1C03               	skipc
  5823  07D1  2FD3               	goto	u2811
  5824  07D2  2FD4               	goto	u2810
  5825  07D3                     u2811:
  5826  07D3  2FE8               	goto	l598
  5827  07D4                     u2810:
  5828  07D4  2F73               	goto	l2385
  5829  07D5                     l2413:
  5830  07D5  3001               	movlw	1
  5831  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  5832  07D7  1303               	bcf	3,6	;RP1=0, select bank1
  5833  07D8  00A0               	movwf	??___fltol^(0+128)
  5834  07D9                     u2825:
  5835  07D9  1003               	clrc
  5836  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  5837  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  5838  07DC  0DEA               	rlf	___fltol@f1,f
  5839  07DD  0DEB               	rlf	___fltol@f1+1,f
  5840  07DE  0DEC               	rlf	___fltol@f1+2,f
  5841  07DF  0DED               	rlf	___fltol@f1+3,f
  5842  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  5843  07E1  1303               	bcf	3,6	;RP1=0, select bank1
  5844  07E2  0BA0               	decfsz	??___fltol^(0+128),f
  5845  07E3  2FD9               	goto	u2825
  5846  07E4  3001               	movlw	1
  5847  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  5848  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  5849  07E7  02EF               	subwf	___fltol@exp1,f
  5850  07E8                     l598:
  5851  07E8  086F               	movf	___fltol@exp1,w
  5852  07E9  1D03               	btfss	3,2
  5853  07EA  2FEC               	goto	u2831
  5854  07EB  2FED               	goto	u2830
  5855  07EC                     u2831:
  5856  07EC  2FD5               	goto	l2413
  5857  07ED                     u2830:
  5858  07ED                     l2415:
  5859  07ED  086E               	movf	___fltol@sign1,w
  5860  07EE  1903               	btfsc	3,2
  5861  07EF  2FF1               	goto	u2841
  5862  07F0  2FF2               	goto	u2840
  5863  07F1                     u2841:
  5864  07F1  2FFD               	goto	l601
  5865  07F2                     u2840:
  5866  07F2                     l2417:
  5867  07F2  09EA               	comf	___fltol@f1,f
  5868  07F3  09EB               	comf	___fltol@f1+1,f
  5869  07F4  09EC               	comf	___fltol@f1+2,f
  5870  07F5  09ED               	comf	___fltol@f1+3,f
  5871  07F6  0AEA               	incf	___fltol@f1,f
  5872  07F7  1903               	skipnz
  5873  07F8  0AEB               	incf	___fltol@f1+1,f
  5874  07F9  1903               	skipnz
  5875  07FA  0AEC               	incf	___fltol@f1+2,f
  5876  07FB  1903               	skipnz
  5877  07FC  0AED               	incf	___fltol@f1+3,f
  5878  07FD                     l601:
  5879  07FD                     l591:
  5880  07FD  0008               	return
  5881  07FE                     __end_of___fltol:
  5882                           
  5883                           	psect	text22
  5884  0401                     __ptext22:	
  5885 ;; *************** function ___flmul *****************
  5886 ;; Defined at:
  5887 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;  b               4   48[BANK0 ] long 
  5890 ;;  a               4   52[BANK0 ] long 
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;  prod            4   68[BANK0 ] struct .
  5893 ;;  grs             4   63[BANK0 ] unsigned long 
  5894 ;;  temp            2   72[BANK0 ] struct .
  5895 ;;  bexp            1   67[BANK0 ] unsigned char 
  5896 ;;  aexp            1   62[BANK0 ] unsigned char 
  5897 ;;  sign            1   61[BANK0 ] unsigned char 
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  4   48[BANK0 ] unsigned char 
  5900 ;; Registers used:
  5901 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5907 ;;      Params:         0       8       0       0       0
  5908 ;;      Locals:         0      13       0       0       0
  5909 ;;      Temps:          0       5       0       0       0
  5910 ;;      Totals:         0      26       0       0       0
  5911 ;;Total ram usage:       26 bytes
  5912 ;; Hardware stack levels used: 1
  5913 ;; Hardware stack levels required when called: 2
  5914 ;; This function calls:
  5915 ;;		__Umul8_16
  5916 ;; This function is called by:
  5917 ;;		_criasetpoint
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921  0401                     ___flmul:	
  5922                           ;psect for function ___flmul
  5923                           
  5924  0401                     l3065:	
  5925                           ;incstack = 0
  5926                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5927                           
  5928  0401  1283               	bcf	3,5	;RP0=0, select bank0
  5929  0402  1303               	bcf	3,6	;RP1=0, select bank0
  5930  0403  0853               	movf	___flmul@b+3,w
  5931  0404  3980               	andlw	128
  5932  0405  00D8               	movwf	??___flmul
  5933  0406  0858               	movf	??___flmul,w
  5934  0407  00DD               	movwf	___flmul@sign
  5935  0408                     l3067:
  5936  0408  0853               	movf	___flmul@b+3,w
  5937  0409  00D8               	movwf	??___flmul
  5938  040A  0758               	addwf	??___flmul,w
  5939  040B  00D9               	movwf	??___flmul+1
  5940  040C  0859               	movf	??___flmul+1,w
  5941  040D  00E3               	movwf	___flmul@bexp
  5942  040E                     l3069:
  5943  040E  1FD2               	btfss	___flmul@b+2,7
  5944  040F  2C11               	goto	u3881
  5945  0410  2C12               	goto	u3880
  5946  0411                     u3881:
  5947  0411  2C13               	goto	l3073
  5948  0412                     u3880:
  5949  0412                     l3071:
  5950  0412  1463               	bsf	___flmul@bexp,0
  5951  0413                     l3073:
  5952  0413  0863               	movf	___flmul@bexp,w
  5953  0414  1903               	btfsc	3,2
  5954  0415  2C17               	goto	u3891
  5955  0416  2C18               	goto	u3890
  5956  0417                     u3891:
  5957  0417  2C27               	goto	l3081
  5958  0418                     u3890:
  5959  0418                     l3075:
  5960  0418  0A63               	incf	___flmul@bexp,w
  5961  0419  1D03               	btfss	3,2
  5962  041A  2C1C               	goto	u3901
  5963  041B  2C1D               	goto	u3900
  5964  041C                     u3901:
  5965  041C  2C25               	goto	l3079
  5966  041D                     u3900:
  5967  041D                     l3077:
  5968  041D  3000               	movlw	0
  5969  041E  00D3               	movwf	___flmul@b+3
  5970  041F  3000               	movlw	0
  5971  0420  00D2               	movwf	___flmul@b+2
  5972  0421  3000               	movlw	0
  5973  0422  00D1               	movwf	___flmul@b+1
  5974  0423  3000               	movlw	0
  5975  0424  00D0               	movwf	___flmul@b
  5976  0425                     l3079:
  5977  0425  17D2               	bsf	___flmul@b+2,7
  5978  0426  2C2F               	goto	l3083
  5979  0427                     l3081:
  5980  0427  3000               	movlw	0
  5981  0428  00D3               	movwf	___flmul@b+3
  5982  0429  3000               	movlw	0
  5983  042A  00D2               	movwf	___flmul@b+2
  5984  042B  3000               	movlw	0
  5985  042C  00D1               	movwf	___flmul@b+1
  5986  042D  3000               	movlw	0
  5987  042E  00D0               	movwf	___flmul@b
  5988  042F                     l3083:
  5989  042F  0857               	movf	___flmul@a+3,w
  5990  0430  3980               	andlw	128
  5991  0431  00D8               	movwf	??___flmul
  5992  0432  0858               	movf	??___flmul,w
  5993  0433  06DD               	xorwf	___flmul@sign,f
  5994  0434                     l3085:
  5995  0434  0857               	movf	___flmul@a+3,w
  5996  0435  00D8               	movwf	??___flmul
  5997  0436  0758               	addwf	??___flmul,w
  5998  0437  00D9               	movwf	??___flmul+1
  5999  0438  0859               	movf	??___flmul+1,w
  6000  0439  00DE               	movwf	___flmul@aexp
  6001  043A                     l3087:
  6002  043A  1FD6               	btfss	___flmul@a+2,7
  6003  043B  2C3D               	goto	u3911
  6004  043C  2C3E               	goto	u3910
  6005  043D                     u3911:
  6006  043D  2C3F               	goto	l3091
  6007  043E                     u3910:
  6008  043E                     l3089:
  6009  043E  145E               	bsf	___flmul@aexp,0
  6010  043F                     l3091:
  6011  043F  085E               	movf	___flmul@aexp,w
  6012  0440  1903               	btfsc	3,2
  6013  0441  2C43               	goto	u3921
  6014  0442  2C44               	goto	u3920
  6015  0443                     u3921:
  6016  0443  2C53               	goto	l3099
  6017  0444                     u3920:
  6018  0444                     l3093:
  6019  0444  0A5E               	incf	___flmul@aexp,w
  6020  0445  1D03               	btfss	3,2
  6021  0446  2C48               	goto	u3931
  6022  0447  2C49               	goto	u3930
  6023  0448                     u3931:
  6024  0448  2C51               	goto	l3097
  6025  0449                     u3930:
  6026  0449                     l3095:
  6027  0449  3000               	movlw	0
  6028  044A  00D7               	movwf	___flmul@a+3
  6029  044B  3000               	movlw	0
  6030  044C  00D6               	movwf	___flmul@a+2
  6031  044D  3000               	movlw	0
  6032  044E  00D5               	movwf	___flmul@a+1
  6033  044F  3000               	movlw	0
  6034  0450  00D4               	movwf	___flmul@a
  6035  0451                     l3097:
  6036  0451  17D6               	bsf	___flmul@a+2,7
  6037  0452  2C5B               	goto	l3101
  6038  0453                     l3099:
  6039  0453  3000               	movlw	0
  6040  0454  00D7               	movwf	___flmul@a+3
  6041  0455  3000               	movlw	0
  6042  0456  00D6               	movwf	___flmul@a+2
  6043  0457  3000               	movlw	0
  6044  0458  00D5               	movwf	___flmul@a+1
  6045  0459  3000               	movlw	0
  6046  045A  00D4               	movwf	___flmul@a
  6047  045B                     l3101:
  6048  045B  085E               	movf	___flmul@aexp,w
  6049  045C  1903               	btfsc	3,2
  6050  045D  2C5F               	goto	u3941
  6051  045E  2C60               	goto	u3940
  6052  045F                     u3941:
  6053  045F  2C65               	goto	l3105
  6054  0460                     u3940:
  6055  0460                     l3103:
  6056  0460  0863               	movf	___flmul@bexp,w
  6057  0461  1D03               	btfss	3,2
  6058  0462  2C64               	goto	u3951
  6059  0463  2C65               	goto	u3950
  6060  0464                     u3951:
  6061  0464  2C6E               	goto	l3109
  6062  0465                     u3950:
  6063  0465                     l3105:
  6064  0465  3000               	movlw	0
  6065  0466  00D3               	movwf	?___flmul+3
  6066  0467  3000               	movlw	0
  6067  0468  00D2               	movwf	?___flmul+2
  6068  0469  3000               	movlw	0
  6069  046A  00D1               	movwf	?___flmul+1
  6070  046B  3000               	movlw	0
  6071  046C  00D0               	movwf	?___flmul
  6072  046D  2F61               	goto	l794
  6073  046E                     l3109:
  6074  046E  0850               	movf	___flmul@b,w
  6075  046F  00D8               	movwf	??___flmul
  6076  0470  0858               	movf	??___flmul,w
  6077  0471  00F2               	movwf	__Umul8_16@multiplicand
  6078  0472  0856               	movf	___flmul@a+2,w
  6079  0473  160A  118A  257B  120A  118A  	fcall	__Umul8_16
  6080  0478  0873               	movf	?__Umul8_16+1,w
  6081  0479  1283               	bcf	3,5	;RP0=0, select bank0
  6082  047A  1303               	bcf	3,6	;RP1=0, select bank0
  6083  047B  00E9               	movwf	___flmul@temp+1
  6084  047C  0872               	movf	?__Umul8_16,w
  6085  047D  00E8               	movwf	___flmul@temp
  6086  047E                     l3111:
  6087  047E  0868               	movf	___flmul@temp,w
  6088  047F  00D8               	movwf	??___flmul
  6089  0480  01D9               	clrf	??___flmul+1
  6090  0481  01DA               	clrf	??___flmul+2
  6091  0482  01DB               	clrf	??___flmul+3
  6092  0483  085B               	movf	??___flmul+3,w
  6093  0484  00E2               	movwf	___flmul@grs+3
  6094  0485  085A               	movf	??___flmul+2,w
  6095  0486  00E1               	movwf	___flmul@grs+2
  6096  0487  0859               	movf	??___flmul+1,w
  6097  0488  00E0               	movwf	___flmul@grs+1
  6098  0489  0858               	movf	??___flmul,w
  6099  048A  00DF               	movwf	___flmul@grs
  6100  048B                     l3113:
  6101  048B  0869               	movf	___flmul@temp+1,w
  6102  048C  00D8               	movwf	??___flmul
  6103  048D  01D9               	clrf	??___flmul+1
  6104  048E  01DA               	clrf	??___flmul+2
  6105  048F  01DB               	clrf	??___flmul+3
  6106  0490  085B               	movf	??___flmul+3,w
  6107  0491  00E7               	movwf	___flmul@prod+3
  6108  0492  085A               	movf	??___flmul+2,w
  6109  0493  00E6               	movwf	___flmul@prod+2
  6110  0494  0859               	movf	??___flmul+1,w
  6111  0495  00E5               	movwf	___flmul@prod+1
  6112  0496  0858               	movf	??___flmul,w
  6113  0497  00E4               	movwf	___flmul@prod
  6114  0498  0851               	movf	___flmul@b+1,w
  6115  0499  00D8               	movwf	??___flmul
  6116  049A  0858               	movf	??___flmul,w
  6117  049B  00F2               	movwf	__Umul8_16@multiplicand
  6118  049C  0855               	movf	___flmul@a+1,w
  6119  049D  160A  118A  257B  120A  118A  	fcall	__Umul8_16
  6120  04A2  0873               	movf	?__Umul8_16+1,w
  6121  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  6122  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  6123  04A5  00E9               	movwf	___flmul@temp+1
  6124  04A6  0872               	movf	?__Umul8_16,w
  6125  04A7  00E8               	movwf	___flmul@temp
  6126  04A8                     l3115:
  6127  04A8  0868               	movf	___flmul@temp,w
  6128  04A9  00D8               	movwf	??___flmul
  6129  04AA  01D9               	clrf	??___flmul+1
  6130  04AB  01DA               	clrf	??___flmul+2
  6131  04AC  01DB               	clrf	??___flmul+3
  6132  04AD  0858               	movf	??___flmul,w
  6133  04AE  07DF               	addwf	___flmul@grs,f
  6134  04AF  0859               	movf	??___flmul+1,w
  6135  04B0  1103               	clrz
  6136  04B1  1803               	skipnc
  6137  04B2  3E01               	addlw	1
  6138  04B3  1903               	skipnz
  6139  04B4  2CB6               	goto	u3961
  6140  04B5  07E0               	addwf	___flmul@grs+1,f
  6141  04B6                     u3961:
  6142  04B6  085A               	movf	??___flmul+2,w
  6143  04B7  1103               	clrz
  6144  04B8  1803               	skipnc
  6145  04B9  3E01               	addlw	1
  6146  04BA  1903               	skipnz
  6147  04BB  2CBD               	goto	u3962
  6148  04BC  07E1               	addwf	___flmul@grs+2,f
  6149  04BD                     u3962:
  6150  04BD  085B               	movf	??___flmul+3,w
  6151  04BE  1103               	clrz
  6152  04BF  1803               	skipnc
  6153  04C0  3E01               	addlw	1
  6154  04C1  1903               	skipnz
  6155  04C2  2CC4               	goto	u3963
  6156  04C3  07E2               	addwf	___flmul@grs+3,f
  6157  04C4                     u3963:
  6158  04C4                     l3117:
  6159  04C4  0869               	movf	___flmul@temp+1,w
  6160  04C5  00D8               	movwf	??___flmul
  6161  04C6  01D9               	clrf	??___flmul+1
  6162  04C7  01DA               	clrf	??___flmul+2
  6163  04C8  01DB               	clrf	??___flmul+3
  6164  04C9  0858               	movf	??___flmul,w
  6165  04CA  07E4               	addwf	___flmul@prod,f
  6166  04CB  0859               	movf	??___flmul+1,w
  6167  04CC  1103               	clrz
  6168  04CD  1803               	skipnc
  6169  04CE  3E01               	addlw	1
  6170  04CF  1903               	skipnz
  6171  04D0  2CD2               	goto	u3971
  6172  04D1  07E5               	addwf	___flmul@prod+1,f
  6173  04D2                     u3971:
  6174  04D2  085A               	movf	??___flmul+2,w
  6175  04D3  1103               	clrz
  6176  04D4  1803               	skipnc
  6177  04D5  3E01               	addlw	1
  6178  04D6  1903               	skipnz
  6179  04D7  2CD9               	goto	u3972
  6180  04D8  07E6               	addwf	___flmul@prod+2,f
  6181  04D9                     u3972:
  6182  04D9  085B               	movf	??___flmul+3,w
  6183  04DA  1103               	clrz
  6184  04DB  1803               	skipnc
  6185  04DC  3E01               	addlw	1
  6186  04DD  1903               	skipnz
  6187  04DE  2CE0               	goto	u3973
  6188  04DF  07E7               	addwf	___flmul@prod+3,f
  6189  04E0                     u3973:
  6190  04E0  0852               	movf	___flmul@b+2,w
  6191  04E1  00D8               	movwf	??___flmul
  6192  04E2  0858               	movf	??___flmul,w
  6193  04E3  00F2               	movwf	__Umul8_16@multiplicand
  6194  04E4  0854               	movf	___flmul@a,w
  6195  04E5  160A  118A  257B  120A  118A  	fcall	__Umul8_16
  6196  04EA  0873               	movf	?__Umul8_16+1,w
  6197  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  6198  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  6199  04ED  00E9               	movwf	___flmul@temp+1
  6200  04EE  0872               	movf	?__Umul8_16,w
  6201  04EF  00E8               	movwf	___flmul@temp
  6202  04F0                     l3119:
  6203  04F0  0868               	movf	___flmul@temp,w
  6204  04F1  00D8               	movwf	??___flmul
  6205  04F2  01D9               	clrf	??___flmul+1
  6206  04F3  01DA               	clrf	??___flmul+2
  6207  04F4  01DB               	clrf	??___flmul+3
  6208  04F5  0858               	movf	??___flmul,w
  6209  04F6  07DF               	addwf	___flmul@grs,f
  6210  04F7  0859               	movf	??___flmul+1,w
  6211  04F8  1103               	clrz
  6212  04F9  1803               	skipnc
  6213  04FA  3E01               	addlw	1
  6214  04FB  1903               	skipnz
  6215  04FC  2CFE               	goto	u3981
  6216  04FD  07E0               	addwf	___flmul@grs+1,f
  6217  04FE                     u3981:
  6218  04FE  085A               	movf	??___flmul+2,w
  6219  04FF  1103               	clrz
  6220  0500  1803               	skipnc
  6221  0501  3E01               	addlw	1
  6222  0502  1903               	skipnz
  6223  0503  2D05               	goto	u3982
  6224  0504  07E1               	addwf	___flmul@grs+2,f
  6225  0505                     u3982:
  6226  0505  085B               	movf	??___flmul+3,w
  6227  0506  1103               	clrz
  6228  0507  1803               	skipnc
  6229  0508  3E01               	addlw	1
  6230  0509  1903               	skipnz
  6231  050A  2D0C               	goto	u3983
  6232  050B  07E2               	addwf	___flmul@grs+3,f
  6233  050C                     u3983:
  6234  050C                     l3121:
  6235  050C  0869               	movf	___flmul@temp+1,w
  6236  050D  00D8               	movwf	??___flmul
  6237  050E  01D9               	clrf	??___flmul+1
  6238  050F  01DA               	clrf	??___flmul+2
  6239  0510  01DB               	clrf	??___flmul+3
  6240  0511  0858               	movf	??___flmul,w
  6241  0512  07E4               	addwf	___flmul@prod,f
  6242  0513  0859               	movf	??___flmul+1,w
  6243  0514  1103               	clrz
  6244  0515  1803               	skipnc
  6245  0516  3E01               	addlw	1
  6246  0517  1903               	skipnz
  6247  0518  2D1A               	goto	u3991
  6248  0519  07E5               	addwf	___flmul@prod+1,f
  6249  051A                     u3991:
  6250  051A  085A               	movf	??___flmul+2,w
  6251  051B  1103               	clrz
  6252  051C  1803               	skipnc
  6253  051D  3E01               	addlw	1
  6254  051E  1903               	skipnz
  6255  051F  2D21               	goto	u3992
  6256  0520  07E6               	addwf	___flmul@prod+2,f
  6257  0521                     u3992:
  6258  0521  085B               	movf	??___flmul+3,w
  6259  0522  1103               	clrz
  6260  0523  1803               	skipnc
  6261  0524  3E01               	addlw	1
  6262  0525  1903               	skipnz
  6263  0526  2D28               	goto	u3993
  6264  0527  07E7               	addwf	___flmul@prod+3,f
  6265  0528                     u3993:
  6266  0528                     l3123:
  6267  0528  3008               	movlw	8
  6268  0529  00D8               	movwf	??___flmul
  6269  052A                     u4005:
  6270  052A  1003               	clrc
  6271  052B  0DDF               	rlf	___flmul@grs,f
  6272  052C  0DE0               	rlf	___flmul@grs+1,f
  6273  052D  0DE1               	rlf	___flmul@grs+2,f
  6274  052E  0DE2               	rlf	___flmul@grs+3,f
  6275  052F  0BD8               	decfsz	??___flmul,f
  6276  0530  2D2A               	goto	u4005
  6277  0531                     l3125:
  6278  0531  0851               	movf	___flmul@b+1,w
  6279  0532  00D8               	movwf	??___flmul
  6280  0533  0858               	movf	??___flmul,w
  6281  0534  00F2               	movwf	__Umul8_16@multiplicand
  6282  0535  0854               	movf	___flmul@a,w
  6283  0536  160A  118A  257B  120A  118A  	fcall	__Umul8_16
  6284  053B  0873               	movf	?__Umul8_16+1,w
  6285  053C  1283               	bcf	3,5	;RP0=0, select bank0
  6286  053D  1303               	bcf	3,6	;RP1=0, select bank0
  6287  053E  00E9               	movwf	___flmul@temp+1
  6288  053F  0872               	movf	?__Umul8_16,w
  6289  0540  00E8               	movwf	___flmul@temp
  6290  0541                     l3127:
  6291  0541  0868               	movf	___flmul@temp,w
  6292  0542  00D8               	movwf	??___flmul
  6293  0543  0869               	movf	___flmul@temp+1,w
  6294  0544  00D9               	movwf	??___flmul+1
  6295  0545  01DA               	clrf	??___flmul+2
  6296  0546  01DB               	clrf	??___flmul+3
  6297  0547  0858               	movf	??___flmul,w
  6298  0548  07DF               	addwf	___flmul@grs,f
  6299  0549  0859               	movf	??___flmul+1,w
  6300  054A  1103               	clrz
  6301  054B  1803               	skipnc
  6302  054C  3E01               	addlw	1
  6303  054D  1903               	skipnz
  6304  054E  2D50               	goto	u4011
  6305  054F  07E0               	addwf	___flmul@grs+1,f
  6306  0550                     u4011:
  6307  0550  085A               	movf	??___flmul+2,w
  6308  0551  1103               	clrz
  6309  0552  1803               	skipnc
  6310  0553  3E01               	addlw	1
  6311  0554  1903               	skipnz
  6312  0555  2D57               	goto	u4012
  6313  0556  07E1               	addwf	___flmul@grs+2,f
  6314  0557                     u4012:
  6315  0557  085B               	movf	??___flmul+3,w
  6316  0558  1103               	clrz
  6317  0559  1803               	skipnc
  6318  055A  3E01               	addlw	1
  6319  055B  1903               	skipnz
  6320  055C  2D5E               	goto	u4013
  6321  055D  07E2               	addwf	___flmul@grs+3,f
  6322  055E                     u4013:
  6323  055E                     l3129:
  6324  055E  0850               	movf	___flmul@b,w
  6325  055F  00D8               	movwf	??___flmul
  6326  0560  0858               	movf	??___flmul,w
  6327  0561  00F2               	movwf	__Umul8_16@multiplicand
  6328  0562  0855               	movf	___flmul@a+1,w
  6329  0563  160A  118A  257B  120A  118A  	fcall	__Umul8_16
  6330  0568  0873               	movf	?__Umul8_16+1,w
  6331  0569  1283               	bcf	3,5	;RP0=0, select bank0
  6332  056A  1303               	bcf	3,6	;RP1=0, select bank0
  6333  056B  00E9               	movwf	___flmul@temp+1
  6334  056C  0872               	movf	?__Umul8_16,w
  6335  056D  00E8               	movwf	___flmul@temp
  6336  056E                     l3131:
  6337  056E  0868               	movf	___flmul@temp,w
  6338  056F  00D8               	movwf	??___flmul
  6339  0570  0869               	movf	___flmul@temp+1,w
  6340  0571  00D9               	movwf	??___flmul+1
  6341  0572  01DA               	clrf	??___flmul+2
  6342  0573  01DB               	clrf	??___flmul+3
  6343  0574  0858               	movf	??___flmul,w
  6344  0575  07DF               	addwf	___flmul@grs,f
  6345  0576  0859               	movf	??___flmul+1,w
  6346  0577  1103               	clrz
  6347  0578  1803               	skipnc
  6348  0579  3E01               	addlw	1
  6349  057A  1903               	skipnz
  6350  057B  2D7D               	goto	u4021
  6351  057C  07E0               	addwf	___flmul@grs+1,f
  6352  057D                     u4021:
  6353  057D  085A               	movf	??___flmul+2,w
  6354  057E  1103               	clrz
  6355  057F  1803               	skipnc
  6356  0580  3E01               	addlw	1
  6357  0581  1903               	skipnz
  6358  0582  2D84               	goto	u4022
  6359  0583  07E1               	addwf	___flmul@grs+2,f
  6360  0584                     u4022:
  6361  0584  085B               	movf	??___flmul+3,w
  6362  0585  1103               	clrz
  6363  0586  1803               	skipnc
  6364  0587  3E01               	addlw	1
  6365  0588  1903               	skipnz
  6366  0589  2D8B               	goto	u4023
  6367  058A  07E2               	addwf	___flmul@grs+3,f
  6368  058B                     u4023:
  6369  058B                     l3133:
  6370  058B  3008               	movlw	8
  6371  058C  00D8               	movwf	??___flmul
  6372  058D                     u4035:
  6373  058D  1003               	clrc
  6374  058E  0DDF               	rlf	___flmul@grs,f
  6375  058F  0DE0               	rlf	___flmul@grs+1,f
  6376  0590  0DE1               	rlf	___flmul@grs+2,f
  6377  0591  0DE2               	rlf	___flmul@grs+3,f
  6378  0592  0BD8               	decfsz	??___flmul,f
  6379  0593  2D8D               	goto	u4035
  6380  0594  0850               	movf	___flmul@b,w
  6381  0595  00D8               	movwf	??___flmul
  6382  0596  0858               	movf	??___flmul,w
  6383  0597  00F2               	movwf	__Umul8_16@multiplicand
  6384  0598  0854               	movf	___flmul@a,w
  6385  0599  160A  118A  257B  120A  118A  	fcall	__Umul8_16
  6386  059E  0873               	movf	?__Umul8_16+1,w
  6387  059F  1283               	bcf	3,5	;RP0=0, select bank0
  6388  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  6389  05A1  00E9               	movwf	___flmul@temp+1
  6390  05A2  0872               	movf	?__Umul8_16,w
  6391  05A3  00E8               	movwf	___flmul@temp
  6392  05A4                     l3135:
  6393  05A4  0868               	movf	___flmul@temp,w
  6394  05A5  00D8               	movwf	??___flmul
  6395  05A6  0869               	movf	___flmul@temp+1,w
  6396  05A7  00D9               	movwf	??___flmul+1
  6397  05A8  01DA               	clrf	??___flmul+2
  6398  05A9  01DB               	clrf	??___flmul+3
  6399  05AA  0858               	movf	??___flmul,w
  6400  05AB  07DF               	addwf	___flmul@grs,f
  6401  05AC  0859               	movf	??___flmul+1,w
  6402  05AD  1103               	clrz
  6403  05AE  1803               	skipnc
  6404  05AF  3E01               	addlw	1
  6405  05B0  1903               	skipnz
  6406  05B1  2DB3               	goto	u4041
  6407  05B2  07E0               	addwf	___flmul@grs+1,f
  6408  05B3                     u4041:
  6409  05B3  085A               	movf	??___flmul+2,w
  6410  05B4  1103               	clrz
  6411  05B5  1803               	skipnc
  6412  05B6  3E01               	addlw	1
  6413  05B7  1903               	skipnz
  6414  05B8  2DBA               	goto	u4042
  6415  05B9  07E1               	addwf	___flmul@grs+2,f
  6416  05BA                     u4042:
  6417  05BA  085B               	movf	??___flmul+3,w
  6418  05BB  1103               	clrz
  6419  05BC  1803               	skipnc
  6420  05BD  3E01               	addlw	1
  6421  05BE  1903               	skipnz
  6422  05BF  2DC1               	goto	u4043
  6423  05C0  07E2               	addwf	___flmul@grs+3,f
  6424  05C1                     u4043:
  6425  05C1                     l3137:
  6426  05C1  0851               	movf	___flmul@b+1,w
  6427  05C2  00D8               	movwf	??___flmul
  6428  05C3  0858               	movf	??___flmul,w
  6429  05C4  00F2               	movwf	__Umul8_16@multiplicand
  6430  05C5  0856               	movf	___flmul@a+2,w
  6431  05C6  160A  118A  257B  120A  118A  	fcall	__Umul8_16
  6432  05CB  0873               	movf	?__Umul8_16+1,w
  6433  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  6434  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  6435  05CE  00E9               	movwf	___flmul@temp+1
  6436  05CF  0872               	movf	?__Umul8_16,w
  6437  05D0  00E8               	movwf	___flmul@temp
  6438  05D1  0868               	movf	___flmul@temp,w
  6439  05D2  00D8               	movwf	??___flmul
  6440  05D3  0869               	movf	___flmul@temp+1,w
  6441  05D4  00D9               	movwf	??___flmul+1
  6442  05D5  01DA               	clrf	??___flmul+2
  6443  05D6  01DB               	clrf	??___flmul+3
  6444  05D7  0858               	movf	??___flmul,w
  6445  05D8  07E4               	addwf	___flmul@prod,f
  6446  05D9  0859               	movf	??___flmul+1,w
  6447  05DA  1103               	clrz
  6448  05DB  1803               	skipnc
  6449  05DC  3E01               	addlw	1
  6450  05DD  1903               	skipnz
  6451  05DE  2DE0               	goto	u4051
  6452  05DF  07E5               	addwf	___flmul@prod+1,f
  6453  05E0                     u4051:
  6454  05E0  085A               	movf	??___flmul+2,w
  6455  05E1  1103               	clrz
  6456  05E2  1803               	skipnc
  6457  05E3  3E01               	addlw	1
  6458  05E4  1903               	skipnz
  6459  05E5  2DE7               	goto	u4052
  6460  05E6  07E6               	addwf	___flmul@prod+2,f
  6461  05E7                     u4052:
  6462  05E7  085B               	movf	??___flmul+3,w
  6463  05E8  1103               	clrz
  6464  05E9  1803               	skipnc
  6465  05EA  3E01               	addlw	1
  6466  05EB  1903               	skipnz
  6467  05EC  2DEE               	goto	u4053
  6468  05ED  07E7               	addwf	___flmul@prod+3,f
  6469  05EE                     u4053:
  6470  05EE                     l3139:
  6471  05EE  0852               	movf	___flmul@b+2,w
  6472  05EF  00D8               	movwf	??___flmul
  6473  05F0  0858               	movf	??___flmul,w
  6474  05F1  00F2               	movwf	__Umul8_16@multiplicand
  6475  05F2  0855               	movf	___flmul@a+1,w
  6476  05F3  160A  118A  257B  120A  118A  	fcall	__Umul8_16
  6477  05F8  0873               	movf	?__Umul8_16+1,w
  6478  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  6479  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  6480  05FB  00E9               	movwf	___flmul@temp+1
  6481  05FC  0872               	movf	?__Umul8_16,w
  6482  05FD  00E8               	movwf	___flmul@temp
  6483  05FE                     l3141:
  6484  05FE  0868               	movf	___flmul@temp,w
  6485  05FF  00D8               	movwf	??___flmul
  6486  0600  0869               	movf	___flmul@temp+1,w
  6487  0601  00D9               	movwf	??___flmul+1
  6488  0602  01DA               	clrf	??___flmul+2
  6489  0603  01DB               	clrf	??___flmul+3
  6490  0604  0858               	movf	??___flmul,w
  6491  0605  07E4               	addwf	___flmul@prod,f
  6492  0606  0859               	movf	??___flmul+1,w
  6493  0607  1103               	clrz
  6494  0608  1803               	skipnc
  6495  0609  3E01               	addlw	1
  6496  060A  1903               	skipnz
  6497  060B  2E0D               	goto	u4061
  6498  060C  07E5               	addwf	___flmul@prod+1,f
  6499  060D                     u4061:
  6500  060D  085A               	movf	??___flmul+2,w
  6501  060E  1103               	clrz
  6502  060F  1803               	skipnc
  6503  0610  3E01               	addlw	1
  6504  0611  1903               	skipnz
  6505  0612  2E14               	goto	u4062
  6506  0613  07E6               	addwf	___flmul@prod+2,f
  6507  0614                     u4062:
  6508  0614  085B               	movf	??___flmul+3,w
  6509  0615  1103               	clrz
  6510  0616  1803               	skipnc
  6511  0617  3E01               	addlw	1
  6512  0618  1903               	skipnz
  6513  0619  2E1B               	goto	u4063
  6514  061A  07E7               	addwf	___flmul@prod+3,f
  6515  061B                     u4063:
  6516  061B  0852               	movf	___flmul@b+2,w
  6517  061C  00D8               	movwf	??___flmul
  6518  061D  0858               	movf	??___flmul,w
  6519  061E  00F2               	movwf	__Umul8_16@multiplicand
  6520  061F  0856               	movf	___flmul@a+2,w
  6521  0620  160A  118A  257B  120A  118A  	fcall	__Umul8_16
  6522  0625  0873               	movf	?__Umul8_16+1,w
  6523  0626  1283               	bcf	3,5	;RP0=0, select bank0
  6524  0627  1303               	bcf	3,6	;RP1=0, select bank0
  6525  0628  00E9               	movwf	___flmul@temp+1
  6526  0629  0872               	movf	?__Umul8_16,w
  6527  062A  00E8               	movwf	___flmul@temp
  6528  062B                     l3143:
  6529  062B  0868               	movf	___flmul@temp,w
  6530  062C  00D8               	movwf	??___flmul
  6531  062D  0869               	movf	___flmul@temp+1,w
  6532  062E  00D9               	movwf	??___flmul+1
  6533  062F  01DA               	clrf	??___flmul+2
  6534  0630  01DB               	clrf	??___flmul+3
  6535  0631  3008               	movlw	8
  6536  0632                     u4075:
  6537  0632  1003               	clrc
  6538  0633  0DD8               	rlf	??___flmul,f
  6539  0634  0DD9               	rlf	??___flmul+1,f
  6540  0635  0DDA               	rlf	??___flmul+2,f
  6541  0636  0DDB               	rlf	??___flmul+3,f
  6542  0637                     u4070:
  6543  0637  3EFF               	addlw	-1
  6544  0638  1D03               	skipz
  6545  0639  2E32               	goto	u4075
  6546  063A  0858               	movf	??___flmul,w
  6547  063B  07E4               	addwf	___flmul@prod,f
  6548  063C  0859               	movf	??___flmul+1,w
  6549  063D  1103               	clrz
  6550  063E  1803               	skipnc
  6551  063F  3E01               	addlw	1
  6552  0640  1903               	skipnz
  6553  0641  2E43               	goto	u4081
  6554  0642  07E5               	addwf	___flmul@prod+1,f
  6555  0643                     u4081:
  6556  0643  085A               	movf	??___flmul+2,w
  6557  0644  1103               	clrz
  6558  0645  1803               	skipnc
  6559  0646  3E01               	addlw	1
  6560  0647  1903               	skipnz
  6561  0648  2E4A               	goto	u4082
  6562  0649  07E6               	addwf	___flmul@prod+2,f
  6563  064A                     u4082:
  6564  064A  085B               	movf	??___flmul+3,w
  6565  064B  1103               	clrz
  6566  064C  1803               	skipnc
  6567  064D  3E01               	addlw	1
  6568  064E  1903               	skipnz
  6569  064F  2E51               	goto	u4083
  6570  0650  07E7               	addwf	___flmul@prod+3,f
  6571  0651                     u4083:
  6572  0651                     l3145:
  6573  0651  085F               	movf	___flmul@grs,w
  6574  0652  00D8               	movwf	??___flmul
  6575  0653  0860               	movf	___flmul@grs+1,w
  6576  0654  00D9               	movwf	??___flmul+1
  6577  0655  0861               	movf	___flmul@grs+2,w
  6578  0656  00DA               	movwf	??___flmul+2
  6579  0657  0862               	movf	___flmul@grs+3,w
  6580  0658  00DB               	movwf	??___flmul+3
  6581  0659  3018               	movlw	24
  6582  065A                     u4095:
  6583  065A  1003               	clrc
  6584  065B  0CDB               	rrf	??___flmul+3,f
  6585  065C  0CDA               	rrf	??___flmul+2,f
  6586  065D  0CD9               	rrf	??___flmul+1,f
  6587  065E  0CD8               	rrf	??___flmul,f
  6588  065F                     u4090:
  6589  065F  3EFF               	addlw	-1
  6590  0660  1D03               	skipz
  6591  0661  2E5A               	goto	u4095
  6592  0662  0858               	movf	??___flmul,w
  6593  0663  07E4               	addwf	___flmul@prod,f
  6594  0664  0859               	movf	??___flmul+1,w
  6595  0665  1103               	clrz
  6596  0666  1803               	skipnc
  6597  0667  3E01               	addlw	1
  6598  0668  1903               	skipnz
  6599  0669  2E6B               	goto	u4101
  6600  066A  07E5               	addwf	___flmul@prod+1,f
  6601  066B                     u4101:
  6602  066B  085A               	movf	??___flmul+2,w
  6603  066C  1103               	clrz
  6604  066D  1803               	skipnc
  6605  066E  3E01               	addlw	1
  6606  066F  1903               	skipnz
  6607  0670  2E72               	goto	u4102
  6608  0671  07E6               	addwf	___flmul@prod+2,f
  6609  0672                     u4102:
  6610  0672  085B               	movf	??___flmul+3,w
  6611  0673  1103               	clrz
  6612  0674  1803               	skipnc
  6613  0675  3E01               	addlw	1
  6614  0676  1903               	skipnz
  6615  0677  2E79               	goto	u4103
  6616  0678  07E7               	addwf	___flmul@prod+3,f
  6617  0679                     u4103:
  6618  0679                     l3147:
  6619  0679  3008               	movlw	8
  6620  067A  00D8               	movwf	??___flmul
  6621  067B                     u4115:
  6622  067B  1003               	clrc
  6623  067C  0DDF               	rlf	___flmul@grs,f
  6624  067D  0DE0               	rlf	___flmul@grs+1,f
  6625  067E  0DE1               	rlf	___flmul@grs+2,f
  6626  067F  0DE2               	rlf	___flmul@grs+3,f
  6627  0680  0BD8               	decfsz	??___flmul,f
  6628  0681  2E7B               	goto	u4115
  6629  0682                     l3149:
  6630  0682  0863               	movf	___flmul@bexp,w
  6631  0683  075E               	addwf	___flmul@aexp,w
  6632  0684  00D8               	movwf	??___flmul
  6633  0685  01D9               	clrf	??___flmul+1
  6634  0686  0DD9               	rlf	??___flmul+1,f
  6635  0687  0858               	movf	??___flmul,w
  6636  0688  3E82               	addlw	130
  6637  0689  00E8               	movwf	___flmul@temp
  6638  068A  0859               	movf	??___flmul+1,w
  6639  068B  1803               	skipnc
  6640  068C  3E01               	addlw	1
  6641  068D  3EFF               	addlw	255
  6642  068E  00E9               	movwf	___flmul@temp+1
  6643  068F  2EAD               	goto	l3161
  6644  0690                     l3151:
  6645  0690  3001               	movlw	1
  6646  0691  00D8               	movwf	??___flmul
  6647  0692                     u4125:
  6648  0692  1003               	clrc
  6649  0693  0DE4               	rlf	___flmul@prod,f
  6650  0694  0DE5               	rlf	___flmul@prod+1,f
  6651  0695  0DE6               	rlf	___flmul@prod+2,f
  6652  0696  0DE7               	rlf	___flmul@prod+3,f
  6653  0697  0BD8               	decfsz	??___flmul,f
  6654  0698  2E92               	goto	u4125
  6655  0699                     l3153:
  6656  0699  1FE2               	btfss	___flmul@grs+3,7
  6657  069A  2E9C               	goto	u4131
  6658  069B  2E9D               	goto	u4130
  6659  069C                     u4131:
  6660  069C  2E9E               	goto	l3157
  6661  069D                     u4130:
  6662  069D                     l3155:
  6663  069D  1464               	bsf	___flmul@prod,0
  6664  069E                     l3157:
  6665  069E  3001               	movlw	1
  6666  069F  00D8               	movwf	??___flmul
  6667  06A0                     u4145:
  6668  06A0  1003               	clrc
  6669  06A1  0DDF               	rlf	___flmul@grs,f
  6670  06A2  0DE0               	rlf	___flmul@grs+1,f
  6671  06A3  0DE1               	rlf	___flmul@grs+2,f
  6672  06A4  0DE2               	rlf	___flmul@grs+3,f
  6673  06A5  0BD8               	decfsz	??___flmul,f
  6674  06A6  2EA0               	goto	u4145
  6675  06A7                     l3159:
  6676  06A7  30FF               	movlw	255
  6677  06A8  07E8               	addwf	___flmul@temp,f
  6678  06A9  1803               	skipnc
  6679  06AA  0AE9               	incf	___flmul@temp+1,f
  6680  06AB  30FF               	movlw	255
  6681  06AC  07E9               	addwf	___flmul@temp+1,f
  6682  06AD                     l3161:
  6683  06AD  1FE6               	btfss	___flmul@prod+2,7
  6684  06AE  2EB0               	goto	u4151
  6685  06AF  2EB1               	goto	u4150
  6686  06B0                     u4151:
  6687  06B0  2E90               	goto	l3151
  6688  06B1                     u4150:
  6689  06B1                     l3163:
  6690  06B1  01DE               	clrf	___flmul@aexp
  6691  06B2                     l3165:
  6692  06B2  1FE2               	btfss	___flmul@grs+3,7
  6693  06B3  2EB5               	goto	u4161
  6694  06B4  2EB6               	goto	u4160
  6695  06B5                     u4161:
  6696  06B5  2ED2               	goto	l3173
  6697  06B6                     u4160:
  6698  06B6                     l3167:
  6699  06B6  30FF               	movlw	255
  6700  06B7  055F               	andwf	___flmul@grs,w
  6701  06B8  00D8               	movwf	??___flmul
  6702  06B9  30FF               	movlw	255
  6703  06BA  0560               	andwf	___flmul@grs+1,w
  6704  06BB  00D9               	movwf	??___flmul+1
  6705  06BC  30FF               	movlw	255
  6706  06BD  0561               	andwf	___flmul@grs+2,w
  6707  06BE  00DA               	movwf	??___flmul+2
  6708  06BF  307F               	movlw	127
  6709  06C0  0562               	andwf	___flmul@grs+3,w
  6710  06C1  00DB               	movwf	??___flmul+3
  6711  06C2  085B               	movf	??___flmul+3,w
  6712  06C3  045A               	iorwf	??___flmul+2,w
  6713  06C4  0459               	iorwf	??___flmul+1,w
  6714  06C5  0458               	iorwf	??___flmul,w
  6715  06C6  1903               	skipnz
  6716  06C7  2EC9               	goto	u4171
  6717  06C8  2ECA               	goto	u4170
  6718  06C9                     u4171:
  6719  06C9  2ECD               	goto	l800
  6720  06CA                     u4170:
  6721  06CA                     l3169:
  6722  06CA  01DE               	clrf	___flmul@aexp
  6723  06CB  0ADE               	incf	___flmul@aexp,f
  6724  06CC  2ED2               	goto	l3173
  6725  06CD                     l800:
  6726  06CD  1C64               	btfss	___flmul@prod,0
  6727  06CE  2ED0               	goto	u4181
  6728  06CF  2ED1               	goto	u4180
  6729  06D0                     u4181:
  6730  06D0  2ED2               	goto	l3173
  6731  06D1                     u4180:
  6732  06D1  2ECA               	goto	l3169
  6733  06D2                     l3173:
  6734  06D2  085E               	movf	___flmul@aexp,w
  6735  06D3  1903               	btfsc	3,2
  6736  06D4  2ED6               	goto	u4191
  6737  06D5  2ED7               	goto	u4190
  6738  06D6                     u4191:
  6739  06D6  2F08               	goto	l3183
  6740  06D7                     u4190:
  6741  06D7                     l3175:
  6742  06D7  3001               	movlw	1
  6743  06D8  07E4               	addwf	___flmul@prod,f
  6744  06D9  3000               	movlw	0
  6745  06DA  1803               	skipnc
  6746  06DB  3001               	movlw	1
  6747  06DC  07E5               	addwf	___flmul@prod+1,f
  6748  06DD  3000               	movlw	0
  6749  06DE  1803               	skipnc
  6750  06DF  3001               	movlw	1
  6751  06E0  07E6               	addwf	___flmul@prod+2,f
  6752  06E1  3000               	movlw	0
  6753  06E2  1803               	skipnc
  6754  06E3  3001               	movlw	1
  6755  06E4  07E7               	addwf	___flmul@prod+3,f
  6756  06E5                     l3177:
  6757  06E5  1C67               	btfss	___flmul@prod+3,0
  6758  06E6  2EE8               	goto	u4201
  6759  06E7  2EE9               	goto	u4200
  6760  06E8                     u4201:
  6761  06E8  2F08               	goto	l3183
  6762  06E9                     u4200:
  6763  06E9                     l3179:
  6764  06E9  0864               	movf	___flmul@prod,w
  6765  06EA  00D8               	movwf	??___flmul
  6766  06EB  0865               	movf	___flmul@prod+1,w
  6767  06EC  00D9               	movwf	??___flmul+1
  6768  06ED  0866               	movf	___flmul@prod+2,w
  6769  06EE  00DA               	movwf	??___flmul+2
  6770  06EF  0867               	movf	___flmul@prod+3,w
  6771  06F0  00DB               	movwf	??___flmul+3
  6772  06F1  3001               	movlw	1
  6773  06F2  00DC               	movwf	??___flmul+4
  6774  06F3                     u4215:
  6775  06F3  0D5B               	rlf	??___flmul+3,w
  6776  06F4  0CDB               	rrf	??___flmul+3,f
  6777  06F5  0CDA               	rrf	??___flmul+2,f
  6778  06F6  0CD9               	rrf	??___flmul+1,f
  6779  06F7  0CD8               	rrf	??___flmul,f
  6780  06F8                     u4210:
  6781  06F8  0BDC               	decfsz	??___flmul+4,f
  6782  06F9  2EF3               	goto	u4215
  6783  06FA  085B               	movf	??___flmul+3,w
  6784  06FB  00E7               	movwf	___flmul@prod+3
  6785  06FC  085A               	movf	??___flmul+2,w
  6786  06FD  00E6               	movwf	___flmul@prod+2
  6787  06FE  0859               	movf	??___flmul+1,w
  6788  06FF  00E5               	movwf	___flmul@prod+1
  6789  0700  0858               	movf	??___flmul,w
  6790  0701  00E4               	movwf	___flmul@prod
  6791  0702                     l3181:
  6792  0702  3001               	movlw	1
  6793  0703  07E8               	addwf	___flmul@temp,f
  6794  0704  1803               	skipnc
  6795  0705  0AE9               	incf	___flmul@temp+1,f
  6796  0706  3000               	movlw	0
  6797  0707  07E9               	addwf	___flmul@temp+1,f
  6798  0708                     l3183:
  6799  0708  0869               	movf	___flmul@temp+1,w
  6800  0709  3A80               	xorlw	128
  6801  070A  00FF               	movwf	btemp+1
  6802  070B  3080               	movlw	128
  6803  070C  027F               	subwf	btemp+1,w
  6804  070D  1D03               	skipz
  6805  070E  2F11               	goto	u4225
  6806  070F  30FF               	movlw	255
  6807  0710  0268               	subwf	___flmul@temp,w
  6808  0711                     u4225:
  6809  0711  1C03               	skipc
  6810  0712  2F14               	goto	u4221
  6811  0713  2F15               	goto	u4220
  6812  0714                     u4221:
  6813  0714  2F20               	goto	l3187
  6814  0715                     u4220:
  6815  0715                     l3185:
  6816  0715  307F               	movlw	127
  6817  0716  1283               	bcf	3,5	;RP0=0, select bank0
  6818  0717  1303               	bcf	3,6	;RP1=0, select bank0
  6819  0718  00E7               	movwf	___flmul@prod+3
  6820  0719  3080               	movlw	128
  6821  071A  00E6               	movwf	___flmul@prod+2
  6822  071B  3000               	movlw	0
  6823  071C  00E5               	movwf	___flmul@prod+1
  6824  071D  3000               	movlw	0
  6825  071E  00E4               	movwf	___flmul@prod
  6826  071F  2F55               	goto	l806
  6827  0720                     l3187:
  6828  0720  1283               	bcf	3,5	;RP0=0, select bank0
  6829  0721  1303               	bcf	3,6	;RP1=0, select bank0
  6830  0722  0869               	movf	___flmul@temp+1,w
  6831  0723  3A80               	xorlw	128
  6832  0724  00FF               	movwf	btemp+1
  6833  0725  3080               	movlw	128
  6834  0726  027F               	subwf	btemp+1,w
  6835  0727  1D03               	skipz
  6836  0728  2F2B               	goto	u4235
  6837  0729  3001               	movlw	1
  6838  072A  0268               	subwf	___flmul@temp,w
  6839  072B                     u4235:
  6840  072B  1803               	skipnc
  6841  072C  2F2E               	goto	u4231
  6842  072D  2F2F               	goto	u4230
  6843  072E                     u4231:
  6844  072E  2F3B               	goto	l3193
  6845  072F                     u4230:
  6846  072F                     l3189:
  6847  072F  3000               	movlw	0
  6848  0730  1283               	bcf	3,5	;RP0=0, select bank0
  6849  0731  1303               	bcf	3,6	;RP1=0, select bank0
  6850  0732  00E7               	movwf	___flmul@prod+3
  6851  0733  3000               	movlw	0
  6852  0734  00E6               	movwf	___flmul@prod+2
  6853  0735  3000               	movlw	0
  6854  0736  00E5               	movwf	___flmul@prod+1
  6855  0737  3000               	movlw	0
  6856  0738  00E4               	movwf	___flmul@prod
  6857  0739                     l3191:
  6858  0739  01DD               	clrf	___flmul@sign
  6859  073A  2F55               	goto	l806
  6860  073B                     l3193:
  6861  073B  1283               	bcf	3,5	;RP0=0, select bank0
  6862  073C  1303               	bcf	3,6	;RP1=0, select bank0
  6863  073D  0868               	movf	___flmul@temp,w
  6864  073E  00D8               	movwf	??___flmul
  6865  073F  0858               	movf	??___flmul,w
  6866  0740  00E3               	movwf	___flmul@bexp
  6867  0741  30FF               	movlw	255
  6868  0742  05E4               	andwf	___flmul@prod,f
  6869  0743  30FF               	movlw	255
  6870  0744  05E5               	andwf	___flmul@prod+1,f
  6871  0745  307F               	movlw	127
  6872  0746  05E6               	andwf	___flmul@prod+2,f
  6873  0747  3000               	movlw	0
  6874  0748  05E7               	andwf	___flmul@prod+3,f
  6875  0749                     l3195:
  6876  0749  1C63               	btfss	___flmul@bexp,0
  6877  074A  2F4C               	goto	u4241
  6878  074B  2F4D               	goto	u4240
  6879  074C                     u4241:
  6880  074C  2F4E               	goto	l3199
  6881  074D                     u4240:
  6882  074D                     l3197:
  6883  074D  17E6               	bsf	___flmul@prod+2,7
  6884  074E                     l3199:
  6885  074E  0863               	movf	___flmul@bexp,w
  6886  074F  00D8               	movwf	??___flmul
  6887  0750  1003               	clrc
  6888  0751  0C58               	rrf	??___flmul,w
  6889  0752  00D9               	movwf	??___flmul+1
  6890  0753  0859               	movf	??___flmul+1,w
  6891  0754  00E7               	movwf	___flmul@prod+3
  6892  0755                     l806:
  6893  0755  085D               	movf	___flmul@sign,w
  6894  0756  00D8               	movwf	??___flmul
  6895  0757  0858               	movf	??___flmul,w
  6896  0758  04E7               	iorwf	___flmul@prod+3,f
  6897  0759                     l3201:
  6898  0759  0867               	movf	___flmul@prod+3,w
  6899  075A  00D3               	movwf	?___flmul+3
  6900  075B  0866               	movf	___flmul@prod+2,w
  6901  075C  00D2               	movwf	?___flmul+2
  6902  075D  0865               	movf	___flmul@prod+1,w
  6903  075E  00D1               	movwf	?___flmul+1
  6904  075F  0864               	movf	___flmul@prod,w
  6905  0760  00D0               	movwf	?___flmul
  6906  0761                     l794:
  6907  0761  0008               	return
  6908  0762                     __end_of___flmul:
  6909                           
  6910                           	psect	text23
  6911  157B                     __ptext23:	
  6912 ;; *************** function __Umul8_16 *****************
  6913 ;; Defined at:
  6914 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8_16.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;  multiplier      1    wreg     unsigned char 
  6917 ;;  multiplicand    1    2[COMMON] unsigned char 
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6920 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6921 ;;  product         2    0[BANK0 ] unsigned int 
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  2    2[COMMON] unsigned int 
  6924 ;; Registers used:
  6925 ;;		wreg, status,2, status,0
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6931 ;;      Params:         2       0       0       0       0
  6932 ;;      Locals:         0       5       0       0       0
  6933 ;;      Temps:          2       0       0       0       0
  6934 ;;      Totals:         4       5       0       0       0
  6935 ;;Total ram usage:        9 bytes
  6936 ;; Hardware stack levels used: 1
  6937 ;; Hardware stack levels required when called: 1
  6938 ;; This function calls:
  6939 ;;		Nothing
  6940 ;; This function is called by:
  6941 ;;		___flmul
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945  157B                     __Umul8_16:	
  6946                           ;psect for function __Umul8_16
  6947                           
  6948                           
  6949                           ;incstack = 0
  6950                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6951                           ;__Umul8_16@multiplier stored from wreg
  6952  157B  1283               	bcf	3,5	;RP0=0, select bank0
  6953  157C  1303               	bcf	3,6	;RP1=0, select bank0
  6954  157D  00A4               	movwf	__Umul8_16@multiplier
  6955  157E                     l2961:
  6956  157E  01A0               	clrf	__Umul8_16@product
  6957  157F  01A1               	clrf	__Umul8_16@product+1
  6958  1580                     l2963:
  6959  1580  0872               	movf	__Umul8_16@multiplicand,w
  6960  1581  00F4               	movwf	??__Umul8_16
  6961  1582  01F5               	clrf	??__Umul8_16+1
  6962  1583  0874               	movf	??__Umul8_16,w
  6963  1584  00A2               	movwf	__Umul8_16@word_mpld
  6964  1585  0875               	movf	??__Umul8_16+1,w
  6965  1586  00A3               	movwf	__Umul8_16@word_mpld+1
  6966  1587                     l2965:
  6967  1587  1C24               	btfss	__Umul8_16@multiplier,0
  6968  1588  2D8A               	goto	u3701
  6969  1589  2D8B               	goto	u3700
  6970  158A                     u3701:
  6971  158A  2D91               	goto	l813
  6972  158B                     u3700:
  6973  158B                     l2967:
  6974  158B  0822               	movf	__Umul8_16@word_mpld,w
  6975  158C  07A0               	addwf	__Umul8_16@product,f
  6976  158D  1803               	skipnc
  6977  158E  0AA1               	incf	__Umul8_16@product+1,f
  6978  158F  0823               	movf	__Umul8_16@word_mpld+1,w
  6979  1590  07A1               	addwf	__Umul8_16@product+1,f
  6980  1591                     l813:
  6981  1591  3001               	movlw	1
  6982  1592                     u3715:
  6983  1592  1003               	clrc
  6984  1593  0DA2               	rlf	__Umul8_16@word_mpld,f
  6985  1594  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6986  1595  3EFF               	addlw	-1
  6987  1596  1D03               	skipz
  6988  1597  2D92               	goto	u3715
  6989  1598  1003               	clrc
  6990  1599  0CA4               	rrf	__Umul8_16@multiplier,f
  6991  159A                     l2969:
  6992  159A  0824               	movf	__Umul8_16@multiplier,w
  6993  159B  1D03               	btfss	3,2
  6994  159C  2D9E               	goto	u3721
  6995  159D  2D9F               	goto	u3720
  6996  159E                     u3721:
  6997  159E  2D87               	goto	l2965
  6998  159F                     u3720:
  6999  159F                     l2971:
  7000  159F  0821               	movf	__Umul8_16@product+1,w
  7001  15A0  00F3               	movwf	?__Umul8_16+1
  7002  15A1  0820               	movf	__Umul8_16@product,w
  7003  15A2  00F2               	movwf	?__Umul8_16
  7004  15A3                     l815:
  7005  15A3  0008               	return
  7006  15A4                     __end_of__Umul8_16:
  7007                           
  7008                           	psect	text24
  7009  0BCF                     __ptext24:	
  7010 ;; *************** function ___fldiv *****************
  7011 ;; Defined at:
  7012 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcdiv.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;  a               4   22[BANK0 ] unsigned int 
  7015 ;;  b               4   26[BANK0 ] unsigned int 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;  grs             4   42[BANK0 ] unsigned long 
  7018 ;;  rem             4   35[BANK0 ] unsigned long 
  7019 ;;  new_exp         2   40[BANK0 ] int 
  7020 ;;  aexp            1   47[BANK0 ] unsigned char 
  7021 ;;  bexp            1   46[BANK0 ] unsigned char 
  7022 ;;  sign            1   39[BANK0 ] unsigned char 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  4   22[BANK0 ] unsigned char 
  7025 ;; Registers used:
  7026 ;;		wreg, status,2, status,0, btemp+1
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7032 ;;      Params:         0       8       0       0       0
  7033 ;;      Locals:         0      13       0       0       0
  7034 ;;      Temps:          0       5       0       0       0
  7035 ;;      Totals:         0      26       0       0       0
  7036 ;;Total ram usage:       26 bytes
  7037 ;; Hardware stack levels used: 1
  7038 ;; Hardware stack levels required when called: 1
  7039 ;; This function calls:
  7040 ;;		Nothing
  7041 ;; This function is called by:
  7042 ;;		_criasetpoint
  7043 ;;		_EtapaCinco
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047  0BCF                     ___fldiv:	
  7048                           ;psect for function ___fldiv
  7049                           
  7050  0BCF                     l2069:	
  7051                           ;incstack = 0
  7052                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7053                           
  7054  0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  7055  0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  7056  0BD1  083D               	movf	___fldiv@b+3,w
  7057  0BD2  3980               	andlw	128
  7058  0BD3  00BE               	movwf	??___fldiv
  7059  0BD4  083E               	movf	??___fldiv,w
  7060  0BD5  00C7               	movwf	___fldiv@sign
  7061  0BD6                     l2071:
  7062  0BD6  083D               	movf	___fldiv@b+3,w
  7063  0BD7  00BE               	movwf	??___fldiv
  7064  0BD8  073E               	addwf	??___fldiv,w
  7065  0BD9  00BF               	movwf	??___fldiv+1
  7066  0BDA  083F               	movf	??___fldiv+1,w
  7067  0BDB  00CE               	movwf	___fldiv@bexp
  7068  0BDC                     l2073:
  7069  0BDC  1FBC               	btfss	___fldiv@b+2,7
  7070  0BDD  2BDF               	goto	u2101
  7071  0BDE  2BE0               	goto	u2100
  7072  0BDF                     u2101:
  7073  0BDF  2BE1               	goto	l2077
  7074  0BE0                     u2100:
  7075  0BE0                     l2075:
  7076  0BE0  144E               	bsf	___fldiv@bexp,0
  7077  0BE1                     l2077:
  7078  0BE1  084E               	movf	___fldiv@bexp,w
  7079  0BE2  1903               	btfsc	3,2
  7080  0BE3  2BE5               	goto	u2111
  7081  0BE4  2BE6               	goto	u2110
  7082  0BE5                     u2111:
  7083  0BE5  2BF6               	goto	l2087
  7084  0BE6                     u2110:
  7085  0BE6                     l2079:
  7086  0BE6  0A4E               	incf	___fldiv@bexp,w
  7087  0BE7  1D03               	btfss	3,2
  7088  0BE8  2BEA               	goto	u2121
  7089  0BE9  2BEB               	goto	u2120
  7090  0BEA                     u2121:
  7091  0BEA  2BF3               	goto	l2083
  7092  0BEB                     u2120:
  7093  0BEB                     l2081:
  7094  0BEB  3000               	movlw	0
  7095  0BEC  00BD               	movwf	___fldiv@b+3
  7096  0BED  3000               	movlw	0
  7097  0BEE  00BC               	movwf	___fldiv@b+2
  7098  0BEF  3000               	movlw	0
  7099  0BF0  00BB               	movwf	___fldiv@b+1
  7100  0BF1  3000               	movlw	0
  7101  0BF2  00BA               	movwf	___fldiv@b
  7102  0BF3                     l2083:
  7103  0BF3  17BC               	bsf	___fldiv@b+2,7
  7104  0BF4                     l2085:
  7105  0BF4  01BD               	clrf	___fldiv@b+3
  7106  0BF5  2BFE               	goto	l2089
  7107  0BF6                     l2087:
  7108  0BF6  3000               	movlw	0
  7109  0BF7  00BD               	movwf	___fldiv@b+3
  7110  0BF8  3000               	movlw	0
  7111  0BF9  00BC               	movwf	___fldiv@b+2
  7112  0BFA  3000               	movlw	0
  7113  0BFB  00BB               	movwf	___fldiv@b+1
  7114  0BFC  3000               	movlw	0
  7115  0BFD  00BA               	movwf	___fldiv@b
  7116  0BFE                     l2089:
  7117  0BFE  0839               	movf	___fldiv@a+3,w
  7118  0BFF  3980               	andlw	128
  7119  0C00  00BE               	movwf	??___fldiv
  7120  0C01  083E               	movf	??___fldiv,w
  7121  0C02  06C7               	xorwf	___fldiv@sign,f
  7122  0C03                     l2091:
  7123  0C03  0839               	movf	___fldiv@a+3,w
  7124  0C04  00BE               	movwf	??___fldiv
  7125  0C05  073E               	addwf	??___fldiv,w
  7126  0C06  00BF               	movwf	??___fldiv+1
  7127  0C07  083F               	movf	??___fldiv+1,w
  7128  0C08  00CF               	movwf	___fldiv@aexp
  7129  0C09                     l2093:
  7130  0C09  1FB8               	btfss	___fldiv@a+2,7
  7131  0C0A  2C0C               	goto	u2131
  7132  0C0B  2C0D               	goto	u2130
  7133  0C0C                     u2131:
  7134  0C0C  2C0E               	goto	l2097
  7135  0C0D                     u2130:
  7136  0C0D                     l2095:
  7137  0C0D  144F               	bsf	___fldiv@aexp,0
  7138  0C0E                     l2097:
  7139  0C0E  084F               	movf	___fldiv@aexp,w
  7140  0C0F  1903               	btfsc	3,2
  7141  0C10  2C12               	goto	u2141
  7142  0C11  2C13               	goto	u2140
  7143  0C12                     u2141:
  7144  0C12  2C23               	goto	l2107
  7145  0C13                     u2140:
  7146  0C13                     l2099:
  7147  0C13  0A4F               	incf	___fldiv@aexp,w
  7148  0C14  1D03               	btfss	3,2
  7149  0C15  2C17               	goto	u2151
  7150  0C16  2C18               	goto	u2150
  7151  0C17                     u2151:
  7152  0C17  2C20               	goto	l2103
  7153  0C18                     u2150:
  7154  0C18                     l2101:
  7155  0C18  3000               	movlw	0
  7156  0C19  00B9               	movwf	___fldiv@a+3
  7157  0C1A  3000               	movlw	0
  7158  0C1B  00B8               	movwf	___fldiv@a+2
  7159  0C1C  3000               	movlw	0
  7160  0C1D  00B7               	movwf	___fldiv@a+1
  7161  0C1E  3000               	movlw	0
  7162  0C1F  00B6               	movwf	___fldiv@a
  7163  0C20                     l2103:
  7164  0C20  17B8               	bsf	___fldiv@a+2,7
  7165  0C21                     l2105:
  7166  0C21  01B9               	clrf	___fldiv@a+3
  7167  0C22  2C2B               	goto	l754
  7168  0C23                     l2107:
  7169  0C23  3000               	movlw	0
  7170  0C24  00B9               	movwf	___fldiv@a+3
  7171  0C25  3000               	movlw	0
  7172  0C26  00B8               	movwf	___fldiv@a+2
  7173  0C27  3000               	movlw	0
  7174  0C28  00B7               	movwf	___fldiv@a+1
  7175  0C29  3000               	movlw	0
  7176  0C2A  00B6               	movwf	___fldiv@a
  7177  0C2B                     l754:
  7178  0C2B  0839               	movf	___fldiv@a+3,w
  7179  0C2C  0438               	iorwf	___fldiv@a+2,w
  7180  0C2D  0437               	iorwf	___fldiv@a+1,w
  7181  0C2E  0436               	iorwf	___fldiv@a,w
  7182  0C2F  1D03               	skipz
  7183  0C30  2C32               	goto	u2161
  7184  0C31  2C33               	goto	u2160
  7185  0C32                     u2161:
  7186  0C32  2C4C               	goto	l2117
  7187  0C33                     u2160:
  7188  0C33                     l2109:
  7189  0C33  3000               	movlw	0
  7190  0C34  00BD               	movwf	___fldiv@b+3
  7191  0C35  3000               	movlw	0
  7192  0C36  00BC               	movwf	___fldiv@b+2
  7193  0C37  3000               	movlw	0
  7194  0C38  00BB               	movwf	___fldiv@b+1
  7195  0C39  3000               	movlw	0
  7196  0C3A  00BA               	movwf	___fldiv@b
  7197  0C3B  3080               	movlw	128
  7198  0C3C  04BC               	iorwf	___fldiv@b+2,f
  7199  0C3D  307F               	movlw	127
  7200  0C3E  04BD               	iorwf	___fldiv@b+3,f
  7201  0C3F                     l2111:
  7202  0C3F  0847               	movf	___fldiv@sign,w
  7203  0C40  00BE               	movwf	??___fldiv
  7204  0C41  083E               	movf	??___fldiv,w
  7205  0C42  04BD               	iorwf	___fldiv@b+3,f
  7206  0C43                     l2113:
  7207  0C43  083D               	movf	___fldiv@b+3,w
  7208  0C44  00B9               	movwf	?___fldiv+3
  7209  0C45  083C               	movf	___fldiv@b+2,w
  7210  0C46  00B8               	movwf	?___fldiv+2
  7211  0C47  083B               	movf	___fldiv@b+1,w
  7212  0C48  00B7               	movwf	?___fldiv+1
  7213  0C49  083A               	movf	___fldiv@b,w
  7214  0C4A  00B6               	movwf	?___fldiv
  7215  0C4B  2DAB               	goto	l756
  7216  0C4C                     l2117:
  7217  0C4C  084E               	movf	___fldiv@bexp,w
  7218  0C4D  1D03               	btfss	3,2
  7219  0C4E  2C50               	goto	u2171
  7220  0C4F  2C51               	goto	u2170
  7221  0C50                     u2171:
  7222  0C50  2C5A               	goto	l2123
  7223  0C51                     u2170:
  7224  0C51                     l2119:
  7225  0C51  3000               	movlw	0
  7226  0C52  00B9               	movwf	?___fldiv+3
  7227  0C53  3000               	movlw	0
  7228  0C54  00B8               	movwf	?___fldiv+2
  7229  0C55  3000               	movlw	0
  7230  0C56  00B7               	movwf	?___fldiv+1
  7231  0C57  3000               	movlw	0
  7232  0C58  00B6               	movwf	?___fldiv
  7233  0C59  2DAB               	goto	l756
  7234  0C5A                     l2123:
  7235  0C5A  084E               	movf	___fldiv@bexp,w
  7236  0C5B  00BE               	movwf	??___fldiv
  7237  0C5C  01BF               	clrf	??___fldiv+1
  7238  0C5D  083F               	movf	??___fldiv+1,w
  7239  0C5E  00C1               	movwf	??___fldiv+3
  7240  0C5F  084F               	movf	___fldiv@aexp,w
  7241  0C60  023E               	subwf	??___fldiv,w
  7242  0C61  00C0               	movwf	??___fldiv+2
  7243  0C62  1C03               	skipc
  7244  0C63  03C1               	decf	??___fldiv+3,f
  7245  0C64  0840               	movf	??___fldiv+2,w
  7246  0C65  3E7F               	addlw	127
  7247  0C66  00C8               	movwf	___fldiv@new_exp
  7248  0C67  0841               	movf	??___fldiv+3,w
  7249  0C68  1803               	skipnc
  7250  0C69  3E01               	addlw	1
  7251  0C6A  3E00               	addlw	0
  7252  0C6B  00C9               	movwf	___fldiv@new_exp+1
  7253  0C6C                     l2125:
  7254  0C6C  083D               	movf	___fldiv@b+3,w
  7255  0C6D  00C6               	movwf	___fldiv@rem+3
  7256  0C6E  083C               	movf	___fldiv@b+2,w
  7257  0C6F  00C5               	movwf	___fldiv@rem+2
  7258  0C70  083B               	movf	___fldiv@b+1,w
  7259  0C71  00C4               	movwf	___fldiv@rem+1
  7260  0C72  083A               	movf	___fldiv@b,w
  7261  0C73  00C3               	movwf	___fldiv@rem
  7262  0C74                     l2127:
  7263  0C74  3000               	movlw	0
  7264  0C75  00BD               	movwf	___fldiv@b+3
  7265  0C76  3000               	movlw	0
  7266  0C77  00BC               	movwf	___fldiv@b+2
  7267  0C78  3000               	movlw	0
  7268  0C79  00BB               	movwf	___fldiv@b+1
  7269  0C7A  3000               	movlw	0
  7270  0C7B  00BA               	movwf	___fldiv@b
  7271  0C7C                     l2129:
  7272  0C7C  3000               	movlw	0
  7273  0C7D  00CD               	movwf	___fldiv@grs+3
  7274  0C7E  3000               	movlw	0
  7275  0C7F  00CC               	movwf	___fldiv@grs+2
  7276  0C80  3000               	movlw	0
  7277  0C81  00CB               	movwf	___fldiv@grs+1
  7278  0C82  3000               	movlw	0
  7279  0C83  00CA               	movwf	___fldiv@grs
  7280  0C84                     l2131:
  7281  0C84  01CF               	clrf	___fldiv@aexp
  7282  0C85  2CD0               	goto	l2151
  7283  0C86                     l2133:
  7284  0C86  084F               	movf	___fldiv@aexp,w
  7285  0C87  1903               	btfsc	3,2
  7286  0C88  2C8A               	goto	u2181
  7287  0C89  2C8B               	goto	u2180
  7288  0C8A                     u2181:
  7289  0C8A  2CAB               	goto	l2143
  7290  0C8B                     u2180:
  7291  0C8B                     l2135:
  7292  0C8B  3001               	movlw	1
  7293  0C8C  00BE               	movwf	??___fldiv
  7294  0C8D                     u2195:
  7295  0C8D  1003               	clrc
  7296  0C8E  0DC3               	rlf	___fldiv@rem,f
  7297  0C8F  0DC4               	rlf	___fldiv@rem+1,f
  7298  0C90  0DC5               	rlf	___fldiv@rem+2,f
  7299  0C91  0DC6               	rlf	___fldiv@rem+3,f
  7300  0C92  0BBE               	decfsz	??___fldiv,f
  7301  0C93  2C8D               	goto	u2195
  7302  0C94  3001               	movlw	1
  7303  0C95  00BE               	movwf	??___fldiv
  7304  0C96                     u2205:
  7305  0C96  1003               	clrc
  7306  0C97  0DBA               	rlf	___fldiv@b,f
  7307  0C98  0DBB               	rlf	___fldiv@b+1,f
  7308  0C99  0DBC               	rlf	___fldiv@b+2,f
  7309  0C9A  0DBD               	rlf	___fldiv@b+3,f
  7310  0C9B  0BBE               	decfsz	??___fldiv,f
  7311  0C9C  2C96               	goto	u2205
  7312  0C9D                     l2137:
  7313  0C9D  1FCD               	btfss	___fldiv@grs+3,7
  7314  0C9E  2CA0               	goto	u2211
  7315  0C9F  2CA1               	goto	u2210
  7316  0CA0                     u2211:
  7317  0CA0  2CA2               	goto	l2141
  7318  0CA1                     u2210:
  7319  0CA1                     l2139:
  7320  0CA1  143A               	bsf	___fldiv@b,0
  7321  0CA2                     l2141:
  7322  0CA2  3001               	movlw	1
  7323  0CA3  00BE               	movwf	??___fldiv
  7324  0CA4                     u2225:
  7325  0CA4  1003               	clrc
  7326  0CA5  0DCA               	rlf	___fldiv@grs,f
  7327  0CA6  0DCB               	rlf	___fldiv@grs+1,f
  7328  0CA7  0DCC               	rlf	___fldiv@grs+2,f
  7329  0CA8  0DCD               	rlf	___fldiv@grs+3,f
  7330  0CA9  0BBE               	decfsz	??___fldiv,f
  7331  0CAA  2CA4               	goto	u2225
  7332  0CAB                     l2143:
  7333  0CAB  0839               	movf	___fldiv@a+3,w
  7334  0CAC  0246               	subwf	___fldiv@rem+3,w
  7335  0CAD  1D03               	skipz
  7336  0CAE  2CB9               	goto	u2235
  7337  0CAF  0838               	movf	___fldiv@a+2,w
  7338  0CB0  0245               	subwf	___fldiv@rem+2,w
  7339  0CB1  1D03               	skipz
  7340  0CB2  2CB9               	goto	u2235
  7341  0CB3  0837               	movf	___fldiv@a+1,w
  7342  0CB4  0244               	subwf	___fldiv@rem+1,w
  7343  0CB5  1D03               	skipz
  7344  0CB6  2CB9               	goto	u2235
  7345  0CB7  0836               	movf	___fldiv@a,w
  7346  0CB8  0243               	subwf	___fldiv@rem,w
  7347  0CB9                     u2235:
  7348  0CB9  1C03               	skipc
  7349  0CBA  2CBC               	goto	u2231
  7350  0CBB  2CBD               	goto	u2230
  7351  0CBC                     u2231:
  7352  0CBC  2CCC               	goto	l2149
  7353  0CBD                     u2230:
  7354  0CBD                     l2145:
  7355  0CBD  174D               	bsf	___fldiv@grs+3,6
  7356  0CBE                     l2147:
  7357  0CBE  0836               	movf	___fldiv@a,w
  7358  0CBF  02C3               	subwf	___fldiv@rem,f
  7359  0CC0  0837               	movf	___fldiv@a+1,w
  7360  0CC1  1C03               	skipc
  7361  0CC2  0F37               	incfsz	___fldiv@a+1,w
  7362  0CC3  02C4               	subwf	___fldiv@rem+1,f
  7363  0CC4  0838               	movf	___fldiv@a+2,w
  7364  0CC5  1C03               	skipc
  7365  0CC6  0F38               	incfsz	___fldiv@a+2,w
  7366  0CC7  02C5               	subwf	___fldiv@rem+2,f
  7367  0CC8  0839               	movf	___fldiv@a+3,w
  7368  0CC9  1C03               	skipc
  7369  0CCA  0F39               	incfsz	___fldiv@a+3,w
  7370  0CCB  02C6               	subwf	___fldiv@rem+3,f
  7371  0CCC                     l2149:
  7372  0CCC  3001               	movlw	1
  7373  0CCD  00BE               	movwf	??___fldiv
  7374  0CCE  083E               	movf	??___fldiv,w
  7375  0CCF  07CF               	addwf	___fldiv@aexp,f
  7376  0CD0                     l2151:
  7377  0CD0  301A               	movlw	26
  7378  0CD1  024F               	subwf	___fldiv@aexp,w
  7379  0CD2  1C03               	skipc
  7380  0CD3  2CD5               	goto	u2241
  7381  0CD4  2CD6               	goto	u2240
  7382  0CD5                     u2241:
  7383  0CD5  2C86               	goto	l2133
  7384  0CD6                     u2240:
  7385  0CD6                     l2153:
  7386  0CD6  0846               	movf	___fldiv@rem+3,w
  7387  0CD7  0445               	iorwf	___fldiv@rem+2,w
  7388  0CD8  0444               	iorwf	___fldiv@rem+1,w
  7389  0CD9  0443               	iorwf	___fldiv@rem,w
  7390  0CDA  1903               	skipnz
  7391  0CDB  2CDD               	goto	u2251
  7392  0CDC  2CDE               	goto	u2250
  7393  0CDD                     u2251:
  7394  0CDD  2CFD               	goto	l2167
  7395  0CDE                     u2250:
  7396  0CDE                     l2155:
  7397  0CDE  144A               	bsf	___fldiv@grs,0
  7398  0CDF  2CFD               	goto	l2167
  7399  0CE0                     l2157:
  7400  0CE0  3001               	movlw	1
  7401  0CE1  00BE               	movwf	??___fldiv
  7402  0CE2                     u2265:
  7403  0CE2  1003               	clrc
  7404  0CE3  0DBA               	rlf	___fldiv@b,f
  7405  0CE4  0DBB               	rlf	___fldiv@b+1,f
  7406  0CE5  0DBC               	rlf	___fldiv@b+2,f
  7407  0CE6  0DBD               	rlf	___fldiv@b+3,f
  7408  0CE7  0BBE               	decfsz	??___fldiv,f
  7409  0CE8  2CE2               	goto	u2265
  7410  0CE9                     l2159:
  7411  0CE9  1FCD               	btfss	___fldiv@grs+3,7
  7412  0CEA  2CEC               	goto	u2271
  7413  0CEB  2CED               	goto	u2270
  7414  0CEC                     u2271:
  7415  0CEC  2CEE               	goto	l2163
  7416  0CED                     u2270:
  7417  0CED                     l2161:
  7418  0CED  143A               	bsf	___fldiv@b,0
  7419  0CEE                     l2163:
  7420  0CEE  3001               	movlw	1
  7421  0CEF  00BE               	movwf	??___fldiv
  7422  0CF0                     u2285:
  7423  0CF0  1003               	clrc
  7424  0CF1  0DCA               	rlf	___fldiv@grs,f
  7425  0CF2  0DCB               	rlf	___fldiv@grs+1,f
  7426  0CF3  0DCC               	rlf	___fldiv@grs+2,f
  7427  0CF4  0DCD               	rlf	___fldiv@grs+3,f
  7428  0CF5  0BBE               	decfsz	??___fldiv,f
  7429  0CF6  2CF0               	goto	u2285
  7430  0CF7                     l2165:
  7431  0CF7  30FF               	movlw	255
  7432  0CF8  07C8               	addwf	___fldiv@new_exp,f
  7433  0CF9  1803               	skipnc
  7434  0CFA  0AC9               	incf	___fldiv@new_exp+1,f
  7435  0CFB  30FF               	movlw	255
  7436  0CFC  07C9               	addwf	___fldiv@new_exp+1,f
  7437  0CFD                     l2167:
  7438  0CFD  1FBC               	btfss	___fldiv@b+2,7
  7439  0CFE  2D00               	goto	u2291
  7440  0CFF  2D01               	goto	u2290
  7441  0D00                     u2291:
  7442  0D00  2CE0               	goto	l2157
  7443  0D01                     u2290:
  7444  0D01                     l2169:
  7445  0D01  01CF               	clrf	___fldiv@aexp
  7446  0D02                     l2171:
  7447  0D02  1FCD               	btfss	___fldiv@grs+3,7
  7448  0D03  2D05               	goto	u2301
  7449  0D04  2D06               	goto	u2300
  7450  0D05                     u2301:
  7451  0D05  2D22               	goto	l2179
  7452  0D06                     u2300:
  7453  0D06                     l2173:
  7454  0D06  30FF               	movlw	255
  7455  0D07  054A               	andwf	___fldiv@grs,w
  7456  0D08  00BE               	movwf	??___fldiv
  7457  0D09  30FF               	movlw	255
  7458  0D0A  054B               	andwf	___fldiv@grs+1,w
  7459  0D0B  00BF               	movwf	??___fldiv+1
  7460  0D0C  30FF               	movlw	255
  7461  0D0D  054C               	andwf	___fldiv@grs+2,w
  7462  0D0E  00C0               	movwf	??___fldiv+2
  7463  0D0F  307F               	movlw	127
  7464  0D10  054D               	andwf	___fldiv@grs+3,w
  7465  0D11  00C1               	movwf	??___fldiv+3
  7466  0D12  0841               	movf	??___fldiv+3,w
  7467  0D13  0440               	iorwf	??___fldiv+2,w
  7468  0D14  043F               	iorwf	??___fldiv+1,w
  7469  0D15  043E               	iorwf	??___fldiv,w
  7470  0D16  1903               	skipnz
  7471  0D17  2D19               	goto	u2311
  7472  0D18  2D1A               	goto	u2310
  7473  0D19                     u2311:
  7474  0D19  2D1D               	goto	l770
  7475  0D1A                     u2310:
  7476  0D1A                     l2175:
  7477  0D1A  01CF               	clrf	___fldiv@aexp
  7478  0D1B  0ACF               	incf	___fldiv@aexp,f
  7479  0D1C  2D22               	goto	l2179
  7480  0D1D                     l770:
  7481  0D1D  1C3A               	btfss	___fldiv@b,0
  7482  0D1E  2D20               	goto	u2321
  7483  0D1F  2D21               	goto	u2320
  7484  0D20                     u2321:
  7485  0D20  2D22               	goto	l2179
  7486  0D21                     u2320:
  7487  0D21  2D1A               	goto	l2175
  7488  0D22                     l2179:
  7489  0D22  084F               	movf	___fldiv@aexp,w
  7490  0D23  1903               	btfsc	3,2
  7491  0D24  2D26               	goto	u2331
  7492  0D25  2D27               	goto	u2330
  7493  0D26                     u2331:
  7494  0D26  2D58               	goto	l2189
  7495  0D27                     u2330:
  7496  0D27                     l2181:
  7497  0D27  3001               	movlw	1
  7498  0D28  07BA               	addwf	___fldiv@b,f
  7499  0D29  3000               	movlw	0
  7500  0D2A  1803               	skipnc
  7501  0D2B  3001               	movlw	1
  7502  0D2C  07BB               	addwf	___fldiv@b+1,f
  7503  0D2D  3000               	movlw	0
  7504  0D2E  1803               	skipnc
  7505  0D2F  3001               	movlw	1
  7506  0D30  07BC               	addwf	___fldiv@b+2,f
  7507  0D31  3000               	movlw	0
  7508  0D32  1803               	skipnc
  7509  0D33  3001               	movlw	1
  7510  0D34  07BD               	addwf	___fldiv@b+3,f
  7511  0D35                     l2183:
  7512  0D35  1C3D               	btfss	___fldiv@b+3,0
  7513  0D36  2D38               	goto	u2341
  7514  0D37  2D39               	goto	u2340
  7515  0D38                     u2341:
  7516  0D38  2D58               	goto	l2189
  7517  0D39                     u2340:
  7518  0D39                     l2185:
  7519  0D39  083A               	movf	___fldiv@b,w
  7520  0D3A  00BE               	movwf	??___fldiv
  7521  0D3B  083B               	movf	___fldiv@b+1,w
  7522  0D3C  00BF               	movwf	??___fldiv+1
  7523  0D3D  083C               	movf	___fldiv@b+2,w
  7524  0D3E  00C0               	movwf	??___fldiv+2
  7525  0D3F  083D               	movf	___fldiv@b+3,w
  7526  0D40  00C1               	movwf	??___fldiv+3
  7527  0D41  3001               	movlw	1
  7528  0D42  00C2               	movwf	??___fldiv+4
  7529  0D43                     u2355:
  7530  0D43  0D41               	rlf	??___fldiv+3,w
  7531  0D44  0CC1               	rrf	??___fldiv+3,f
  7532  0D45  0CC0               	rrf	??___fldiv+2,f
  7533  0D46  0CBF               	rrf	??___fldiv+1,f
  7534  0D47  0CBE               	rrf	??___fldiv,f
  7535  0D48                     u2350:
  7536  0D48  0BC2               	decfsz	??___fldiv+4,f
  7537  0D49  2D43               	goto	u2355
  7538  0D4A  0841               	movf	??___fldiv+3,w
  7539  0D4B  00BD               	movwf	___fldiv@b+3
  7540  0D4C  0840               	movf	??___fldiv+2,w
  7541  0D4D  00BC               	movwf	___fldiv@b+2
  7542  0D4E  083F               	movf	??___fldiv+1,w
  7543  0D4F  00BB               	movwf	___fldiv@b+1
  7544  0D50  083E               	movf	??___fldiv,w
  7545  0D51  00BA               	movwf	___fldiv@b
  7546  0D52                     l2187:
  7547  0D52  3001               	movlw	1
  7548  0D53  07C8               	addwf	___fldiv@new_exp,f
  7549  0D54  1803               	skipnc
  7550  0D55  0AC9               	incf	___fldiv@new_exp+1,f
  7551  0D56  3000               	movlw	0
  7552  0D57  07C9               	addwf	___fldiv@new_exp+1,f
  7553  0D58                     l2189:
  7554  0D58  0849               	movf	___fldiv@new_exp+1,w
  7555  0D59  3A80               	xorlw	128
  7556  0D5A  00FF               	movwf	btemp+1
  7557  0D5B  3080               	movlw	128
  7558  0D5C  027F               	subwf	btemp+1,w
  7559  0D5D  1D03               	skipz
  7560  0D5E  2D61               	goto	u2365
  7561  0D5F  30FF               	movlw	255
  7562  0D60  0248               	subwf	___fldiv@new_exp,w
  7563  0D61                     u2365:
  7564  0D61  1C03               	skipc
  7565  0D62  2D64               	goto	u2361
  7566  0D63  2D65               	goto	u2360
  7567  0D64                     u2361:
  7568  0D64  2D73               	goto	l2193
  7569  0D65                     u2360:
  7570  0D65                     l2191:
  7571  0D65  30FF               	movlw	255
  7572  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  7573  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  7574  0D68  00C8               	movwf	___fldiv@new_exp
  7575  0D69  3000               	movlw	0
  7576  0D6A  00C9               	movwf	___fldiv@new_exp+1
  7577  0D6B  3000               	movlw	0
  7578  0D6C  00BD               	movwf	___fldiv@b+3
  7579  0D6D  3000               	movlw	0
  7580  0D6E  00BC               	movwf	___fldiv@b+2
  7581  0D6F  3000               	movlw	0
  7582  0D70  00BB               	movwf	___fldiv@b+1
  7583  0D71  3000               	movlw	0
  7584  0D72  00BA               	movwf	___fldiv@b
  7585  0D73                     l2193:
  7586  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  7587  0D74  1303               	bcf	3,6	;RP1=0, select bank0
  7588  0D75  0849               	movf	___fldiv@new_exp+1,w
  7589  0D76  3A80               	xorlw	128
  7590  0D77  00FF               	movwf	btemp+1
  7591  0D78  3080               	movlw	128
  7592  0D79  027F               	subwf	btemp+1,w
  7593  0D7A  1D03               	skipz
  7594  0D7B  2D7E               	goto	u2375
  7595  0D7C  3001               	movlw	1
  7596  0D7D  0248               	subwf	___fldiv@new_exp,w
  7597  0D7E                     u2375:
  7598  0D7E  1803               	skipnc
  7599  0D7F  2D81               	goto	u2371
  7600  0D80  2D82               	goto	u2370
  7601  0D81                     u2371:
  7602  0D81  2D8F               	goto	l776
  7603  0D82                     u2370:
  7604  0D82                     l2195:
  7605  0D82  1283               	bcf	3,5	;RP0=0, select bank0
  7606  0D83  1303               	bcf	3,6	;RP1=0, select bank0
  7607  0D84  01C8               	clrf	___fldiv@new_exp
  7608  0D85  01C9               	clrf	___fldiv@new_exp+1
  7609  0D86                     l2197:
  7610  0D86  3000               	movlw	0
  7611  0D87  00BD               	movwf	___fldiv@b+3
  7612  0D88  3000               	movlw	0
  7613  0D89  00BC               	movwf	___fldiv@b+2
  7614  0D8A  3000               	movlw	0
  7615  0D8B  00BB               	movwf	___fldiv@b+1
  7616  0D8C  3000               	movlw	0
  7617  0D8D  00BA               	movwf	___fldiv@b
  7618  0D8E                     l2199:
  7619  0D8E  01C7               	clrf	___fldiv@sign
  7620  0D8F                     l776:
  7621  0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  7622  0D90  1303               	bcf	3,6	;RP1=0, select bank0
  7623  0D91  0848               	movf	___fldiv@new_exp,w
  7624  0D92  00BE               	movwf	??___fldiv
  7625  0D93  083E               	movf	??___fldiv,w
  7626  0D94  00CE               	movwf	___fldiv@bexp
  7627  0D95                     l2201:
  7628  0D95  1C4E               	btfss	___fldiv@bexp,0
  7629  0D96  2D98               	goto	u2381
  7630  0D97  2D99               	goto	u2380
  7631  0D98                     u2381:
  7632  0D98  2D9B               	goto	l2205
  7633  0D99                     u2380:
  7634  0D99                     l2203:
  7635  0D99  17BC               	bsf	___fldiv@b+2,7
  7636  0D9A  2D9F               	goto	l778
  7637  0D9B                     l2205:
  7638  0D9B  307F               	movlw	127
  7639  0D9C  00BE               	movwf	??___fldiv
  7640  0D9D  083E               	movf	??___fldiv,w
  7641  0D9E  05BC               	andwf	___fldiv@b+2,f
  7642  0D9F                     l778:
  7643  0D9F  084E               	movf	___fldiv@bexp,w
  7644  0DA0  00BE               	movwf	??___fldiv
  7645  0DA1  1003               	clrc
  7646  0DA2  0C3E               	rrf	??___fldiv,w
  7647  0DA3  00BF               	movwf	??___fldiv+1
  7648  0DA4  083F               	movf	??___fldiv+1,w
  7649  0DA5  00BD               	movwf	___fldiv@b+3
  7650  0DA6  0847               	movf	___fldiv@sign,w
  7651  0DA7  00BE               	movwf	??___fldiv
  7652  0DA8  083E               	movf	??___fldiv,w
  7653  0DA9  04BD               	iorwf	___fldiv@b+3,f
  7654  0DAA  2C43               	goto	l2113
  7655  0DAB                     l756:
  7656  0DAB  0008               	return
  7657  0DAC                     __end_of___fldiv:
  7658                           
  7659                           	psect	text25
  7660  14D5                     __ptext25:	
  7661 ;; *************** function _serial_init *****************
  7662 ;; Defined at:
  7663 ;;		line 23 in file "serial.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;		None
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;		None
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  1    wreg      void 
  7670 ;; Registers used:
  7671 ;;		wreg
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7677 ;;      Params:         0       0       0       0       0
  7678 ;;      Locals:         0       0       0       0       0
  7679 ;;      Temps:          0       0       0       0       0
  7680 ;;      Totals:         0       0       0       0       0
  7681 ;;Total ram usage:        0 bytes
  7682 ;; Hardware stack levels used: 1
  7683 ;; Hardware stack levels required when called: 1
  7684 ;; This function calls:
  7685 ;;		Nothing
  7686 ;; This function is called by:
  7687 ;;		_main
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691  14D5                     _serial_init:	
  7692                           ;psect for function _serial_init
  7693                           
  7694  14D5                     l2783:	
  7695                           ;incstack = 0
  7696                           ; Regs used in _serial_init: [wreg]
  7697                           
  7698                           
  7699                           ;serial.c: 28:     SPBRG = 12;
  7700  14D5  300C               	movlw	12
  7701  14D6  1683               	bsf	3,5	;RP0=1, select bank1
  7702  14D7  1303               	bcf	3,6	;RP1=0, select bank1
  7703  14D8  0099               	movwf	25	;volatile
  7704  14D9                     l2785:
  7705                           
  7706                           ;serial.c: 30:     TXSTAbits.TX9 = 0;
  7707  14D9  1318               	bcf	24,6	;volatile
  7708  14DA                     l2787:
  7709                           
  7710                           ;serial.c: 31:     TXSTAbits.TXEN = 1;
  7711  14DA  1698               	bsf	24,5	;volatile
  7712  14DB                     l2789:
  7713                           
  7714                           ;serial.c: 32:     TXSTAbits.SYNC = 0;
  7715  14DB  1218               	bcf	24,4	;volatile
  7716  14DC                     l2791:
  7717                           
  7718                           ;serial.c: 33:     TXSTAbits.BRGH = 1;
  7719  14DC  1518               	bsf	24,2	;volatile
  7720  14DD                     l2793:
  7721                           
  7722                           ;serial.c: 35:     RCSTAbits.SPEN = 1;
  7723  14DD  1283               	bcf	3,5	;RP0=0, select bank0
  7724  14DE  1303               	bcf	3,6	;RP1=0, select bank0
  7725  14DF  1798               	bsf	24,7	;volatile
  7726  14E0                     l2795:
  7727                           
  7728                           ;serial.c: 36:     RCSTAbits.RX9 = 0;
  7729  14E0  1318               	bcf	24,6	;volatile
  7730  14E1                     l2797:
  7731                           
  7732                           ;serial.c: 37:     RCSTAbits.CREN = 1;
  7733  14E1  1618               	bsf	24,4	;volatile
  7734  14E2                     l228:
  7735  14E2  0008               	return
  7736  14E3                     __end_of_serial_init:
  7737                           
  7738                           	psect	text26
  7739  1732                     __ptext26:	
  7740 ;; *************** function _lcd_init *****************
  7741 ;; Defined at:
  7742 ;;		line 51 in file "lcd.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;		None
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;		None
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      void 
  7749 ;; Registers used:
  7750 ;;		wreg, status,2, status,0, pclath, cstack
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7756 ;;      Params:         0       0       0       0       0
  7757 ;;      Locals:         0       0       0       0       0
  7758 ;;      Temps:          2       0       0       0       0
  7759 ;;      Totals:         2       0       0       0       0
  7760 ;;Total ram usage:        2 bytes
  7761 ;; Hardware stack levels used: 1
  7762 ;; Hardware stack levels required when called: 3
  7763 ;; This function calls:
  7764 ;;		_lcd_cmd
  7765 ;; This function is called by:
  7766 ;;		_main
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770  1732                     _lcd_init:	
  7771                           ;psect for function _lcd_init
  7772                           
  7773  1732                     l2799:	
  7774                           ;incstack = 0
  7775                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  7776                           
  7777                           
  7778                           ;lcd.c: 53:  PORTEbits.RE1=0;
  7779  1732  1283               	bcf	3,5	;RP0=0, select bank0
  7780  1733  1303               	bcf	3,6	;RP1=0, select bank0
  7781  1734  1089               	bcf	9,1	;volatile
  7782                           
  7783                           ;lcd.c: 54:  PORTEbits.RE0=0;
  7784  1735  1009               	bcf	9,0	;volatile
  7785  1736                     l2801:
  7786                           
  7787                           ;lcd.c: 55:  _delay((unsigned long)((20)*(4000000/4000.0)));
  7788  1736  301A               	movlw	26
  7789  1737  00F7               	movwf	??_lcd_init+1
  7790  1738  30F8               	movlw	248
  7791  1739  00F6               	movwf	??_lcd_init
  7792  173A                     u4767:
  7793  173A  0BF6               	decfsz	??_lcd_init,f
  7794  173B  2F3A               	goto	u4767
  7795  173C  0BF7               	decfsz	??_lcd_init+1,f
  7796  173D  2F3A               	goto	u4767
  7797  173E  0000               	nop
  7798  173F                     l2803:
  7799                           
  7800                           ;lcd.c: 56:  PORTEbits.RE1=1;
  7801  173F  1283               	bcf	3,5	;RP0=0, select bank0
  7802  1740  1303               	bcf	3,6	;RP1=0, select bank0
  7803  1741  1489               	bsf	9,1	;volatile
  7804  1742                     l2805:
  7805                           
  7806                           ;lcd.c: 58:  lcd_cmd(0x38);
  7807  1742  3038               	movlw	56
  7808  1743  160A  118A  252F  160A  118A  	fcall	_lcd_cmd
  7809  1748                     l2807:
  7810                           
  7811                           ;lcd.c: 59:  _delay((unsigned long)((5)*(4000000/4000.0)));
  7812  1748  3007               	movlw	7
  7813  1749  00F7               	movwf	??_lcd_init+1
  7814  174A  307D               	movlw	125
  7815  174B  00F6               	movwf	??_lcd_init
  7816  174C                     u4777:
  7817  174C  0BF6               	decfsz	??_lcd_init,f
  7818  174D  2F4C               	goto	u4777
  7819  174E  0BF7               	decfsz	??_lcd_init+1,f
  7820  174F  2F4C               	goto	u4777
  7821                           
  7822                           ;lcd.c: 60:  lcd_cmd(0x38);
  7823  1750  3038               	movlw	56
  7824  1751  160A  118A  252F  160A  118A  	fcall	_lcd_cmd
  7825  1756                     l2809:
  7826                           
  7827                           ;lcd.c: 61:     _delay((unsigned long)((1)*(4000000/4000.0)));
  7828  1756  30C7               	movlw	199
  7829  1757  00F6               	movwf	??_lcd_init
  7830  1758                     u4787:
  7831  1758  2F59               	nop2
  7832  1759  0BF6               	decfsz	??_lcd_init,f
  7833  175A  2F58               	goto	u4787
  7834  175B  2F5C               	nop2
  7835  175C  2F5D               	nop2
  7836  175D                     l2811:
  7837                           
  7838                           ;lcd.c: 62:  lcd_cmd(0x38);
  7839  175D  3038               	movlw	56
  7840  175E  160A  118A  252F  160A  118A  	fcall	_lcd_cmd
  7841  1763                     l2813:
  7842                           
  7843                           ;lcd.c: 63:  lcd_cmd(0x08);
  7844  1763  3008               	movlw	8
  7845  1764  160A  118A  252F  160A  118A  	fcall	_lcd_cmd
  7846  1769                     l2815:
  7847                           
  7848                           ;lcd.c: 64:  lcd_cmd(0x0F);
  7849  1769  300F               	movlw	15
  7850  176A  160A  118A  252F  160A  118A  	fcall	_lcd_cmd
  7851  176F                     l2817:
  7852                           
  7853                           ;lcd.c: 65:  lcd_cmd(0x01);
  7854  176F  3001               	movlw	1
  7855  1770  160A  118A  252F  160A  118A  	fcall	_lcd_cmd
  7856  1775                     l2819:
  7857                           
  7858                           ;lcd.c: 66:  lcd_cmd(0x38);
  7859  1775  3038               	movlw	56
  7860  1776  160A  118A  252F  160A  118A  	fcall	_lcd_cmd
  7861  177B                     l2821:
  7862                           
  7863                           ;lcd.c: 67:     lcd_cmd(0x80);
  7864  177B  3080               	movlw	128
  7865  177C  160A  118A  252F  160A  118A  	fcall	_lcd_cmd
  7866  1781                     l273:
  7867  1781  0008               	return
  7868  1782                     __end_of_lcd_init:
  7869                           
  7870                           	psect	text27
  7871  152F                     __ptext27:	
  7872 ;; *************** function _lcd_cmd *****************
  7873 ;; Defined at:
  7874 ;;		line 29 in file "lcd.c"
  7875 ;; Parameters:    Size  Location     Type
  7876 ;;  val             1    wreg     unsigned char 
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;  val             1    5[COMMON] unsigned char 
  7879 ;; Return value:  Size  Location     Type
  7880 ;;                  1    wreg      void 
  7881 ;; Registers used:
  7882 ;;		wreg, status,2, status,0, pclath, cstack
  7883 ;; Tracked objects:
  7884 ;;		On entry : 0/0
  7885 ;;		On exit  : 0/0
  7886 ;;		Unchanged: 0/0
  7887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7888 ;;      Params:         0       0       0       0       0
  7889 ;;      Locals:         1       0       0       0       0
  7890 ;;      Temps:          2       0       0       0       0
  7891 ;;      Totals:         3       0       0       0       0
  7892 ;;Total ram usage:        3 bytes
  7893 ;; Hardware stack levels used: 1
  7894 ;; Hardware stack levels required when called: 2
  7895 ;; This function calls:
  7896 ;;		_lcd_wr
  7897 ;; This function is called by:
  7898 ;;		_telaUmTexto
  7899 ;;		_criasetpoint
  7900 ;;		_EtapaCinco
  7901 ;;		_lcd_init
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905  152F                     _lcd_cmd:	
  7906                           ;psect for function _lcd_cmd
  7907                           
  7908                           
  7909                           ;incstack = 0
  7910                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  7911                           ;lcd_cmd@val stored from wreg
  7912  152F  00F5               	movwf	lcd_cmd@val
  7913  1530                     l2007:
  7914                           
  7915                           ;lcd.c: 29: void lcd_cmd(unsigned char val);lcd.c: 30: {;lcd.c: 31:  PORTEbits.RE1=1;
  7916  1530  1283               	bcf	3,5	;RP0=0, select bank0
  7917  1531  1303               	bcf	3,6	;RP1=0, select bank0
  7918  1532  1489               	bsf	9,1	;volatile
  7919  1533                     l2009:
  7920                           
  7921                           ;lcd.c: 32:         lcd_wr(val);
  7922  1533  0875               	movf	lcd_cmd@val,w
  7923  1534  160A  118A  24BB  160A  118A  	fcall	_lcd_wr
  7924  1539                     l2011:
  7925                           
  7926                           ;lcd.c: 33:         PORTEbits.RE0=0;
  7927  1539  1283               	bcf	3,5	;RP0=0, select bank0
  7928  153A  1303               	bcf	3,6	;RP1=0, select bank0
  7929  153B  1009               	bcf	9,0	;volatile
  7930  153C                     l2013:
  7931                           
  7932                           ;lcd.c: 34:         _delay((unsigned long)((3)*(4000000/4000.0)));
  7933  153C  3004               	movlw	4
  7934  153D  00F4               	movwf	??_lcd_cmd+1
  7935  153E  30E4               	movlw	228
  7936  153F  00F3               	movwf	??_lcd_cmd
  7937  1540                     u4797:
  7938  1540  0BF3               	decfsz	??_lcd_cmd,f
  7939  1541  2D40               	goto	u4797
  7940  1542  0BF4               	decfsz	??_lcd_cmd+1,f
  7941  1543  2D40               	goto	u4797
  7942  1544  0000               	nop
  7943  1545                     l2015:
  7944                           
  7945                           ;lcd.c: 35:         PORTEbits.RE1=0;
  7946  1545  1283               	bcf	3,5	;RP0=0, select bank0
  7947  1546  1303               	bcf	3,6	;RP1=0, select bank0
  7948  1547  1089               	bcf	9,1	;volatile
  7949  1548                     l2017:
  7950                           
  7951                           ;lcd.c: 36:         _delay((unsigned long)((3)*(4000000/4000.0)));
  7952  1548  3004               	movlw	4
  7953  1549  00F4               	movwf	??_lcd_cmd+1
  7954  154A  30E4               	movlw	228
  7955  154B  00F3               	movwf	??_lcd_cmd
  7956  154C                     u4807:
  7957  154C  0BF3               	decfsz	??_lcd_cmd,f
  7958  154D  2D4C               	goto	u4807
  7959  154E  0BF4               	decfsz	??_lcd_cmd+1,f
  7960  154F  2D4C               	goto	u4807
  7961  1550  0000               	nop
  7962  1551                     l2019:
  7963                           
  7964                           ;lcd.c: 37:  PORTEbits.RE1=1;
  7965  1551  1283               	bcf	3,5	;RP0=0, select bank0
  7966  1552  1303               	bcf	3,6	;RP1=0, select bank0
  7967  1553  1489               	bsf	9,1	;volatile
  7968  1554                     l267:
  7969  1554  0008               	return
  7970  1555                     __end_of_lcd_cmd:
  7971                           
  7972                           	psect	text28
  7973  14BB                     __ptext28:	
  7974 ;; *************** function _lcd_wr *****************
  7975 ;; Defined at:
  7976 ;;		line 24 in file "lcd.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;  val             1    wreg     unsigned char 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  val             1    2[COMMON] unsigned char 
  7981 ;; Return value:  Size  Location     Type
  7982 ;;                  1    wreg      void 
  7983 ;; Registers used:
  7984 ;;		wreg
  7985 ;; Tracked objects:
  7986 ;;		On entry : 0/0
  7987 ;;		On exit  : 0/0
  7988 ;;		Unchanged: 0/0
  7989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7990 ;;      Params:         0       0       0       0       0
  7991 ;;      Locals:         1       0       0       0       0
  7992 ;;      Temps:          0       0       0       0       0
  7993 ;;      Totals:         1       0       0       0       0
  7994 ;;Total ram usage:        1 bytes
  7995 ;; Hardware stack levels used: 1
  7996 ;; Hardware stack levels required when called: 1
  7997 ;; This function calls:
  7998 ;;		Nothing
  7999 ;; This function is called by:
  8000 ;;		_lcd_cmd
  8001 ;;		_lcd_dat
  8002 ;; This function uses a non-reentrant model
  8003 ;;
  8004                           
  8005  14BB                     _lcd_wr:	
  8006                           ;psect for function _lcd_wr
  8007                           
  8008                           
  8009                           ;incstack = 0
  8010                           ; Regs used in _lcd_wr: [wreg]
  8011                           ;lcd_wr@val stored from wreg
  8012  14BB  00F2               	movwf	lcd_wr@val
  8013  14BC                     l1921:
  8014                           
  8015                           ;lcd.c: 24: void lcd_wr(unsigned char val);lcd.c: 25: {;lcd.c: 26:   PORTD=val;
  8016  14BC  0872               	movf	lcd_wr@val,w
  8017  14BD  1283               	bcf	3,5	;RP0=0, select bank0
  8018  14BE  1303               	bcf	3,6	;RP1=0, select bank0
  8019  14BF  0088               	movwf	8	;volatile
  8020  14C0                     l264:
  8021  14C0  0008               	return
  8022  14C1                     __end_of_lcd_wr:
  8023                           
  8024                           	psect	text29
  8025  1503                     __ptext29:	
  8026 ;; *************** function _RB0_RET *****************
  8027 ;; Defined at:
  8028 ;;		line 103 in file "Serial_Tank.c"
  8029 ;; Parameters:    Size  Location     Type
  8030 ;;		None
  8031 ;; Auto vars:     Size  Location     Type
  8032 ;;		None
  8033 ;; Return value:  Size  Location     Type
  8034 ;;                  1    wreg      void 
  8035 ;; Registers used:
  8036 ;;		wreg, status,2, status,0
  8037 ;; Tracked objects:
  8038 ;;		On entry : 0/0
  8039 ;;		On exit  : 0/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8042 ;;      Params:         0       0       0       0       0
  8043 ;;      Locals:         0       0       0       0       0
  8044 ;;      Temps:          2       0       0       0       0
  8045 ;;      Totals:         2       0       0       0       0
  8046 ;;Total ram usage:        2 bytes
  8047 ;; Hardware stack levels used: 1
  8048 ;; This function calls:
  8049 ;;		Nothing
  8050 ;; This function is called by:
  8051 ;;		Interrupt level 1
  8052 ;; This function uses a non-reentrant model
  8053 ;;
  8054                           
  8055  1503                     _RB0_RET:	
  8056                           ;psect for function _RB0_RET
  8057                           
  8058  1503                     i1l2867:
  8059                           
  8060                           ;Serial_Tank.c: 104:     if (INTF && enableRB0)
  8061  1503  1C8B               	btfss	11,1	;volatile
  8062  1504  2D06               	goto	u360_21
  8063  1505  2D07               	goto	u360_20
  8064  1506                     u360_21:
  8065  1506  2D10               	goto	i1l91
  8066  1507                     u360_20:
  8067  1507                     i1l2869:
  8068  1507  1683               	bsf	3,5	;RP0=1, select bank1
  8069  1508  1303               	bcf	3,6	;RP1=0, select bank1
  8070  1509  0848               	movf	_enableRB0^(0+128),w
  8071  150A  1903               	btfsc	3,2
  8072  150B  2D0D               	goto	u361_21
  8073  150C  2D0E               	goto	u361_20
  8074  150D                     u361_21:
  8075  150D  2D10               	goto	i1l91
  8076  150E                     u361_20:
  8077  150E                     i1l2871:
  8078                           
  8079                           ;Serial_Tank.c: 105:         ret = 1;
  8080  150E  01C3               	clrf	_ret^(0+128)
  8081  150F  0AC3               	incf	_ret^(0+128),f
  8082  1510                     i1l91:
  8083                           
  8084                           ;Serial_Tank.c: 106:     INTF = 0;
  8085  1510  108B               	bcf	11,1	;volatile
  8086  1511                     i1l92:
  8087  1511  0871               	movf	??_RB0_RET+1,w
  8088  1512  008A               	movwf	10
  8089  1513  0E70               	swapf	??_RB0_RET,w
  8090  1514  0083               	movwf	3
  8091  1515  0EFE               	swapf	btemp,f
  8092  1516  0E7E               	swapf	btemp,w
  8093  1517  0009               	retfie
  8094  1518                     __end_of_RB0_RET:
  8095  007E                     btemp	set	126	;btemp
  8096  007E                     wtemp0	set	126
  8097                           
  8098                           	psect	intentry
  8099  0004                     __pintentry:	
  8100                           ;incstack = 0
  8101                           ; Regs used in _RB0_RET: [wreg+status,2+status,0]
  8102                           
  8103  0004                     interrupt_function:
  8104  007E                     saved_w	set	btemp
  8105  0004  00FE               	movwf	btemp
  8106  0005  0E03               	swapf	3,w
  8107  0006  00F0               	movwf	??_RB0_RET
  8108  0007  080A               	movf	10,w
  8109  0008  00F1               	movwf	??_RB0_RET+1
  8110  0009  160A  118A  2D03   	ljmp	_RB0_RET
  8111                           
  8112                           	psect	idloc
  8113                           
  8114                           ;Config register IDLOC0 @ 0x2000
  8115                           ;	unspecified, using default values
  8116  2000                     	org	8192
  8117  2000  3FFF               	dw	16383
  8118                           
  8119                           ;Config register IDLOC1 @ 0x2001
  8120                           ;	unspecified, using default values
  8121  2001                     	org	8193
  8122  2001  3FFF               	dw	16383
  8123                           
  8124                           ;Config register IDLOC2 @ 0x2002
  8125                           ;	unspecified, using default values
  8126  2002                     	org	8194
  8127  2002  3FFF               	dw	16383
  8128                           
  8129                           ;Config register IDLOC3 @ 0x2003
  8130                           ;	unspecified, using default values
  8131  2003                     	org	8195
  8132  2003  3FFF               	dw	16383
  8133                           
  8134                           	psect	config
  8135                           
  8136                           ;Config register CONFIG @ 0x2007
  8137                           ;	Oscillator Selection bits
  8138                           ;	FOSC = XT, XT oscillator
  8139                           ;	Watchdog Timer Enable bit
  8140                           ;	WDTE = OFF, WDT disabled
  8141                           ;	Power-up Timer Enable bit
  8142                           ;	PWRTE = OFF, PWRT disabled
  8143                           ;	Brown-out Reset Enable bit
  8144                           ;	BOREN = OFF, BOR disabled
  8145                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  8146                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  8147                           ;	Data EEPROM Memory Code Protection bit
  8148                           ;	CPD = OFF, Data EEPROM code protection off
  8149                           ;	Flash Program Memory Write Enable bits
  8150                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  8151                           ;	In-Circuit Debugger Mode bit
  8152                           ;	DEBUG = 0x1, unprogrammed default
  8153                           ;	Flash Program Memory Code Protection bit
  8154                           ;	CP = OFF, Code protection off
  8155  2007                     	org	8199
  8156  2007  3F39               	dw	16185

Data Sizes:
    Strings     110
    Constant    0
    Data        2
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     27      52
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    itoa@str	PTR unsigned char  size(1) Largest target is 6
		 -> buff(BANK1[6]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_22(CODE[16]), STR_21(CODE[2]), STR_20(CODE[7]), STR_19(CODE[2]), 
		 -> STR_18(CODE[5]), STR_17(CODE[17]), STR_16(CODE[9]), STR_15(CODE[16]), 
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[11]), STR_11(CODE[16]), 
		 -> STR_10(CODE[2]), STR_9(CODE[6]), STR_8(CODE[16]), STR_7(CODE[2]), 
		 -> STR_6(CODE[5]), STR_5(CODE[17]), STR_4(CODE[2]), STR_3(CODE[7]), 
		 -> STR_2(CODE[2]), buff(BANK1[6]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _telaUmTexto->_get_temperatura
    _telaUmTexto->_get_volume
    _telaUmTexto->_itoa
    _telaUmTexto->_lcd_str
    _EtapaCinco->_get_temperatura
    _EtapaCinco->_get_volume
    _EtapaCinco->_itoa
    _EtapaCinco->_lcd_str
    _get_volume->_serial_rx
    _get_temperatura->_serial_rx
    ___flge->_get_volume
    _criasetpoint->_itoa
    _criasetpoint->_lcd_str
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _itoa->___lwdiv
    ___lwdiv->___lwmod
    ___xxtofl->_get_volume
    ___fldiv->_get_volume
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr

Critical Paths under _RB0_RET in COMMON

    None.

Critical Paths under _main in BANK0

    _telaUmTexto->_itoa
    _automatico->_EtapaCinco
    _EtapaCinco->___flge
    ___flge->___fldiv
    _criasetpoint->___fltol
    _itoa->___lwdiv
    ___xxtofl->_get_volume
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _RB0_RET in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_telaUm
    _manual->_criasetpoint
    _configura->_criasetpoint
    _criasetpoint->___fltol

Critical Paths under _RB0_RET in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RB0_RET in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RB0_RET in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   55673
                                             26 BANK1      1     1      0
                       _eeprom_write
                           _lcd_init
                        _serial_init
                          _serial_tx
                             _telaUm
 ---------------------------------------------------------------------------------
 (1) _telaUm                                               2     2      0   54955
                                             24 BANK1      2     2      0
                         _automatico
                          _configura
                             _manual
                        _telaUmTexto
 ---------------------------------------------------------------------------------
 (2) _telaUmTexto                                          1     1      0    7169
                                             10 BANK0      1     1      0
                            ___lwdiv
                    _get_temperatura
                         _get_volume
                               _itoa
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _manual                                               0     0      0   23893
                         _automatico
                       _criasetpoint
 ---------------------------------------------------------------------------------
 (3) _automatico                                           4     4      0   10236
                                             65 BANK0      4     4      0
                         _EtapaCinco
                        _eeprom_read
                          _serial_tx
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _EtapaCinco                                           5     5      0   10192
                                             60 BANK0      5     5      0
                            ___fldiv
                             ___flge
                            ___lwdiv
                           ___xxtofl
                    _get_temperatura
                         _get_volume
                               _itoa
                            _lcd_cmd
                            _lcd_str
                          _serial_tx
 ---------------------------------------------------------------------------------
 (3) _get_volume                                          10     8      2     496
                                              8 COMMON     2     0      2
                                              0 BANK0      8     8      0
                          _serial_rx
                          _serial_tx
 ---------------------------------------------------------------------------------
 (3) _get_temperatura                                     10     8      2     496
                                              8 COMMON     2     0      2
                                              0 BANK0      8     8      0
                          _serial_rx
                          _serial_tx
 ---------------------------------------------------------------------------------
 (4) _serial_tx                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _serial_rx                                            6     4      2     372
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     334
                                             48 BANK0     12     4      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                         _get_volume (ARG)
 ---------------------------------------------------------------------------------
 (2) _configura                                            0     0      0   13657
                       _criasetpoint
 ---------------------------------------------------------------------------------
 (3) _criasetpoint                                        19    17      2   13657
                                              5 BANK1     19    17      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _eeprom_write
                               _itoa
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (3) _lcd_str                                              4     2      2    2262
                                              6 COMMON     4     2      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (4) _lcd_dat                                              3     3      0      44
                                              3 COMMON     3     3      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 4     1      3    2783
                                              9 COMMON     1     1      0
                                              7 BANK0      3     0      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     463
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4    1085
                                              8 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _eeprom_write                                         3     2      1     652
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     898
                                              8 BANK0     14    10      4
                         _get_volume (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     457
                                             74 BANK0      6     2      4
                                              0 BANK1      5     5      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    3713
                                             48 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1729
                                             22 BANK0     26    18      8
                           ___xxtofl (ARG)
                         _get_volume (ARG)
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      44
                                              6 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              3     3      0      44
                                              3 COMMON     3     3      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (5) _lcd_wr                                               1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _RB0_RET                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _eeprom_write
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _serial_init
   _serial_tx
   _telaUm
     _automatico
       _EtapaCinco
         ___fldiv
           ___xxtofl (ARG)
             _get_volume (ARG)
               _serial_rx
               _serial_tx
           _get_volume (ARG)
         ___flge
           ___fldiv (ARG)
           ___xxtofl (ARG)
           _get_volume (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___xxtofl
         _get_temperatura
           _serial_rx
           _serial_tx
         _get_volume
         _itoa
           ___lwdiv
           ___lwmod
         _lcd_cmd
         _lcd_str
           _lcd_dat
             _lcd_wr
         _serial_tx
       _eeprom_read
       _serial_tx
     _configura
       _criasetpoint
         ___fldiv
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _eeprom_write
         _itoa
         _lcd_cmd
         _lcd_str
     _manual
       _automatico
       _criasetpoint
     _telaUmTexto
       ___lwdiv
       _get_temperatura
       _get_volume
       _itoa
       _lcd_cmd
       _lcd_str

 _RB0_RET (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1B      34       7       65.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      90      12        0.0%
ABS                  0      0      90       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jun 14 17:36:35 2022

           ___fldiv@aexp 004F             ___fldiv@bexp 004E                        pc 0002  
           ___fldiv@sign 0047                       l97 17FD                       fsr 0004  
          ?_criasetpoint 00A5      __Umul8_16@word_mpld 0022                      l100 09D5  
                    l111 0A5E                      l120 0940                      l112 0A67  
                    l105 0A15                      l106 0A22                      l211 162F  
                    l140 018B                      l108 0A38                      l109 0A45  
                    l142 01AC                      l151 0202                      l135 0167  
                    l231 14CE                      l208 08B2                      l401 15FB  
                    l161 0260                      l145 0400                      l154 0222  
                    l138 018C                      l234 14D4                      l163 027C  
                    l251 1698                      l228 14E2                      l148 01DE  
                    l252 169E                      l245 1676                      l181 0DD5  
                    l270 157A                      l254 16A7                      l246 1688  
                    l182 0FF3                      l174 1502                      l159 0249  
                    l264 14C0                      l184 0E7C                      l273 1781  
                    l601 07FD                      l177 14F0                      l185 0FFF  
                    l282 16EB                      l267 1554                      l196 0FA5  
                    l197 0F8D                      l189 0EFB                      l198 0FF2  
                    l279 15CE                      l375 1519                      l800 06CD  
                    l377 152E                      l394 15D0                      l395 15D0  
                    l813 1591                      l806 0755                      l398 15EA  
                    l582 0AF9                      l815 15A3                      l591 07FD  
                    l583 0B12                      l840 0BCE                      l770 0D1D  
                    l754 0C2B                      l851 0B98                      l579 0A8D  
                    l756 0DAB                      l852 0BA4                      l844 0B7C  
                    l677 1731                      l598 07E8                      l838 0B37  
                    l687 1669                      l776 0D8F                      l778 0D9F  
                    l794 0761                      _GIE 005F                      _RB3 0033  
                    _ret 00C3                      fsr0 0004                      indf 0000  
           ___flmul@aexp 005E             ___flmul@bexp 0063             ___flmul@sign 005D  
           ___flmul@temp 0068             ___flmul@prod 0064          __end_of_RB0_RET 1518  
           ___fltol@exp1 006F                     l2001 165F                     l2011 1539  
                   l2003 1665                     l2013 153C                     l2101 0C18  
                   l2021 15A4                     l2015 1545                     l2007 1530  
                   l2111 0C3F                     l2103 0C20                     l2023 15A6  
                   l2017 1548                     l2009 1533                     l2201 0D95  
                   l2113 0C43                     l2105 0C21                     l2025 15B7  
                   l3001 0E1E                     l2019 1551                     l2203 0D99  
                   l2131 0C84                     l2123 0C5A                     l2107 0C23  
                   l2027 15BB                     l2051 0A85                     l3011 0E51  
                   l3003 0E27                     l2205 0D9B                     l2141 0CA2  
                   l2133 0C86                     l2125 0C6C                     l2109 0C33  
                   l2117 0C4C                     l3101 045B                     l2061 0AD5  
                   l2053 0AA1                     l3021 0E79                     l3013 0E5A  
                   l3005 0E30                     l2135 0C8B                     l2143 0CAB  
                   l2151 0CD0                     l2127 0C74                     l2119 0C51  
                   l2071 0BD6                     l3111 047E                     l3103 0460  
                   l2231 0B2F                     l2063 0B0F                     l2055 0AA9  
                   l3031 0EDC                     l3015 0E63                     l3007 0E39  
                   l2161 0CED                     l2153 0CD6                     l2145 0CBD  
                   l2137 0C9D                     l2129 0C7C                     l2081 0BEB  
                   l2073 0BDC                     l3201 0759                     l3121 050C  
                   l3113 048B                     l3105 0465                     l2241 0B5A  
                   l2233 0B3F                     l2225 0B16                     l2065 0B11  
                   l2057 0AAD                     l2049 0A6F                     l3041 0F36  
                   l3033 0EE9                     l3025 0E82                     l3017 0E69  
                   l3009 0E48                     l2171 0D02                     l2163 0CEE  
                   l2155 0CDE                     l2147 0CBE                     l2139 0CA1  
                   l2091 0C03                     l2083 0BF3                     l2075 0BE0  
                   l3131 056E                     l3123 0528                     l3115 04A8  
                   l2251 0B8E                     l2243 0B61                     l2227 0B1B  
                   l2059 0AD1                     l3051 0FB6                     l3043 0F4F  
                   l3035 0EEF                     l3027 0E86                     l3019 0E72  
                   l3211 08BE                     l2181 0D27                     l2173 0D06  
                   l2165 0CF7                     l2157 0CE0                     l2149 0CCC  
                   l2093 0C09                     l2085 0BF4                     l2077 0BE1  
                   l2069 0BCF                     l3141 05FE                     l3133 058B  
                   l3125 0531                     l3117 04C4                     l3109 046E  
                   l2413 07D5                     l2405 07B8                     l2261 0BC1  
                   l2253 0B92                     l2245 0B65                     l2237 0B48  
                   l2229 0B1F                     l3301 013B                     l3053 0FC7  
                   l3045 0F60                     l3037 0F0C                     l3029 0ED4  
                   l3221 090F                     l3213 08E1                     l3205 08B3  
                   l2191 0D65                     l2183 0D35                     l2175 0D1A  
                   l2159 0CE9                     l2167 0CFD                     l2095 0C0D  
                   l2079 0BE6                     l2087 0BF6                     l3151 0690  
                   l3143 062B                     l3135 05A4                     l3127 0541  
                   l3119 04F0                     l3071 0412                     l2415 07ED  
                   l2407 07CE                     l2263 0BC5                     l2255 0B9C  
                   l2247 0B73                     l2239 0B4D                     l2271 15DC  
                   l3311 017B                     l3303 0141                     l3055 0FD4  
                   l3039 0F25                     l3047 0F79                     l3063 0FF8  
                   l3231 0928                     l3223 0910                     l3215 08F5  
                   l3207 08B7                     l2193 0D73                     l2185 0D39  
                   l2169 0D01                     l2097 0C0E                     l2089 0BFE  
                   l3153 0699                     l3161 06AD                     l3145 0651  
                   l3137 05C1                     l3129 055E                     l3081 0427  
                   l3073 0413                     l3065 0401                     l2417 07F2  
                   l2265 0BC6                     l2257 0BA6                     l2249 0B83  
                   l2281 15F2                     l2273 15E2                     l3313 0181  
                   l3305 0147                     l3321 01B1                     l3241 002C  
                   l3057 0FE5                     l3049 0F81                     l3233 092E  
                   l3225 0916                     l3217 0909                     l3209 08B8  
                   l3401 0974                     l2195 0D82                     l2187 0D52  
                   l2179 0D22                     l2099 0C13                     l3163 06B1  
                   l3155 069D                     l3147 0679                     l3139 05EE  
                   l3091 043F                     l3083 042F                     l3075 0418  
                   l3067 0408                     l2259 0BBC                     l2283 15F3  
                   l2275 15E5                     l3331 01FB                     l3323 01B8  
                   l3315 0184                     l3307 0160                     l3251 0055  
                   l3243 0030                     l3059 0FF7                     l3235 0934  
                   l3227 091C                     l3219 090E                     l3411 09C6  
                   l3403 0981                     l2197 0D86                     l2189 0D58  
                   l3181 0702                     l3173 06D2                     l3165 06B2  
                   l3157 069E                     l3149 0682                     l3093 0444  
                   l3085 0434                     l3077 041D                     l3069 040E  
                   l2285 15F4                     l2277 15E9                     l2269 15D6  
                   l3341 0234                     l3333 0206                     l3325 01BE  
                   l3317 0190                     l3309 016B                     l3261 008F  
                   l3253 005E                     l3245 0034                     l3237 093A  
                   l3229 0922                     l3413 09CC                     l3405 098A  
                   l3501 17CD                     l2199 0D8E                     l3191 0739  
                   l3175 06D7                     l3183 0708                     l3167 06B6  
                   l3159 06A7                     l3095 0449                     l3087 043A  
                   l3079 0425                     l2391 07A1                     l2383 0762  
                   l2287 15FA                     l2279 15EE                     l3343 024D  
                   l3351 0281                     l3327 01D7                     l3271 00B9  
                   l3263 0098                     l3255 0077                     l3247 0043  
                   l3423 14E3                     l3415 14F1                     l3407 0993  
                   l3431 09E4                     l3503 17CE                     l1921 14BC  
                   l2801 1736                     l3193 073B                     l3185 0715  
                   l3177 06E5                     l3169 06CA                     l3097 0451  
                   l3089 043E                     l2393 07A2                     l2385 0773  
                   l3361 02E9                     l3353 0288                     l3345 025D  
                   l3329 01E2                     l3337 0227                     l3273 00D2  
                   l3257 0080                     l3249 0049                     l3265 009D  
                   l3425 14E7                     l2289 1520                     l3417 14F5  
                   l3409 099C                     l3441 09F8                     l3433 09E8  
                   l3505 17F8                     l2811 175D                     l2803 173F  
                   l3195 0749                     l3187 0720                     l3179 06E9  
                   l3099 0453                     l2395 07AA                     l3371 0306  
                   l3363 02ED                     l3355 0288                     l3347 0264  
                   l3339 022E                     l3291 0118                     l3275 00DB  
                   l3267 00A4                     l3283 00F4                     l3259 0089  
                   l1931 1679                     l1923 14CA                     l3419 14FD  
                   l3451 0A0F                     l3443 09FA                     l3435 09EA  
                   l2821 177B                     l2813 1763                     l2805 1742  
                   l3197 074D                     l3189 072F                     l2397 07AC  
                   l2389 077C                     l3381 03D9                     l3373 0363  
                   l3365 02F1                     l3357 0288                     l3293 0122  
                   l3285 00FB                     l3277 00E4                     l3269 00B0  
                   l1941 16A6                     l1933 1692                     l1925 166A  
                   l3461 0A3D                     l3453 0A1A                     l3445 09FF  
                   l3437 09EC                     l3429 09D6                     l2815 1769  
                   l2807 1748                     l3199 074E                     l2399 07B0  
                   l1951 1562                     l3383 03DD                     l3375 0367  
                   l3359 028E                     l3367 02F6                     l3295 012B  
                   l3287 0107                     l3279 00EA                     l3391 03F8  
                   l1935 16A4                     l1927 166C                     l3471 0A63  
                   l3463 0A4B                     l3455 0A28                     l3447 0A05  
                   l3439 09F1                     l2817 176F                     l2809 1756  
                   l2921 16F9                     l1953 156B                     l1945 1556  
                   l3385 03E7                     l3377 0372                     l3369 02FC  
                   l3297 0131                     l3289 0110                     l1929 1672  
                   l3393 0941                     l3465 0A52                     l3457 0A2F  
                   l3449 0A0C                     l3481 178F                     l3473 1782  
                   l2819 1775                     l2931 171F                     l2923 1700  
                   l2915 16EC                     l1955 156E                     l1947 1559  
                   l3387 03F3                     l3379 037C                     l3395 094D  
                   l3467 0A55                     l3459 0A32                     l3491 179E  
                   l3483 1790                     l3475 1786                     l2933 1720  
                   l2925 1704                     l2917 16F0                     l1957 1577  
                   l1949 155F                     l2941 087F                     l3397 0956  
                   l3469 0A5A                     l3493 17AA                     l3485 1791  
                   l3477 178B                     l2791 14DC                     l2783 14D5  
                   l2935 1727                     l2927 1708                     l2919 16F6  
                   l1991 1640                     l2951 16E7                     l2943 08A5  
                   l3399 095F                     l3495 17B6                     l3487 1792  
                   l3479 178E                     l2793 14DD                     l2785 14D9  
                   l2961 157E                     l2929 1719                     l2937 172D  
                   l1993 1644                     l1985 1630                     l2953 15FC  
                   l2945 08AE                     l3497 17C2                     l3489 1798  
                   l2795 14E0                     l2787 14DA                     l2971 159F  
                   l2963 1580                     l1995 1648                     l1987 1636  
                   l2955 1622                     l3499 17CA                     l2797 14E1  
                   l2789 14DB                     l2965 1587                     l1997 1652  
                   l1989 1639                     l2949 16A8                     l2957 162B  
                   l2981 0DC5                     l2799 1732                     l2967 158B  
                   l1999 1658                     l2991 0DE4                     l2983 0DD9  
                   l2975 0DAC                     l2969 159A                     l2993 0DEA  
                   l2985 0DDC                     l2977 0DB0                     l2995 0DF3  
                   l2987 0DDD                     l2979 0DBC                     l2997 0DFC  
                   l2989 0DDE                     l2999 0E11                     STR_1 086D  
                   STR_2 087A                     STR_3 0866                     STR_4 087C  
                   STR_5 0810                     STR_6 086D                     STR_7 087A  
                   STR_8 0842                     STR_9 0867                     u2010 1665  
                   u2011 1664                     u2100 0BE0                     u2020 15CE  
                   u2101 0BDF                     u2005 1659                     u2021 15CD  
                   u2110 0BE6                     u2030 0A85                     u2111 0BE5  
                   u2031 0A84                     u2120 0BEB                     u2040 0AA1  
                   u2121 0BEA                     u2041 0AA0                     u2210 0CA1  
                   u2130 0C0D                     u2050 0AAD                     u2211 0CA0  
                   u2131 0C0C                     u2051 0AAC                     u2300 0D06  
                   u2140 0C13                     u2301 0D05                     u2205 0C96  
                   u2141 0C12                     u2061 0ABC                     u2310 0D1A  
                   u2230 0CBD                     u2150 0C18                     u2070 0AD5  
                   u2062 0ABD                     u2311 0D19                     u2231 0CBC  
                   u2151 0C17                     u2071 0AD4                     u2063 0AC2  
                   u2320 0D21                     u2240 0CD6                     u2160 0C33  
                   u2064 0AC3                     u2321 0D20                     u2241 0CD5  
                   u2225 0CA4                     u2161 0C32                     u2081 0AE4  
                   u2065 0AC8                     u2330 0D27                     u2250 0CDE  
                   u2170 0C51                     u2090 0B0F                     u2082 0AE5  
                   u2066 0AC9                     u2331 0D26                     u2251 0CDD  
                   u2235 0CB9                     u2171 0C50                     u4011 0550  
                   u2091 0B0E                     u2083 0AEA                     u2340 0D39  
                   u2180 0C8B                     u4012 0557                     u2500 0B92  
                   u2420 0B1B                     u2084 0AEB                     u2341 0D38  
                   u2181 0C8A                     u4101 066B                     u4021 057D  
                   u4013 055E                     u4005 052A                     u2501 0B91  
                   u2421 0B1A                     u2085 0AF0                     u2350 0D48  
                   u2270 0CED                     u4102 0672                     u4022 0584  
                   u2510 0B98                     u2430 0B1F                     u2086 0AF1  
                   u2271 0CEC                     u4103 0679                     u4023 058B  
                   u2511 0B97                     u2431 0B1E                     u2095 0B0B  
                   u2360 0D65                     u4200 06E9                     u2520 0B9C  
                   u2440 0B3F                     u2361 0D64                     u2265 0CE2  
                   u4201 06E8                     u4041 05B3                     u2521 0B9B  
                   u2441 0B3E                     u2370 0D82                     u2290 0D01  
                   u4210 06F8                     u4130 069D                     u4042 05BA  
                   u2530 0BB1                     u2371 0D81                     u2355 0D43  
                   u2291 0D00                     u2195 0C8D                     u4131 069C  
                   u4115 067B                     u4051 05E0                     u4043 05C1  
                   u4035 058D                     u2380 0D99                     u4220 0715  
                   u4052 05E7                     u2540 0BC1                     u2460 0B60  
                   u4300 0141                     u1820 14D4                     u2381 0D98  
                   u2365 0D61                     u2285 0CF0                     u4221 0714  
                   u4125 0692                     u4061 060D                     u4053 05EE  
                   u2541 0BC0                     u2461 0B5F                     u4301 0140  
                   u1821 14D3                     u4230 072F                     u4150 06B1  
                   u4070 0637                     u4062 0614                     u2550 0BC5  
                   u4310 0147                     u1830 1672                     u2375 0D7E  
                   u4231 072E                     u4215 06F3                     u4151 06B0  
                   u4063 061B                     u2551 0BC4                     u2535 0BAC  
                   u2455 0B52                     u4311 0146                     u1831 1671  
                   u4240 074D                     u4160 06B6                     u2800 07CD  
                   u2480 0B82                     u2560 15D6                     u4400 01E2  
                   u4320 0160                     u1840 1676                     u4241 074C  
                   u4225 0711                     u4161 06B5                     u4145 06A0  
                   u4081 0643                     u2801 07CC                     u2481 0B81  
                   u2561 15D5                     u4401 01E1                     u4321 015F  
                   u1841 1675                     u4170 06CA                     u4090 065F  
                   u4082 064A                     u2810 07D4                     u2570 15E9  
                   u4410 01FB                     u4330 016B                     u1850 1692  
                   u4250 08BE                     u4235 072B                     u4171 06C9  
                   u4083 0651                     u4075 0632                     u2811 07D3  
                   u2475 0B74                     u2571 15E8                     u4411 01FA  
                   u4331 016A                     u1851 1691                     u4251 08BD  
                   u3700 158B                     u4180 06D1                     u2580 15FA  
                   u4500 028E                     u4420 0206                     u4340 0181  
                   u4260 0049                     u1860 1698                     u3701 158A  
                   u4181 06D0                     u2581 15F9                     u4501 028D  
                   u4421 0205                     u4341 0180                     u4261 0048  
                   u1861 1697                     u4190 06D7                     u2830 07ED  
                   u2750 0773                     u3630 16F6                     u4510 02FC  
                   u4430 0226                     u4350 0190                     u4270 00A4  
                   u1870 169E                     u2590 1520                     u4191 06D6  
                   u4095 065A                     u2831 07EC                     u2751 0772  
                   u2495 0B87                     u3631 16F5                     u4511 02FB  
                   u4431 0225                     u4351 018F                     u4271 00A3  
                   u1871 169D                     u1855 168E                     u2591 151F  
                   u3720 159F                     u2840 07F2                     u2760 0798  
                   u1960 1636                     u4520 0400                     u4440 022E  
                   u4360 01B0                     u4280 00FB                     u1880 16A4  
                   u3800 0F36                     u4600 0A4B                     u3721 159E  
                   u2841 07F1                     u2825 07D9                     u1961 1635  
                   u4521 03FF                     u4441 022D                     u4361 01AF  
                   u4281 00FA                     u1881 16A3                     u3801 0F35  
                   u4601 0A4A                     u2770 07B0                     u3650 1708  
                   u4450 0234                     u4370 01B8                     u4290 0118  
                   u3810 0F60                     u3730 0DD9                     u4610 0A52  
                   u4530 09F8                     u3715 1592                     u2771 07AF  
                   u3651 1707                     u4451 0233                     u4371 01B7  
                   u4291 0117                     u3811 0F5F                     u3731 0DD8  
                   u4611 0A51                     u4531 09F7                     u3900 041D  
                   u2780 07B7                     u1980 1648                     u4460 024D  
                   u4380 01BE                     u3820 0F81                     u3740 0E79  
                   u4620 0A63                     u4540 0A05                     u3901 041C  
                   u2781 07B6                     u2765 0793                     u3645 16FA  
                   u1981 1647                     u4461 024C                     u4381 01BD  
                   u3821 0F80                     u3805 0F32                     u3741 0E78  
                   u4621 0A62                     u4541 0A04                     _INTE 005C  
                   u3910 043E                     u3670 1719                     u1990 1652  
                   u4470 0264                     u4390 01D7                     u3830 0FB6  
                   u3750 0E82                     u4550 0A0C                     _INTF 0059  
                   u3911 043D                     u3671 1718                     u1991 1651  
                   u1975 163A                     u4471 0263                     u4391 01D6  
                   u3831 0FB5                     u3815 0F5C                     u3751 0E81  
                   u4551 0A0B                     u3920 0444                     u4480 0280  
                   u3840 0FC7                     u3760 0ED4                     u4560 0A1A  
                   u3921 0443                     u3665 1709                     u4481 027F  
                   u3841 0FC6                     u3761 0ED3                     u4561 0A19  
                   u3930 0449                     u3690 172D                     u4490 0288  
                   u3850 0FE5                     u3770 0EDC                     u4570 0A28  
                   u3931 0448                     u2795 07B9                     u3691 172C  
                   u3675 1715                     u1995 164E                     u4491 0287  
                   u4707 020E                     u3851 0FE4                     u3835 0FB2  
                   u3771 0EDB                     u4571 0A27                     u3940 0460  
                   u3860 0FF7                     u3780 0EEF                     u4580 0A2F  
                   u3941 045F                     u3685 1721                     u4717 023A  
                   u3861 0FF6                     u3845 0FC3                     u3781 0EEE  
                   u4581 0A2E                     u4637 09E0                     u3950 0465  
                   u3870 0FFF                     u3790 0F0C                     u4590 0A3D  
                   u4807 154C                     u3951 0464                     u4727 0253  
                   u4647 167D                     u3871 0FFE                     u3855 0FE1  
                   u3791 0F0B                     u4591 0A3C                     u3880 0412  
                   u3961 04B6                     u3881 0411                     u4737 026C  
                   u4657 014D                     u3962 04BD                     u3890 0418  
                   i1l91 1510                     u3971 04D2                     u3963 04C4  
                   u3891 0417                     u4747 1566                     u4667 0171  
                   u3795 0F08                     i1l92 1511                     u3972 04D9  
                   u3981 04FE                     u3973 04E0                     u4757 1572  
                   u4677 0198                     u3982 0505                     u4767 173A  
                   u3991 051A                     u3983 050C                     u4687 01C4  
                   u3992 0521                     u4777 174C                     u3993 0528  
                   u4697 01E8                     u4787 1758                     u4797 1540  
         ??_eeprom_write 0073                     _buff 00CC                     _main 1782  
                   _itoa 16A8                     btemp 007E                     start 000C  
        ___fldiv@new_exp 0048         serial_rx@timeout 0072           ??_criasetpoint 00A7  
          ___fltol@sign1 006E                    ?_main 0070          __end_of___fldiv 0DAC  
                  ?_itoa 0027                    _EEADR 010D                    STR_10 087C  
                  STR_11 0842                    STR_20 0866                    STR_12 0852  
                  STR_21 087C                    STR_13 0872                    STR_14 0876  
                  STR_22 0832                    STR_15 0842                    STR_16 085D  
                  STR_17 0821                    STR_18 086D                    STR_19 087A  
        __end_of___flmul 0762          __end_of___fltol 07FE          __end_of___lwdiv 1732  
        __end_of___lwmod 166A                    _RCREG 001A                    _SPBRG 0099  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _TXREG 0019         ?_get_temperatura 0078          __end_of_lcd_dat 157B  
        __end_of_lcd_cmd 1555          __end_of_lcd_str 15CF               _EtapaCinco 0DAC  
                  _valor 00C9                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 1800  
           __end_of_itoa 16EC       get_temperatura@aux 0026                   ??_main 00BA  
                 ??_itoa 0079                ??_RB0_RET 0070             ?_telaUmTexto 0070  
                 _EEDATA 010C                   _EECON1 018C                   _EECON2 018D  
                 i1l2871 150E                   i1l2867 1503                   i1l2869 1507  
                 _INTEDG 040E                   u360_20 1507                   u360_21 1506  
                 u361_20 150E                   u361_21 150D         __end_of___xxtofl 0BCF  
           ?_serial_init 0070         __end_of_lcd_init 1782                   ___flge 0A6F  
              ??___fldiv 003E                ??___flmul 0058                ??___fltol 00A0  
              ??___lwdiv 0078                ??___lwmod 0076                   _lcd_wr 14BB  
                 _manual 14F1                   _telaUm 09D6                   _valorh 00CB  
                 _valori 007A                   _valorl 00CA     __end_of_eeprom_write 15FC  
 criasetpoint@progressao 00B0                ??_lcd_dat 0073                ??_lcd_cmd 0073  
              ??_lcd_str 0078        criasetpoint@opcao 00A5                   saved_w 007E  
            ?_EtapaCinco 0070               ___flge@ff1 0050               ___flge@ff2 0054  
   __end_of_criasetpoint 0401             ___xxtofl@arg 0032             ___xxtofl@exp 0031  
           ___xxtofl@val 0028            get_volume@aux 0026  __end_of__initialization 0028  
        eeprom_read@addr 0073               ___fltol@f1 006A           __pcstackCOMMON 0070  
           __pidataBANK1 07FE      get_temperatura@auxh 0022      get_temperatura@auxl 0024  
      eeprom_write@value 0072               _capacidade 00D2               __pbssBANK1 00BB  
      __end_of__Umul8_16 15A4               __pmaintext 1782                  ?___flge 0050  
             __pintentry 0004                  ?_lcd_wr 0070                  ?_manual 0070  
                ?_telaUm 0070                  _RB0_RET 1503                ?___xxtofl 0028  
             _get_volume 087F                ?_lcd_init 0070               __stringtab 0800  
             _automatico 08B3        __end_of_configura 14F1                  ___fldiv 0BCF  
                ___flmul 0401                  ___fltol 0762                  ___lwdiv 16EC  
                ___lwmod 1630                  __ptext1 09D6                  __ptext2 0941  
                __ptext3 14F1                  __ptext4 08B3                  __ptext5 1518  
                __ptext6 0DAC                  __ptext7 087F                  __ptext8 15FC  
                __ptext9 14C9                  _lcd_dat 1555                  _lcd_cmd 152F  
                _lcd_str 15A4               ??___xxtofl 002C                  _setAgit 00BB  
                _setTemp 00BD                  _setVolm 00BF              serial_rx@to 0076  
                clrloop0 14C2               ??_lcd_init 0076     end_of_initialization 0028  
                itoa@val 0027                  itoa@str 0029             _eeprom_write 15CF  
      __end_of_serial_rx 16A8        __end_of_serial_tx 14D5                _RCSTAbits 0018  
           _criasetpoint 002C                _PORTBbits 0006                _PORTEbits 0009  
          ___xxtofl@sign 0030                _TRISCbits 0087                _TRISEbits 0089  
         get_volume@auxh 0022           get_volume@auxl 0024               lcd_dat@val 0075  
             lcd_cmd@val 0075             ??_EtapaCinco 005C              ___fldiv@grs 004A  
            ___fldiv@rem 0043              ?_get_volume 0078              ___flmul@grs 005F  
          ??_eeprom_read 0072                _TXSTAbits 0098               lcd_str@str 0076  
            ?_automatico 0070           __end_of___flge 0B13       __end_of_EtapaCinco 1000  
         __end_of_lcd_wr 14C1           __end_of_manual 1503           __end_of_telaUm 0A6F  
    start_initialization 000F        ??_get_temperatura 0020                 ??___flge 0058  
    __end_of_eeprom_read 152F                __Umul8_16 157B                 ??_lcd_wr 0072  
            __pdataBANK1 00D2         criasetpoint@wait 00AA                 ??_manual 007A  
               ??_telaUm 00B8                 ?_RB0_RET 0070                ___fldiv@a 0036  
              ___fldiv@b 003A                ___flmul@a 0054                ___flmul@b 0050  
            __pbssCOMMON 007A                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00A0         eeprom_write@addr 0074         ___lwdiv@dividend 0022  
              _enableRB0 00C8                _enableRB1 00C7                _enableRB2 00C6  
              _enableRB3 00C5                 ?___fldiv 0036                 ?___flmul 0050  
               ?___fltol 006A               ?__Umul8_16 0072                 ?___lwdiv 0020  
               ?___lwmod 0072                __pstrings 0800                _configura 14E3  
               ?_lcd_dat 0070                 ?_lcd_cmd 0070           _mostrandoTexto 00C4  
               ?_lcd_str 0076            ??_telaUmTexto 002A         ___lwdiv@quotient 0025  
      interrupt_function 0004                _setEnable 00C1                clear_ram0 14C1  
            _eeprom_read 1518                 _PIR1bits 000C            ??_serial_init 0072  
              _serial_rx 166A                _serial_tx 14C9               ?_configura 0070  
            __stringbase 080F                lcd_wr@val 0072     criasetpoint@attTexto 00B4  
           ??_get_volume 0020     criasetpoint@auxVolm2 00AE      __end_of_telaUmTexto 09D6  
             _EECON1bits 018C             ??_automatico 0061               ?_serial_rx 0072  
             ?_serial_tx 0070              ??__Umul8_16 0074       __end_of_get_volume 08B3  
    __end_of_serial_init 14E3       __end_of__stringtab 0810        EtapaCinco@waiting 0060  
               ___xxtofl 0B13          ___lwdiv@divisor 0020          ___lwdiv@counter 0024  
               __ptext10 166A                 __ptext11 0A6F                 __ptext20 0B13  
               __ptext12 14E3                 __ptext21 0762                 __ptext13 002C  
               __ptext22 0401                 __ptext14 15A4                 __ptext23 157B  
               __ptext15 1555                 __ptext24 0BCF                 __ptext16 16A8  
               __ptext25 14D5                 __ptext17 1630                 __ptext26 1732  
               __ptext18 16EC                 __ptext27 152F                 __ptext19 15CF  
               __ptext28 14BB                 __ptext29 1503       __end_of_automatico 0941  
               _lcd_init 1732          _get_temperatura 15FC             serial_tx@val 0072  
               lcd_str@i 0079              ??_configura 007A      criasetpoint@auxAgit 00AC  
    criasetpoint@auxTemp 00B2      criasetpoint@auxVolm 00B6               _INTCONbits 000B  
            _telaUmTexto 0941                 intlevel1 0000         ___lwmod@dividend 0074  
              stringcode 080A              ??_serial_rx 0074              ??_serial_tx 0072  
            _serial_init 14D5   __Umul8_16@multiplicand 0072          ___lwmod@divisor 0072  
__end_of_get_temperatura 1630          ___lwmod@counter 0077                 stringdir 080A  
               stringtab 0800            ?_eeprom_write 0072               _STATUSbits 0003  
   __Umul8_16@multiplier 0024             ?_eeprom_read 0070        __Umul8_16@product 0020  
