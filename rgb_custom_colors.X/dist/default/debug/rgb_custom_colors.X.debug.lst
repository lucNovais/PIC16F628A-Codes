

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 31 21:55:03 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F628A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  008C                     	;# 
    82  008E                     	;# 
    83  0092                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009F                     	;# 
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  008C                     	;# 
   119  008E                     	;# 
   120  0092                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009F                     	;# 
   128                           
   129                           	psect	idataBANK1
   130  060D                     __pidataBANK1:
   131                           
   132                           ;initializer for main@F503
   133  060D  3464               	retlw	100
   134  060E  3400               	retlw	0
   135  060F  3400               	retlw	0
   136  0610  3400               	retlw	0
   137  0611  3400               	retlw	0
   138  0612  3400               	retlw	0
   139  0613  3400               	retlw	0
   140  0614  3400               	retlw	0
   141  0615  3464               	retlw	100
   142  0616  3400               	retlw	0
   143  0617  3400               	retlw	0
   144  0618  3400               	retlw	0
   145  0619  3400               	retlw	0
   146  061A  3400               	retlw	0
   147  061B  3400               	retlw	0
   148  061C  3400               	retlw	0
   149  061D  3464               	retlw	100
   150  061E  3400               	retlw	0
   151  061F  343C               	retlw	60
   152  0620  3400               	retlw	0
   153  0621  3400               	retlw	0
   154  0622  3400               	retlw	0
   155  0623  3446               	retlw	70
   156  0624  3400               	retlw	0
   157  0625  3432               	retlw	50
   158  0626  3400               	retlw	0
   159  0627  341E               	retlw	30
   160  0628  3400               	retlw	0
   161  0629  343C               	retlw	60
   162  062A  3400               	retlw	0
   163  062B  3400               	retlw	0
   164  062C  3400               	retlw	0
   165  062D  3464               	retlw	100
   166  062E  3400               	retlw	0
   167  062F  3464               	retlw	100
   168  0630  3400               	retlw	0
   169  0631  343C               	retlw	60
   170  0632  3400               	retlw	0
   171  0633  3432               	retlw	50
   172  0634  3400               	retlw	0
   173  0635  3400               	retlw	0
   174  0636  3400               	retlw	0
   175  0637  3400               	retlw	0
   176  0638  3400               	retlw	0
   177  0639  3432               	retlw	50
   178  063A  3400               	retlw	0
   179  063B  3450               	retlw	80
   180  063C  3400               	retlw	0
   181  063D  341E               	retlw	30
   182  063E  3400               	retlw	0
   183  063F  341E               	retlw	30
   184  0640  3400               	retlw	0
   185  0641  343C               	retlw	60
   186  0642  3400               	retlw	0
   187  0643  3450               	retlw	80
   188  0644  3400               	retlw	0
   189  0645  340A               	retlw	10
   190  0646  3400               	retlw	0
   191  0647  340A               	retlw	10
   192  0648  3400               	retlw	0
   193  0649  3428               	retlw	40
   194  064A  3400               	retlw	0
   195  064B  3450               	retlw	80
   196  064C  3400               	retlw	0
   197  064D  3432               	retlw	50
   198  064E  3400               	retlw	0
   199  064F  3464               	retlw	100
   200  0650  3400               	retlw	0
   201  0651  3464               	retlw	100
   202  0652  3400               	retlw	0
   203  0653  3400               	retlw	0
   204  0654  3400               	retlw	0
   205  0006                     _PORTBbits	set	6
   206  0006                     _PORTB	set	6
   207  0086                     _TRISB	set	134
   208                           
   209                           	psect	cinit
   210  07EC                     start_initialization:	
   211                           ; #config settings
   212                           
   213  07EC                     __initialization:
   214                           
   215                           ; Initialize objects allocated to BANK1
   216  07EC  1383               	bcf	3,7	;select IRP bank0
   217  07ED  30E8               	movlw	low (__pdataBANK1+72)
   218  07EE  00FD               	movwf	btemp+-1
   219  07EF  3006               	movlw	high __pidataBANK1
   220  07F0  00FE               	movwf	btemp
   221  07F1  300D               	movlw	low __pidataBANK1
   222  07F2  00FF               	movwf	btemp+1
   223  07F3  30A0               	movlw	low __pdataBANK1
   224  07F4  0084               	movwf	4
   225  07F5  25ED               	fcall	init_ram0
   226                           
   227                           ; Clear objects allocated to BANK2
   228  07F6  1283               	bcf	3,5	;RP0=0, select bank2
   229  07F7  1703               	bsf	3,6	;RP1=1, select bank2
   230  07F8  01A0               	clrf	__pbssBANK2& (0+127)
   231  07F9  01A1               	clrf	(__pbssBANK2+1)& (0+127)
   232  07FA  01A2               	clrf	(__pbssBANK2+2)& (0+127)
   233  07FB  01A3               	clrf	(__pbssBANK2+3)& (0+127)
   234  07FC  01A4               	clrf	(__pbssBANK2+4)& (0+127)
   235  07FD  01A5               	clrf	(__pbssBANK2+5)& (0+127)
   236  07FE                     end_of_initialization:	
   237                           ;End of C runtime variable initialization code
   238                           
   239  07FE                     __end_of__initialization:
   240  07FE  0183               	clrf	3
   241  07FF  2EEB               	ljmp	_main	;jump to C main() function
   242                           
   243                           	psect	dataBANK1
   244  00A0                     __pdataBANK1:
   245  00A0                     main@F503:
   246  00A0                     	ds	72
   247                           
   248                           	psect	bssBANK2
   249  0120                     __pbssBANK2:
   250  0120                     main@F510:
   251  0120                     	ds	6
   252                           
   253                           	psect	inittext
   254  05E9                     init_fetch0:	
   255                           ;	Called with low address in FSR and high address in W
   256                           
   257  05E9  087E               	movf	btemp,w
   258  05EA  008A               	movwf	10
   259  05EB  087F               	movf	btemp+1,w
   260  05EC  0082               	movwf	2
   261  05ED                     init_ram0:	
   262                           ;Called with:
   263                           ;	high address of idata address in btemp 
   264                           ;	low address of idata address in btemp+1 
   265                           ;	low address of data in FSR
   266                           ;	high address + 1 of data in btemp-1
   267                           
   268  05ED  25E9               	fcall	init_fetch0
   269  05EE  0080               	movwf	0
   270  05EF  0A84               	incf	4,f
   271  05F0  0804               	movf	4,w
   272  05F1  067D               	xorwf	btemp+-1,w
   273  05F2  1903               	btfsc	3,2
   274  05F3  3400               	retlw	0
   275  05F4  0AFF               	incf	btemp+1,f
   276  05F5  1903               	btfsc	3,2
   277  05F6  0AFE               	incf	btemp,f
   278  05F7  2DED               	goto	init_ram0
   279                           
   280                           	psect	cstackBANK1
   281  00E8                     __pcstackBANK1:
   282  00E8                     main@inicial:
   283                           
   284                           ; 6 bytes @ 0x0
   285  00E8                     	ds	6
   286                           
   287                           	psect	cstackCOMMON
   288  0070                     __pcstackCOMMON:
   289  0070                     ?_main:
   290  0070                     ?___bmul:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ___bmul@multiplicand:	
   294                           ; 1 bytes @ 0x0
   295                           
   296                           
   297                           ; 1 bytes @ 0x0
   298  0070                     	ds	1
   299  0071                     ??___bmul:
   300                           
   301                           ; 1 bytes @ 0x1
   302  0071                     	ds	1
   303  0072                     ___bmul@product:
   304                           
   305                           ; 1 bytes @ 0x2
   306  0072                     	ds	1
   307  0073                     ___bmul@multiplier:
   308                           
   309                           ; 1 bytes @ 0x3
   310  0073                     	ds	1
   311  0074                     ?_verifica_ativos:
   312  0074                     verifica_ativos@ponteiro:	
   313                           ; 1 bytes @ 0x4
   314                           
   315                           
   316                           ; 2 bytes @ 0x4
   317  0074                     	ds	2
   318  0076                     ??_verifica_ativos:
   319                           
   320                           ; 1 bytes @ 0x6
   321  0076                     	ds	4
   322  007A                     verifica_ativos@matriz:
   323                           
   324                           ; 1 bytes @ 0xA
   325  007A                     	ds	1
   326  007B                     main@loop_cor:
   327                           
   328                           ; 2 bytes @ 0xB
   329  007B                     	ds	2
   330                           
   331                           	psect	cstackBANK0
   332  0020                     __pcstackBANK0:
   333  0020                     ??_main:
   334                           
   335                           ; 1 bytes @ 0x0
   336  0020                     	ds	4
   337  0024                     main@matriz_cores:
   338                           
   339                           ; 72 bytes @ 0x4
   340  0024                     	ds	72
   341  006C                     main@loop_atual:
   342                           
   343                           ; 2 bytes @ 0x4C
   344  006C                     	ds	2
   345  006E                     main@ponteiro_cor:
   346                           
   347                           ; 2 bytes @ 0x4E
   348  006E                     	ds	2
   349                           
   350                           	psect	maintext
   351  06EB                     __pmaintext:	
   352 ;;
   353 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   354 ;;
   355 ;; *************** function _main *****************
   356 ;; Defined at:
   357 ;;		line 31 in file "rgb_custom.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;  matriz_cores   72    4[BANK0 ] unsigned short [3][12]
   362 ;;  inicial         6    0[BANK1 ] unsigned short [3]
   363 ;;  ponteiro_cor    2   78[BANK0 ] unsigned short 
   364 ;;  loop_atual      2   76[BANK0 ] unsigned short 
   365 ;;  loop_cor        2   11[COMMON] unsigned short 
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : B00/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   375 ;;      Params:         0       0       0       0
   376 ;;      Locals:         2      76       6       0
   377 ;;      Temps:          0       4       0       0
   378 ;;      Totals:         2      80       6       0
   379 ;;Total ram usage:       88 bytes
   380 ;; Hardware stack levels required when called: 2
   381 ;; This function calls:
   382 ;;		___bmul
   383 ;;		_verifica_ativos
   384 ;; This function is called by:
   385 ;;		Startup code after reset
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389  06EB                     _main:	
   390                           ;psect for function _main
   391                           
   392  06EB                     l741:	
   393                           ;incstack = 0
   394                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   395                           
   396                           
   397                           ;rgb_custom.c: 33:     {
   398  06EB  1683               	bsf	3,5	;RP0=1, select bank1
   399  06EC  1303               	bcf	3,6	;RP1=0, select bank1
   400  06ED  0186               	clrf	6	;volatile
   401                           
   402                           ;rgb_custom.c: 34:         _delay((unsigned long)((5)*(4000000/4000.0)));
   403  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   404  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   405  06F0  0186               	clrf	6	;volatile
   406  06F1                     l743:
   407                           
   408                           ;rgb_custom.c: 36:         loop_atual += 5;
   409  06F1  3024               	movlw	main@matriz_cores& (0+255)
   410  06F2  0084               	movwf	4
   411  06F3  30A0               	movlw	low main@F503
   412  06F4  00A0               	movwf	??_main
   413  06F5  0804               	movf	4,w
   414  06F6  00A1               	movwf	??_main+1
   415  06F7  3048               	movlw	72
   416  06F8  00A2               	movwf	??_main+2
   417  06F9                     u160:
   418  06F9  0820               	movf	??_main,w
   419  06FA  0084               	movwf	4
   420  06FB  1383               	bcf	3,7	;select IRP bank1
   421  06FC  0800               	movf	0,w
   422  06FD  00A3               	movwf	??_main+3
   423  06FE  0AA0               	incf	??_main,f
   424  06FF  0821               	movf	??_main+1,w
   425  0700  0084               	movwf	4
   426  0701  0823               	movf	??_main+3,w
   427  0702  0080               	movwf	0
   428  0703  0AA1               	incf	??_main+1,f
   429  0704  0BA2               	decfsz	??_main+2,f
   430  0705  2EF9               	goto	u160
   431  0706                     l745:
   432                           
   433                           ;rgb_custom.c: 51:                 ponteiro_cor++;
   434  0706  01EE               	clrf	main@ponteiro_cor
   435  0707  01EF               	clrf	main@ponteiro_cor+1
   436  0708                     l747:
   437                           
   438                           ;rgb_custom.c: 52:             else
   439  0708  01FB               	clrf	main@loop_cor
   440  0709  01FC               	clrf	main@loop_cor+1
   441  070A                     l749:
   442                           
   443                           ;rgb_custom.c: 53:                 ponteiro_cor = 0;
   444  070A  01EC               	clrf	main@loop_atual
   445  070B  01ED               	clrf	main@loop_atual+1
   446  070C                     l751:
   447                           
   448                           ;rgb_custom.c: 55:             loop_cor = 0;
   449  070C  30E8               	movlw	main@inicial& (0+255)
   450  070D  0084               	movwf	4
   451  070E  3006               	movlw	6
   452  070F  00FF               	movwf	btemp+1
   453  0710                     u170:
   454  0710  0180               	clrf	0
   455  0711  0A84               	incf	4,f
   456  0712  0BFF               	decfsz	btemp+1,f
   457  0713  2F10               	goto	u170
   458  0714                     l753:
   459  0714  0825               	movf	main@matriz_cores+1,w
   460  0715  1683               	bsf	3,5	;RP0=1, select bank1
   461  0716  1303               	bcf	3,6	;RP1=0, select bank1
   462  0717  00E9               	movwf	(main@inicial+1)^(0+128)
   463  0718  1283               	bcf	3,5	;RP0=0, select bank0
   464  0719  1303               	bcf	3,6	;RP1=0, select bank0
   465  071A  0824               	movf	main@matriz_cores,w
   466  071B  1683               	bsf	3,5	;RP0=1, select bank1
   467  071C  1303               	bcf	3,6	;RP1=0, select bank1
   468  071D  00E8               	movwf	main@inicial^(0+128)
   469  071E                     l755:
   470  071E  1283               	bcf	3,5	;RP0=0, select bank0
   471  071F  1303               	bcf	3,6	;RP1=0, select bank0
   472  0720  0827               	movf	main@matriz_cores+3,w
   473  0721  1683               	bsf	3,5	;RP0=1, select bank1
   474  0722  1303               	bcf	3,6	;RP1=0, select bank1
   475  0723  00EB               	movwf	((main@inicial+1)^(0+128)+2)
   476  0724  1283               	bcf	3,5	;RP0=0, select bank0
   477  0725  1303               	bcf	3,6	;RP1=0, select bank0
   478  0726  0826               	movf	main@matriz_cores+2,w
   479  0727  1683               	bsf	3,5	;RP0=1, select bank1
   480  0728  1303               	bcf	3,6	;RP1=0, select bank1
   481  0729  00EA               	movwf	(main@inicial^(0+128)+2)
   482  072A                     l757:
   483  072A  1283               	bcf	3,5	;RP0=0, select bank0
   484  072B  1303               	bcf	3,6	;RP1=0, select bank0
   485  072C  0829               	movf	main@matriz_cores+5,w
   486  072D  1683               	bsf	3,5	;RP0=1, select bank1
   487  072E  1303               	bcf	3,6	;RP1=0, select bank1
   488  072F  00ED               	movwf	((main@inicial+1)^(0+128)+4)
   489  0730  1283               	bcf	3,5	;RP0=0, select bank0
   490  0731  1303               	bcf	3,6	;RP1=0, select bank0
   491  0732  0828               	movf	main@matriz_cores+4,w
   492  0733  1683               	bsf	3,5	;RP0=1, select bank1
   493  0734  1303               	bcf	3,6	;RP1=0, select bank1
   494  0735  00EC               	movwf	(main@inicial^(0+128)+4)
   495  0736                     l759:
   496                           
   497                           ;rgb_custom.c: 62:     return;;rgb_custom.c: 63: }
   498  0736  3007               	movlw	7
   499  0737  1283               	bcf	3,5	;RP0=0, select bank0
   500  0738  1303               	bcf	3,6	;RP1=0, select bank0
   501  0739  00A1               	movwf	??_main+1
   502  073A  307C               	movlw	124
   503  073B  00A0               	movwf	??_main
   504  073C                     u217:
   505  073C  0BA0               	decfsz	??_main,f
   506  073D  2F3C               	goto	u217
   507  073E  0BA1               	decfsz	??_main+1,f
   508  073F  2F3C               	goto	u217
   509  0740  2F41               	nop2
   510  0741                     l761:
   511                           
   512                           ;rgb_custom.c: 64: 
   513  0741  3005               	movlw	5
   514  0742  07FB               	addwf	main@loop_cor,f
   515  0743  1803               	skipnc
   516  0744  0AFC               	incf	main@loop_cor+1,f
   517  0745  3000               	movlw	0
   518  0746  07FC               	addwf	main@loop_cor+1,f
   519  0747                     l763:
   520                           
   521                           ;rgb_custom.c: 65: void verifica_ativos(unsigned short matriz[12][3], unsigned short pon
      +                          teiro) {
   522  0747  3005               	movlw	5
   523  0748  1283               	bcf	3,5	;RP0=0, select bank0
   524  0749  1303               	bcf	3,6	;RP1=0, select bank0
   525  074A  07EC               	addwf	main@loop_atual,f
   526  074B  1803               	skipnc
   527  074C  0AED               	incf	main@loop_atual+1,f
   528  074D  3000               	movlw	0
   529  074E  07ED               	addwf	main@loop_atual+1,f
   530  074F                     l765:
   531                           
   532                           ;rgb_custom.c: 67:         PORTBbits.RB5 = 1;
   533  074F  086F               	movf	main@ponteiro_cor+1,w
   534  0750  00F5               	movwf	verifica_ativos@ponteiro+1
   535  0751  086E               	movf	main@ponteiro_cor,w
   536  0752  00F4               	movwf	verifica_ativos@ponteiro
   537  0753  3024               	movlw	(low (main@matriz_cores| 0))& (0+255)
   538  0754  2655               	fcall	_verifica_ativos
   539  0755                     l767:
   540                           
   541                           ;rgb_custom.c: 69:     }
   542  0755  3064               	movlw	100
   543  0756  1283               	bcf	3,5	;RP0=0, select bank0
   544  0757  1303               	bcf	3,6	;RP1=0, select bank0
   545  0758  066C               	xorwf	main@loop_atual,w
   546  0759  046D               	iorwf	main@loop_atual+1,w
   547  075A  1D03               	btfss	3,2
   548  075B  2F5D               	goto	u181
   549  075C  2F5E               	goto	u180
   550  075D                     u181:
   551  075D  2F96               	goto	l777
   552  075E                     u180:
   553  075E                     l769:
   554                           
   555                           ;rgb_custom.c: 70:     else {;rgb_custom.c: 71:         PORTBbits.RB5 = 0;
   556  075E  01EC               	clrf	main@loop_atual
   557  075F  01ED               	clrf	main@loop_atual+1
   558  0760                     l771:
   559                           
   560                           ;rgb_custom.c: 73: 
   561  0760  3006               	movlw	6
   562  0761  00A0               	movwf	??_main
   563  0762  0820               	movf	??_main,w
   564  0763  00F0               	movwf	___bmul@multiplicand
   565  0764  086E               	movf	main@ponteiro_cor,w
   566  0765  25F8               	fcall	___bmul
   567  0766  3E24               	addlw	(low (main@matriz_cores| 0))& (0+255)
   568  0767  0084               	movwf	4
   569  0768  1683               	bsf	3,5	;RP0=1, select bank1
   570  0769  1303               	bcf	3,6	;RP1=0, select bank1
   571  076A  0868               	movf	main@inicial^(0+128),w
   572  076B  1383               	bcf	3,7	;select IRP bank0
   573  076C  0080               	movwf	0
   574  076D  0A84               	incf	4,f
   575  076E  0869               	movf	(main@inicial+1)^(0+128),w
   576  076F  0080               	movwf	0
   577  0770                     l773:
   578                           
   579                           ;rgb_custom.c: 74:     if (matriz[ponteiro][1] > 0) {
   580  0770  3006               	movlw	6
   581  0771  1283               	bcf	3,5	;RP0=0, select bank0
   582  0772  1303               	bcf	3,6	;RP1=0, select bank0
   583  0773  00A0               	movwf	??_main
   584  0774  0820               	movf	??_main,w
   585  0775  00F0               	movwf	___bmul@multiplicand
   586  0776  086E               	movf	main@ponteiro_cor,w
   587  0777  25F8               	fcall	___bmul
   588  0778  3E02               	addlw	2
   589  0779  3E24               	addlw	(low (main@matriz_cores| 0))& (0+255)
   590  077A  0084               	movwf	4
   591  077B  1683               	bsf	3,5	;RP0=1, select bank1
   592  077C  1303               	bcf	3,6	;RP1=0, select bank1
   593  077D  086A               	movf	(main@inicial^(0+128)+2),w
   594  077E  1383               	bcf	3,7	;select IRP bank0
   595  077F  0080               	movwf	0
   596  0780  0A84               	incf	4,f
   597  0781  086B               	movf	((main@inicial+1)^(0+128)+2),w
   598  0782  0080               	movwf	0
   599  0783                     l775:
   600                           
   601                           ;rgb_custom.c: 75:         PORTBbits.RB6 = 1;
   602  0783  3006               	movlw	6
   603  0784  1283               	bcf	3,5	;RP0=0, select bank0
   604  0785  1303               	bcf	3,6	;RP1=0, select bank0
   605  0786  00A0               	movwf	??_main
   606  0787  0820               	movf	??_main,w
   607  0788  00F0               	movwf	___bmul@multiplicand
   608  0789  086E               	movf	main@ponteiro_cor,w
   609  078A  25F8               	fcall	___bmul
   610  078B  3E04               	addlw	4
   611  078C  3E24               	addlw	(low (main@matriz_cores| 0))& (0+255)
   612  078D  0084               	movwf	4
   613  078E  1683               	bsf	3,5	;RP0=1, select bank1
   614  078F  1303               	bcf	3,6	;RP1=0, select bank1
   615  0790  086C               	movf	(main@inicial^(0+128)+4),w
   616  0791  1383               	bcf	3,7	;select IRP bank0
   617  0792  0080               	movwf	0
   618  0793  0A84               	incf	4,f
   619  0794  086D               	movf	((main@inicial+1)^(0+128)+4),w
   620  0795  0080               	movwf	0
   621  0796                     l777:
   622                           
   623                           ;rgb_custom.c: 77:     } else {
   624  0796  30F4               	movlw	244
   625  0797  067B               	xorwf	main@loop_cor,w
   626  0798  1D03               	skipz
   627  0799  2F9E               	goto	u191
   628  079A  037C               	decf	main@loop_cor+1,w
   629  079B  1D03               	btfss	3,2
   630  079C  2F9E               	goto	u191
   631  079D  2F9F               	goto	u190
   632  079E                     u191:
   633  079E  2F36               	goto	l759
   634  079F                     u190:
   635  079F                     l779:
   636                           
   637                           ;rgb_custom.c: 78:         PORTBbits.RB6 = 0;;rgb_custom.c: 79:     }
   638  079F  3000               	movlw	0
   639  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   640  07A1  026F               	subwf	main@ponteiro_cor+1,w
   641  07A2  300B               	movlw	11
   642  07A3  1903               	skipnz
   643  07A4  026E               	subwf	main@ponteiro_cor,w
   644  07A5  1803               	skipnc
   645  07A6  2FA8               	goto	u201
   646  07A7  2FA9               	goto	u200
   647  07A8                     u201:
   648  07A8  2FB0               	goto	l783
   649  07A9                     u200:
   650  07A9                     l781:
   651                           
   652                           ;rgb_custom.c: 80: 
   653  07A9  3001               	movlw	1
   654  07AA  07EE               	addwf	main@ponteiro_cor,f
   655  07AB  1803               	skipnc
   656  07AC  0AEF               	incf	main@ponteiro_cor+1,f
   657  07AD  3000               	movlw	0
   658  07AE  07EF               	addwf	main@ponteiro_cor+1,f
   659  07AF  2FB2               	goto	l23
   660  07B0                     l783:
   661                           
   662                           ;rgb_custom.c: 82:         PORTBbits.RB7 = 1;
   663  07B0  01EE               	clrf	main@ponteiro_cor
   664  07B1  01EF               	clrf	main@ponteiro_cor+1
   665  07B2                     l23:
   666                           
   667                           ;rgb_custom.c: 84:     } else {
   668  07B2  01FB               	clrf	main@loop_cor
   669  07B3  01FC               	clrf	main@loop_cor+1
   670  07B4                     l785:
   671                           
   672                           ;rgb_custom.c: 85:         PORTBbits.RB7 = 0;
   673  07B4  3006               	movlw	6
   674  07B5  00A0               	movwf	??_main
   675  07B6  0820               	movf	??_main,w
   676  07B7  00F0               	movwf	___bmul@multiplicand
   677  07B8  086E               	movf	main@ponteiro_cor,w
   678  07B9  25F8               	fcall	___bmul
   679  07BA  3E24               	addlw	(low (main@matriz_cores| 0))& (0+255)
   680  07BB  0084               	movwf	4
   681  07BC  1383               	bcf	3,7	;select IRP bank0
   682  07BD  0800               	movf	0,w
   683  07BE  1683               	bsf	3,5	;RP0=1, select bank1
   684  07BF  1303               	bcf	3,6	;RP1=0, select bank1
   685  07C0  00E8               	movwf	main@inicial^(0+128)
   686  07C1  0A84               	incf	4,f
   687  07C2  0800               	movf	0,w
   688  07C3  00E9               	movwf	(main@inicial+1)^(0+128)
   689  07C4                     l787:
   690                           
   691                           ;rgb_custom.c: 86:     }
   692  07C4  3006               	movlw	6
   693  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   694  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   695  07C7  00A0               	movwf	??_main
   696  07C8  0820               	movf	??_main,w
   697  07C9  00F0               	movwf	___bmul@multiplicand
   698  07CA  086E               	movf	main@ponteiro_cor,w
   699  07CB  25F8               	fcall	___bmul
   700  07CC  3E02               	addlw	2
   701  07CD  3E24               	addlw	(low (main@matriz_cores| 0))& (0+255)
   702  07CE  0084               	movwf	4
   703  07CF  1383               	bcf	3,7	;select IRP bank0
   704  07D0  0800               	movf	0,w
   705  07D1  1683               	bsf	3,5	;RP0=1, select bank1
   706  07D2  1303               	bcf	3,6	;RP1=0, select bank1
   707  07D3  00EA               	movwf	(main@inicial^(0+128)+2)
   708  07D4  0A84               	incf	4,f
   709  07D5  0800               	movf	0,w
   710  07D6  00EB               	movwf	((main@inicial+1)^(0+128)+2)
   711  07D7                     l789:
   712                           
   713                           ;rgb_custom.c: 87: }
   714  07D7  3006               	movlw	6
   715  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   716  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   717  07DA  00A0               	movwf	??_main
   718  07DB  0820               	movf	??_main,w
   719  07DC  00F0               	movwf	___bmul@multiplicand
   720  07DD  086E               	movf	main@ponteiro_cor,w
   721  07DE  25F8               	fcall	___bmul
   722  07DF  3E04               	addlw	4
   723  07E0  3E24               	addlw	(low (main@matriz_cores| 0))& (0+255)
   724  07E1  0084               	movwf	4
   725  07E2  1383               	bcf	3,7	;select IRP bank0
   726  07E3  0800               	movf	0,w
   727  07E4  1683               	bsf	3,5	;RP0=1, select bank1
   728  07E5  1303               	bcf	3,6	;RP1=0, select bank1
   729  07E6  00EC               	movwf	(main@inicial^(0+128)+4)
   730  07E7  0A84               	incf	4,f
   731  07E8  0800               	movf	0,w
   732  07E9  00ED               	movwf	((main@inicial+1)^(0+128)+4)
   733  07EA  2F36               	goto	l759
   734  07EB  2800               	ljmp	start
   735  07EC                     __end_of_main:
   736                           
   737                           	psect	text1
   738  0655                     __ptext1:	
   739 ;; *************** function _verifica_ativos *****************
   740 ;; Defined at:
   741 ;;		line 94 in file "rgb_custom.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;  matriz          1    wreg     PTR unsigned short [3]
   744 ;;		 -> main@matriz_cores(72), 
   745 ;;  ponteiro        2    4[COMMON] unsigned short 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  matriz          1   10[COMMON] PTR unsigned short [3]
   748 ;;		 -> main@matriz_cores(72), 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   758 ;;      Params:         2       0       0       0
   759 ;;      Locals:         1       0       0       0
   760 ;;      Temps:          4       0       0       0
   761 ;;      Totals:         7       0       0       0
   762 ;;Total ram usage:        7 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; Hardware stack levels required when called: 1
   765 ;; This function calls:
   766 ;;		___bmul
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772  0655                     _verifica_ativos:	
   773                           ;psect for function _verifica_ativos
   774                           
   775                           
   776                           ;incstack = 0
   777                           ; Regs used in _verifica_ativos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   778                           ;verifica_ativos@matriz stored from wreg
   779  0655  00FA               	movwf	verifica_ativos@matriz
   780  0656                     l723:
   781  0656  3006               	movlw	6
   782  0657  00F6               	movwf	??_verifica_ativos
   783  0658  0876               	movf	??_verifica_ativos,w
   784  0659  00F0               	movwf	___bmul@multiplicand
   785  065A  0874               	movf	verifica_ativos@ponteiro,w
   786  065B  25F8               	fcall	___bmul
   787  065C  077A               	addwf	verifica_ativos@matriz,w
   788  065D  00F7               	movwf	??_verifica_ativos+1
   789  065E  0877               	movf	??_verifica_ativos+1,w
   790  065F  0084               	movwf	4
   791  0660  1383               	bcf	3,7	;select IRP bank0
   792  0661  0800               	movf	0,w
   793  0662  00F8               	movwf	??_verifica_ativos+2
   794  0663  0A84               	incf	4,f
   795  0664  0800               	movf	0,w
   796  0665  00F9               	movwf	??_verifica_ativos+3
   797  0666  0878               	movf	??_verifica_ativos+2,w
   798  0667  0479               	iorwf	??_verifica_ativos+3,w
   799  0668  1903               	btfsc	3,2
   800  0669  2E6B               	goto	u131
   801  066A  2E6C               	goto	u130
   802  066B                     u131:
   803  066B  2E83               	goto	l29
   804  066C                     u130:
   805  066C                     l725:
   806  066C  1283               	bcf	3,5	;RP0=0, select bank0
   807  066D  1303               	bcf	3,6	;RP1=0, select bank0
   808  066E  1686               	bsf	6,5	;volatile
   809  066F                     l727:
   810  066F  3006               	movlw	6
   811  0670  00F6               	movwf	??_verifica_ativos
   812  0671  0876               	movf	??_verifica_ativos,w
   813  0672  00F0               	movwf	___bmul@multiplicand
   814  0673  0874               	movf	verifica_ativos@ponteiro,w
   815  0674  25F8               	fcall	___bmul
   816  0675  077A               	addwf	verifica_ativos@matriz,w
   817  0676  00F7               	movwf	??_verifica_ativos+1
   818  0677  0877               	movf	??_verifica_ativos+1,w
   819  0678  0084               	movwf	4
   820  0679  3005               	movlw	5
   821  067A  1383               	bcf	3,7	;select IRP bank0
   822  067B  0280               	subwf	0,f
   823  067C  0F84               	incfsz	4,f
   824  067D  3000               	movlw	0
   825  067E  1C03               	skipc
   826  067F  0380               	decf	0,f
   827  0680  0280               	subwf	0,f
   828  0681  0384               	decf	4,f
   829  0682  2E86               	goto	l729
   830  0683                     l29:
   831  0683  1283               	bcf	3,5	;RP0=0, select bank0
   832  0684  1303               	bcf	3,6	;RP1=0, select bank0
   833  0685  1286               	bcf	6,5	;volatile
   834  0686                     l729:
   835  0686  3006               	movlw	6
   836  0687  00F6               	movwf	??_verifica_ativos
   837  0688  0876               	movf	??_verifica_ativos,w
   838  0689  00F0               	movwf	___bmul@multiplicand
   839  068A  0874               	movf	verifica_ativos@ponteiro,w
   840  068B  25F8               	fcall	___bmul
   841  068C  077A               	addwf	verifica_ativos@matriz,w
   842  068D  00F7               	movwf	??_verifica_ativos+1
   843  068E  0877               	movf	??_verifica_ativos+1,w
   844  068F  3E02               	addlw	2
   845  0690  0084               	movwf	4
   846  0691  1383               	bcf	3,7	;select IRP bank0
   847  0692  0800               	movf	0,w
   848  0693  00F8               	movwf	??_verifica_ativos+2
   849  0694  0A84               	incf	4,f
   850  0695  0800               	movf	0,w
   851  0696  00F9               	movwf	??_verifica_ativos+3
   852  0697  0878               	movf	??_verifica_ativos+2,w
   853  0698  0479               	iorwf	??_verifica_ativos+3,w
   854  0699  1903               	btfsc	3,2
   855  069A  2E9C               	goto	u141
   856  069B  2E9D               	goto	u140
   857  069C                     u141:
   858  069C  2EB5               	goto	l31
   859  069D                     u140:
   860  069D                     l731:
   861  069D  1283               	bcf	3,5	;RP0=0, select bank0
   862  069E  1303               	bcf	3,6	;RP1=0, select bank0
   863  069F  1706               	bsf	6,6	;volatile
   864  06A0                     l733:
   865  06A0  3006               	movlw	6
   866  06A1  00F6               	movwf	??_verifica_ativos
   867  06A2  0876               	movf	??_verifica_ativos,w
   868  06A3  00F0               	movwf	___bmul@multiplicand
   869  06A4  0874               	movf	verifica_ativos@ponteiro,w
   870  06A5  25F8               	fcall	___bmul
   871  06A6  077A               	addwf	verifica_ativos@matriz,w
   872  06A7  00F7               	movwf	??_verifica_ativos+1
   873  06A8  0877               	movf	??_verifica_ativos+1,w
   874  06A9  3E02               	addlw	2
   875  06AA  0084               	movwf	4
   876  06AB  3005               	movlw	5
   877  06AC  1383               	bcf	3,7	;select IRP bank0
   878  06AD  0280               	subwf	0,f
   879  06AE  0F84               	incfsz	4,f
   880  06AF  3000               	movlw	0
   881  06B0  1C03               	skipc
   882  06B1  0380               	decf	0,f
   883  06B2  0280               	subwf	0,f
   884  06B3  0384               	decf	4,f
   885  06B4  2EB8               	goto	l735
   886  06B5                     l31:
   887  06B5  1283               	bcf	3,5	;RP0=0, select bank0
   888  06B6  1303               	bcf	3,6	;RP1=0, select bank0
   889  06B7  1306               	bcf	6,6	;volatile
   890  06B8                     l735:
   891  06B8  3006               	movlw	6
   892  06B9  00F6               	movwf	??_verifica_ativos
   893  06BA  0876               	movf	??_verifica_ativos,w
   894  06BB  00F0               	movwf	___bmul@multiplicand
   895  06BC  0874               	movf	verifica_ativos@ponteiro,w
   896  06BD  25F8               	fcall	___bmul
   897  06BE  077A               	addwf	verifica_ativos@matriz,w
   898  06BF  00F7               	movwf	??_verifica_ativos+1
   899  06C0  0877               	movf	??_verifica_ativos+1,w
   900  06C1  3E04               	addlw	4
   901  06C2  0084               	movwf	4
   902  06C3  1383               	bcf	3,7	;select IRP bank0
   903  06C4  0800               	movf	0,w
   904  06C5  00F8               	movwf	??_verifica_ativos+2
   905  06C6  0A84               	incf	4,f
   906  06C7  0800               	movf	0,w
   907  06C8  00F9               	movwf	??_verifica_ativos+3
   908  06C9  0878               	movf	??_verifica_ativos+2,w
   909  06CA  0479               	iorwf	??_verifica_ativos+3,w
   910  06CB  1903               	btfsc	3,2
   911  06CC  2ECE               	goto	u151
   912  06CD  2ECF               	goto	u150
   913  06CE                     u151:
   914  06CE  2EE7               	goto	l33
   915  06CF                     u150:
   916  06CF                     l737:
   917  06CF  1283               	bcf	3,5	;RP0=0, select bank0
   918  06D0  1303               	bcf	3,6	;RP1=0, select bank0
   919  06D1  1786               	bsf	6,7	;volatile
   920  06D2                     l739:
   921  06D2  3006               	movlw	6
   922  06D3  00F6               	movwf	??_verifica_ativos
   923  06D4  0876               	movf	??_verifica_ativos,w
   924  06D5  00F0               	movwf	___bmul@multiplicand
   925  06D6  0874               	movf	verifica_ativos@ponteiro,w
   926  06D7  25F8               	fcall	___bmul
   927  06D8  077A               	addwf	verifica_ativos@matriz,w
   928  06D9  00F7               	movwf	??_verifica_ativos+1
   929  06DA  0877               	movf	??_verifica_ativos+1,w
   930  06DB  3E04               	addlw	4
   931  06DC  0084               	movwf	4
   932  06DD  3005               	movlw	5
   933  06DE  1383               	bcf	3,7	;select IRP bank0
   934  06DF  0280               	subwf	0,f
   935  06E0  0F84               	incfsz	4,f
   936  06E1  3000               	movlw	0
   937  06E2  1C03               	skipc
   938  06E3  0380               	decf	0,f
   939  06E4  0280               	subwf	0,f
   940  06E5  0384               	decf	4,f
   941  06E6  2EEA               	goto	l35
   942  06E7                     l33:
   943  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   944  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   945  06E9  1386               	bcf	6,7	;volatile
   946  06EA                     l35:
   947  06EA  0008               	return
   948  06EB                     __end_of_verifica_ativos:
   949                           
   950                           	psect	text2
   951  05F8                     __ptext2:	
   952 ;; *************** function ___bmul *****************
   953 ;; Defined at:
   954 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;  multiplier      1    wreg     unsigned char 
   957 ;;  multiplicand    1    0[COMMON] unsigned char 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  multiplier      1    3[COMMON] unsigned char 
   960 ;;  product         1    2[COMMON] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      unsigned char 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   970 ;;      Params:         1       0       0       0
   971 ;;      Locals:         2       0       0       0
   972 ;;      Temps:          1       0       0       0
   973 ;;      Totals:         4       0       0       0
   974 ;;Total ram usage:        4 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_main
   980 ;;		_verifica_ativos
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984  05F8                     ___bmul:	
   985                           ;psect for function ___bmul
   986                           
   987                           
   988                           ;incstack = 0
   989                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   990                           ;___bmul@multiplier stored from wreg
   991  05F8  00F3               	movwf	___bmul@multiplier
   992  05F9                     l709:
   993  05F9  01F2               	clrf	___bmul@product
   994  05FA                     l711:
   995  05FA  1C73               	btfss	___bmul@multiplier,0
   996  05FB  2DFD               	goto	u111
   997  05FC  2DFE               	goto	u110
   998  05FD                     u111:
   999  05FD  2E02               	goto	l715
  1000  05FE                     u110:
  1001  05FE                     l713:
  1002  05FE  0870               	movf	___bmul@multiplicand,w
  1003  05FF  00F1               	movwf	??___bmul
  1004  0600  0871               	movf	??___bmul,w
  1005  0601  07F2               	addwf	___bmul@product,f
  1006  0602                     l715:
  1007  0602  1003               	clrc
  1008  0603  0DF0               	rlf	___bmul@multiplicand,f
  1009  0604                     l717:
  1010  0604  1003               	clrc
  1011  0605  0CF3               	rrf	___bmul@multiplier,f
  1012  0606  0873               	movf	___bmul@multiplier,w
  1013  0607  1D03               	btfss	3,2
  1014  0608  2E0A               	goto	u121
  1015  0609  2E0B               	goto	u120
  1016  060A                     u121:
  1017  060A  2DFA               	goto	l711
  1018  060B                     u120:
  1019  060B                     l719:
  1020  060B  0872               	movf	___bmul@product,w
  1021  060C                     l147:
  1022  060C  0008               	return
  1023  060D                     __end_of___bmul:
  1024  007E                     btemp	set	126	;btemp
  1025  007E                     wtemp0	set	126
  1026                           
  1027                           	psect	idloc
  1028                           
  1029                           ;Config register IDLOC0 @ 0x2000
  1030                           ;	unspecified, using default values
  1031  2000                     	org	8192
  1032  2000  3FFF               	dw	16383
  1033                           
  1034                           ;Config register IDLOC1 @ 0x2001
  1035                           ;	unspecified, using default values
  1036  2001                     	org	8193
  1037  2001  3FFF               	dw	16383
  1038                           
  1039                           ;Config register IDLOC2 @ 0x2002
  1040                           ;	unspecified, using default values
  1041  2002                     	org	8194
  1042  2002  3FFF               	dw	16383
  1043                           
  1044                           ;Config register IDLOC3 @ 0x2003
  1045                           ;	unspecified, using default values
  1046  2003                     	org	8195
  1047  2003  3FFF               	dw	16383
  1048                           
  1049                           	psect	config
  1050                           
  1051                           ;Config register CONFIG @ 0x2007
  1052                           ;	Oscillator Selection bits
  1053                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1054                           ;	Watchdog Timer Enable bit
  1055                           ;	WDTE = OFF, WDT disabled
  1056                           ;	Power-up Timer Enable bit
  1057                           ;	PWRTE = OFF, PWRT disabled
  1058                           ;	RA5/MCLR/VPP Pin Function Select bit
  1059                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  1060                           ;	Brown-out Detect Enable bit
  1061                           ;	BOREN = OFF, BOD disabled
  1062                           ;	Low-Voltage Programming Enable bit
  1063                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1064                           ;	Data EE Memory Code Protection bit
  1065                           ;	CPD = OFF, Data memory code protection off
  1066                           ;	Flash Program Memory Code Protection bit
  1067                           ;	CP = OFF, Code protection off
  1068  2007                     	org	8199
  1069  2007  3F29               	dw	16169

Data Sizes:
    Strings     0
    Constant    0
    Data        72
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     80      80
    BANK1            80      6      78
    BANK2            48      0       6

Pointer List with Targets:

    verifica_ativos@matriz	PTR unsigned short [3] size(1) Largest target is 72
		 -> main@matriz_cores(BANK0[72]), 


Critical Paths under _main in COMMON

    _main->_verifica_ativos
    _verifica_ativos->___bmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                88    88      0    2142
                                             11 COMMON     2     2      0
                                              0 BANK0     80    80      0
                                              0 BANK1      6     6      0
                             ___bmul
                    _verifica_ativos
 ---------------------------------------------------------------------------------
 (1) _verifica_ativos                                      7     5      2     939
                                              4 COMMON     7     5      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     566
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   _verifica_ativos
     ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       6       9       12.5%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      6      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       3      100.0%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B1      10        0.0%
ABS                  0      0      B1       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 31 21:55:03 2022

                      pc 0002           ___bmul@product 0072                       l31 06B5  
                     l23 07B2                       l33 06E7                       l35 06EA  
                     l29 0683                       fsr 0004                      l147 060C  
                    l711 05FA                      l713 05FE                      l715 0602  
                    l731 069D                      l723 0656                      l717 0604  
                    l709 05F9                      l733 06A0                      l725 066C  
                    l741 06EB                      l719 060B                      l735 06B8  
                    l727 066F                      l751 070C                      l743 06F1  
                    l737 06CF                      l729 0686                      l761 0741  
                    l753 0714                      l745 0706                      l739 06D2  
                    l771 0760                      l763 0747                      l755 071E  
                    l747 0708                      l781 07A9                      l773 0770  
                    l765 074F                      l757 072A                      l749 070A  
                    l783 07B0                      l775 0783                      l767 0755  
                    l759 0736                      l785 07B4                      l769 075E  
                    l777 0796                      l787 07C4                      l779 079F  
                    l789 07D7                      u110 05FE                      u111 05FD  
                    u120 060B                      u200 07A9                      u121 060A  
                    u201 07A8                      u130 066C                      u131 066B  
                    u140 069D                      u141 069C                      u150 06CF  
                    u151 06CE                      u160 06F9                      u217 073C  
                    u170 0710                      u180 075E                      u181 075D  
                    u190 079F                      u191 079E                      fsr0 0004  
                    indf 0000              main@inicial 00E8                     _main 06EB  
                   btemp 007E                     start 0000        ___bmul@multiplier 0073  
       ?_verifica_ativos 0074                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086             main@loop_cor 007B                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EC  
           __end_of_main 07EC                   ??_main 0020                   ___bmul 05F8  
  verifica_ativos@matriz 007A  __end_of__initialization 07FE      ___bmul@multiplicand 0070  
         __pcstackCOMMON 0070             __pidataBANK1 060D               __pbssBANK2 0120  
             __pmaintext 06EB                  ?___bmul 0070           main@loop_atual 006C  
                __ptext1 0655                  __ptext2 05F8     end_of_initialization 07FE  
              _PORTBbits 0006           __end_of___bmul 060D         main@matriz_cores 0024  
    start_initialization 07EC        ??_verifica_ativos 0076                 ??___bmul 0071  
             init_fetch0 05E9              __pdataBANK1 00A0                ___latbits 0000  
          __pcstackBANK0 0020            __pcstackBANK1 00E8          _verifica_ativos 0655  
       main@ponteiro_cor 006E                 main@F510 0120                 main@F503 00A0  
               init_ram0 05ED  __end_of_verifica_ativos 06EB  verifica_ativos@ponteiro 0074  
